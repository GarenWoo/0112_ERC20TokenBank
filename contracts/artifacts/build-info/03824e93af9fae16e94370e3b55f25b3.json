{
	"id": "03824e93af9fae16e94370e3b55f25b3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/Address.sol\";\r\n\r\ninterface TokenRecipient {\r\n    function tokensReceived(address sender, uint amount) external returns (bool);\r\n}\r\n\r\ncontract ERC20TokenGTT is ERC20, ERC20Permit, ReentrancyGuard {\r\n    using Address for address;\r\n    address private owner;\r\n    error NotOwner(address caller);\r\n    event TokenMinted(uint amount, uint timestamp);\r\n\r\n    constructor() ERC20(\"Garen Test Token\", \"GTT\") ERC20Permit(\"Garen Test Token\") {\r\n        owner = msg.sender;\r\n        /// @dev Initial totalsupply is 100,000\r\n        _mint(msg.sender, 100000 * (10 ** uint256(decimals())));\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        if (msg.sender != owner) {\r\n            revert NotOwner(msg.sender);\r\n        }\r\n        _;\r\n    }\r\n\r\n    function mint(uint _amount) external onlyOwner {\r\n        _mint(msg.sender, _amount);\r\n        emit TokenMinted(_amount, block.timestamp);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Nonces.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol": {
				"ERC20TokenGTT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								}
							],
							"name": "NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "TokenMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":423:1169  contract ERC20TokenGTT is ERC20, ERC20Permit, ReentrancyGuard {... */\n  mstore(0x40, 0x0160)\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":644:875  constructor() ERC20(\"Garen Test Token\", \"GTT\") ERC20Permit(\"Garen Test Token\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1574:1626  constructor(string memory name) EIP712(name, \"1\") {} */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x10\n  dup2\n  mstore\n  0x20\n  add\n  0x476172656e205465737420546f6b656e00000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1613:1617  name */\n  dup1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3328:3759  constructor(string memory name, string memory version) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x10\n  dup2\n  mstore\n  0x20\n  add\n  0x476172656e205465737420546f6b656e00000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4754540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  tag_12\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3432:3445  _nameFallback */\n  0x05\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3405  name */\n  dup4\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3431  name.toShortStringWithFallback */\n  shl(0x20, tag_13)\n  swap1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3393:3446  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  tag_14\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3501:3517  _versionFallback */\n  0x06\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3474  version */\n  dup3\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3500  version.toShortStringWithFallback */\n  shl(0x20, tag_13)\n  swap1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3456:3518  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3558:3562  name */\n  dup2\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3542:3564  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3528:3564  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3607:3614  version */\n  dup1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3591:3616  keccak256(bytes(version)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3574:3616  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3644:3657  block.chainid */\n  chainid\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3627:3657  _cachedChainId = block.chainid */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\n  tag_15\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3713  _buildDomainSeparator */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3667:3715  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3747:3751  this */\n  address\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3725:3752  _cachedThis = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3328:3759  constructor(string memory name, string memory version) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1574:1626  constructor(string memory name) EIP712(name, \"1\") {} */\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1924  _status */\n  0x08\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1938  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":742:752  msg.sender */\n  caller\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":734:739  owner */\n  0x09\n  0x00\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":734:752  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":812:867  _mint(msg.sender, 100000 * (10 ** uint256(decimals()))) */\n  tag_20\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":818:828  msg.sender */\n  caller\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":854:864  decimals() */\n  tag_21\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":854:862  decimals */\n  shl(0x20, tag_22)\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":854:864  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":846:865  uint256(decimals()) */\n  0xff\n  and\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":840:842  10 */\n  0x0a\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":840:865  10 ** uint256(decimals()) */\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":830:836  100000 */\n  0x0186a0\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":830:866  100000 * (10 ** uint256(decimals())) */\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":812:817  _mint */\n  shl(0x20, tag_27)\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":812:867  _mint(msg.sender, 100000 * (10 ** uint256(decimals()))) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":423:1169  contract ERC20TokenGTT is ERC20, ERC20Permit, ReentrancyGuard {... */\n  jump(tag_28)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3010:3021  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3059:3061  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3043:3048  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3037:3056  bytes(value).length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3037:3061  bytes(value).length < 32 */\n  lt\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\n  iszero\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  tag_31\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3098:3103  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3097  toShortString */\n  shl(0x20, tag_32)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3077:3104  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_29)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3176:3181  value */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3167  StorageSlot.getStringSlot(store) */\n  tag_34\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3161:3166  store */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3160  StorageSlot.getStringSlot */\n  shl(0x20, tag_35)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3167  StorageSlot.getStringSlot(store) */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3173  StorageSlot.getStringSlot(store).value */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3181  StorageSlot.getStringSlot(store).value = value */\n  swap1\n  dup2\n  tag_36\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_36:\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3219:3236  FALLBACK_SENTINEL */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3195:3237  return ShortString.wrap(FALLBACK_SENTINEL) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_29:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n  mload(0xe0)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n  mload(0x0100)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n  chainid\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4278:4282  this */\n  address\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  add(0x20, mload(0x40))\n  tag_38\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_43\n  swap2\n  swap1\n  tag_44\n  jump\t// in\ntag_43:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_45\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_46)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1773:1784  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1796:1813  bytes memory bstr */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1822:1825  str */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1796:1826  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1854:1856  31 */\n  0x1f\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1844  bstr */\n  dup2\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1851  bstr.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1856  bstr.length > 31 */\n  gt\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\n  iszero\n  tag_48\n  jumpi\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1893:1896  str */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1879:1897  StringTooLong(str) */\n  mload(0x40)\n  0x305a27a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_49\n  swap2\n  swap1\n  tag_50\n  jump\t// in\ntag_49:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\ntag_48:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1974:1978  bstr */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1974:1985  bstr.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1965:1969  bstr */\n  dup2\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1957:1970  bytes32(bstr) */\n  tag_51\n  swap1\n  tag_52\n  jump\t// in\ntag_51:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1949:1971  uint256(bytes32(bstr)) */\n  0x00\n  shr\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1949:1985  uint256(bytes32(bstr)) | bstr.length */\n  or\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1941:1986  bytes32(uint256(bytes32(bstr)) | bstr.length) */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1917:1987  return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length)) */\n  swap2\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3135:3337  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3203:3223  StringSlot storage r */\n  0x00\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3311:3321  store.slot */\n  dup2\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3301:3321  r.slot := store.slot */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3135:3337  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_46:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_55\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_56\n  swap2\n  swap1\n  tag_57\n  jump\t// in\ntag_56:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_58)\ntag_55:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_59\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_60\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_61\n  jump\t// in\ntag_60:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_59:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_58:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_62\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_63)\ntag_62:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_63:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_64\n  swap2\n  swap1\n  tag_65\n  jump\t// in\ntag_64:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_66:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_67:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_68:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_69:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_108\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_108:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_109\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_110\n  tag_68\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":714:798   */\ntag_109:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_70:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_71:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_72:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_73:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_115\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_72\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":1429:1468   */\n  tag_116\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_72\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_74:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_75:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_76:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_120\n    /* \"#utility.yul\":1818:1852   */\n  tag_121\n    /* \"#utility.yul\":1827:1851   */\n  tag_122\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_74\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":1818:1852   */\n  tag_75\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":1800:1853   */\n  tag_74\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_77:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_78:\n    /* \"#utility.yul\":2056:2095   */\n  tag_125\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_76\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":2117:2208   */\n  tag_126\n    /* \"#utility.yul\":2166:2207   */\n  tag_127\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_77\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_73\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_79:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_80:\n    /* \"#utility.yul\":2377:2409   */\n  tag_130\n  tag_79\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":2418:2483   */\n  tag_131\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_78\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_81:\n    /* \"#utility.yul\":2555:2675   */\ntag_133:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_136\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_80\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_133)\ntag_135:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_82:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_139\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_70\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":2906:2935   */\n  tag_140\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_71\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_141:\n    /* \"#utility.yul\":3133:3213   */\n  tag_142\n    /* \"#utility.yul\":3189:3211   */\n  tag_143\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_71\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_81\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_138:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_83:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_84:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_146\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_83\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_85:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_148\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_84\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_9:\n    /* \"#utility.yul\":3950:3987   */\n  tag_150\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_66\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_152\n  tag_67\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":4038:4094   */\ntag_151:\n    /* \"#utility.yul\":4118:4156   */\n  tag_153\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_69\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":4203:4270   */\n  tag_154\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_82\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_156\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_157:\n    /* \"#utility.yul\":5144:5211   */\n  tag_158\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_85\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_155)\n    /* \"#utility.yul\":4365:4983   */\ntag_156:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_159\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_70\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_160:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_162\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_160)\ntag_162:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_164\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_84\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_163:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_155:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5414   */\ntag_86:\n    /* \"#utility.yul\":5282:5359   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5279:5280   */\n  0x00\n    /* \"#utility.yul\":5272:5360   */\n  mstore\n    /* \"#utility.yul\":5379:5383   */\n  0x11\n    /* \"#utility.yul\":5376:5377   */\n  0x04\n    /* \"#utility.yul\":5369:5384   */\n  mstore\n    /* \"#utility.yul\":5403:5407   */\n  0x24\n    /* \"#utility.yul\":5400:5401   */\n  0x00\n    /* \"#utility.yul\":5393:5408   */\n  revert\n    /* \"#utility.yul\":5420:5522   */\ntag_87:\n    /* \"#utility.yul\":5462:5470   */\n  0x00\n    /* \"#utility.yul\":5509:5514   */\n  dup2\n    /* \"#utility.yul\":5506:5507   */\n  0x01\n    /* \"#utility.yul\":5502:5515   */\n  shr\n    /* \"#utility.yul\":5481:5515   */\n  swap1\n  pop\n    /* \"#utility.yul\":5420:5522   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5528:6376   */\ntag_88:\n    /* \"#utility.yul\":5589:5594   */\n  0x00\n    /* \"#utility.yul\":5596:5600   */\n  dup1\n    /* \"#utility.yul\":5620:5626   */\n  dup3\n    /* \"#utility.yul\":5611:5626   */\n  swap2\n  pop\n    /* \"#utility.yul\":5644:5649   */\n  dup4\n    /* \"#utility.yul\":5635:5649   */\n  swap1\n  pop\n    /* \"#utility.yul\":5658:6370   */\ntag_168:\n    /* \"#utility.yul\":5679:5680   */\n  0x01\n    /* \"#utility.yul\":5669:5677   */\n  dup6\n    /* \"#utility.yul\":5666:5681   */\n  gt\n    /* \"#utility.yul\":5658:6370   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":5774:5778   */\n  dup1\n    /* \"#utility.yul\":5769:5772   */\n  dup7\n    /* \"#utility.yul\":5765:5779   */\n  div\n    /* \"#utility.yul\":5759:5763   */\n  dup2\n    /* \"#utility.yul\":5756:5780   */\n  gt\n    /* \"#utility.yul\":5753:5803   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":5783:5801   */\n  tag_172\n  tag_86\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":5753:5803   */\ntag_171:\n    /* \"#utility.yul\":5833:5834   */\n  0x01\n    /* \"#utility.yul\":5823:5831   */\n  dup6\n    /* \"#utility.yul\":5819:5835   */\n  and\n    /* \"#utility.yul\":5816:6267   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":6248:6252   */\n  dup1\n    /* \"#utility.yul\":6241:6246   */\n  dup3\n    /* \"#utility.yul\":6237:6253   */\n  mul\n    /* \"#utility.yul\":6228:6253   */\n  swap2\n  pop\n    /* \"#utility.yul\":5816:6267   */\ntag_173:\n    /* \"#utility.yul\":6298:6302   */\n  dup1\n    /* \"#utility.yul\":6292:6296   */\n  dup2\n    /* \"#utility.yul\":6288:6303   */\n  mul\n    /* \"#utility.yul\":6280:6303   */\n  swap1\n  pop\n    /* \"#utility.yul\":6328:6360   */\n  tag_174\n    /* \"#utility.yul\":6351:6359   */\n  dup6\n    /* \"#utility.yul\":6328:6360   */\n  tag_87\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":6316:6360   */\n  swap5\n  pop\n    /* \"#utility.yul\":5658:6370   */\n  jump(tag_168)\ntag_170:\n    /* \"#utility.yul\":5528:6376   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6382:7455   */\ntag_89:\n    /* \"#utility.yul\":6436:6441   */\n  0x00\n    /* \"#utility.yul\":6627:6635   */\n  dup3\n    /* \"#utility.yul\":6617:6657   */\n  tag_176\n  jumpi\n    /* \"#utility.yul\":6648:6649   */\n  0x01\n    /* \"#utility.yul\":6639:6649   */\n  swap1\n  pop\n    /* \"#utility.yul\":6650:6655   */\n  jump(tag_175)\n    /* \"#utility.yul\":6617:6657   */\ntag_176:\n    /* \"#utility.yul\":6676:6680   */\n  dup2\n    /* \"#utility.yul\":6666:6702   */\n  tag_177\n  jumpi\n    /* \"#utility.yul\":6693:6694   */\n  0x00\n    /* \"#utility.yul\":6684:6694   */\n  swap1\n  pop\n    /* \"#utility.yul\":6695:6700   */\n  jump(tag_175)\n    /* \"#utility.yul\":6666:6702   */\ntag_177:\n    /* \"#utility.yul\":6762:6766   */\n  dup2\n    /* \"#utility.yul\":6810:6811   */\n  0x01\n    /* \"#utility.yul\":6805:6832   */\n  dup2\n  eq\n  tag_179\n  jumpi\n    /* \"#utility.yul\":6846:6847   */\n  0x02\n    /* \"#utility.yul\":6841:7032   */\n  dup2\n  eq\n  tag_180\n  jumpi\n    /* \"#utility.yul\":6755:7032   */\n  jump(tag_178)\n    /* \"#utility.yul\":6805:6832   */\ntag_179:\n    /* \"#utility.yul\":6823:6824   */\n  0x01\n    /* \"#utility.yul\":6814:6824   */\n  swap2\n  pop\n    /* \"#utility.yul\":6825:6830   */\n  pop\n  jump(tag_175)\n    /* \"#utility.yul\":6841:7032   */\ntag_180:\n    /* \"#utility.yul\":6886:6889   */\n  0xff\n    /* \"#utility.yul\":6876:6884   */\n  dup5\n    /* \"#utility.yul\":6873:6890   */\n  gt\n    /* \"#utility.yul\":6870:6913   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":6893:6911   */\n  tag_182\n  tag_86\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":6870:6913   */\ntag_181:\n    /* \"#utility.yul\":6942:6950   */\n  dup4\n    /* \"#utility.yul\":6939:6940   */\n  0x02\n    /* \"#utility.yul\":6935:6951   */\n  exp\n    /* \"#utility.yul\":6926:6951   */\n  swap2\n  pop\n    /* \"#utility.yul\":6977:6980   */\n  dup5\n    /* \"#utility.yul\":6970:6975   */\n  dup3\n    /* \"#utility.yul\":6967:6981   */\n  gt\n    /* \"#utility.yul\":6964:7004   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":6984:7002   */\n  tag_184\n  tag_86\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":6964:7004   */\ntag_183:\n    /* \"#utility.yul\":7017:7022   */\n  pop\n  jump(tag_175)\n    /* \"#utility.yul\":6755:7032   */\ntag_178:\n  pop\n    /* \"#utility.yul\":7141:7143   */\n  0x20\n    /* \"#utility.yul\":7131:7139   */\n  dup4\n    /* \"#utility.yul\":7128:7144   */\n  lt\n    /* \"#utility.yul\":7122:7125   */\n  0x0133\n    /* \"#utility.yul\":7116:7120   */\n  dup4\n    /* \"#utility.yul\":7113:7126   */\n  lt\n    /* \"#utility.yul\":7109:7145   */\n  and\n    /* \"#utility.yul\":7091:7093   */\n  0x4e\n    /* \"#utility.yul\":7081:7089   */\n  dup5\n    /* \"#utility.yul\":7078:7094   */\n  lt\n    /* \"#utility.yul\":7073:7075   */\n  0x0b\n    /* \"#utility.yul\":7067:7071   */\n  dup5\n    /* \"#utility.yul\":7064:7076   */\n  lt\n    /* \"#utility.yul\":7060:7095   */\n  and\n    /* \"#utility.yul\":7044:7155   */\n  or\n    /* \"#utility.yul\":7041:7287   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":7197:7205   */\n  dup3\n    /* \"#utility.yul\":7191:7195   */\n  dup3\n    /* \"#utility.yul\":7187:7206   */\n  exp\n    /* \"#utility.yul\":7178:7206   */\n  swap1\n  pop\n    /* \"#utility.yul\":7232:7235   */\n  dup4\n    /* \"#utility.yul\":7225:7230   */\n  dup2\n    /* \"#utility.yul\":7222:7236   */\n  gt\n    /* \"#utility.yul\":7219:7259   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":7239:7257   */\n  tag_187\n  tag_86\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":7219:7259   */\ntag_186:\n    /* \"#utility.yul\":7272:7277   */\n  jump(tag_175)\n    /* \"#utility.yul\":7041:7287   */\ntag_185:\n    /* \"#utility.yul\":7312:7354   */\n  tag_188\n    /* \"#utility.yul\":7350:7353   */\n  dup5\n    /* \"#utility.yul\":7340:7348   */\n  dup5\n    /* \"#utility.yul\":7334:7338   */\n  dup5\n    /* \"#utility.yul\":7331:7332   */\n  0x01\n    /* \"#utility.yul\":7312:7354   */\n  tag_88\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":7297:7354   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":7386:7390   */\n  dup2\n    /* \"#utility.yul\":7381:7384   */\n  dup5\n    /* \"#utility.yul\":7377:7391   */\n  div\n    /* \"#utility.yul\":7370:7375   */\n  dup2\n    /* \"#utility.yul\":7367:7392   */\n  gt\n    /* \"#utility.yul\":7364:7415   */\n  iszero\n  tag_189\n  jumpi\n    /* \"#utility.yul\":7395:7413   */\n  tag_190\n  tag_86\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":7364:7415   */\ntag_189:\n    /* \"#utility.yul\":7444:7448   */\n  dup2\n    /* \"#utility.yul\":7437:7442   */\n  dup2\n    /* \"#utility.yul\":7433:7449   */\n  mul\n    /* \"#utility.yul\":7424:7449   */\n  swap1\n  pop\n    /* \"#utility.yul\":6382:7455   */\ntag_175:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7461:7746   */\ntag_24:\n    /* \"#utility.yul\":7521:7526   */\n  0x00\n    /* \"#utility.yul\":7545:7568   */\n  tag_192\n    /* \"#utility.yul\":7563:7567   */\n  dup3\n    /* \"#utility.yul\":7545:7568   */\n  tag_74\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":7537:7568   */\n  swap2\n  pop\n    /* \"#utility.yul\":7589:7616   */\n  tag_193\n    /* \"#utility.yul\":7607:7615   */\n  dup4\n    /* \"#utility.yul\":7589:7616   */\n  tag_74\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":7577:7616   */\n  swap3\n  pop\n    /* \"#utility.yul\":7635:7739   */\n  tag_194\n    /* \"#utility.yul\":7672:7738   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":7662:7670   */\n  dup5\n    /* \"#utility.yul\":7656:7660   */\n  dup5\n    /* \"#utility.yul\":7635:7739   */\n  tag_89\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":7626:7739   */\n  swap1\n  pop\n    /* \"#utility.yul\":7461:7746   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7752:8162   */\ntag_26:\n    /* \"#utility.yul\":7792:7799   */\n  0x00\n    /* \"#utility.yul\":7815:7835   */\n  tag_196\n    /* \"#utility.yul\":7833:7834   */\n  dup3\n    /* \"#utility.yul\":7815:7835   */\n  tag_74\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":7810:7835   */\n  swap2\n  pop\n    /* \"#utility.yul\":7849:7869   */\n  tag_197\n    /* \"#utility.yul\":7867:7868   */\n  dup4\n    /* \"#utility.yul\":7849:7869   */\n  tag_74\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":7844:7869   */\n  swap3\n  pop\n    /* \"#utility.yul\":7904:7905   */\n  dup3\n    /* \"#utility.yul\":7901:7902   */\n  dup3\n    /* \"#utility.yul\":7897:7906   */\n  mul\n    /* \"#utility.yul\":7926:7956   */\n  tag_198\n    /* \"#utility.yul\":7944:7955   */\n  dup2\n    /* \"#utility.yul\":7926:7956   */\n  tag_74\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":7915:7956   */\n  swap2\n  pop\n    /* \"#utility.yul\":8105:8106   */\n  dup3\n    /* \"#utility.yul\":8096:8103   */\n  dup3\n    /* \"#utility.yul\":8092:8107   */\n  div\n    /* \"#utility.yul\":8089:8090   */\n  dup5\n    /* \"#utility.yul\":8086:8108   */\n  eq\n    /* \"#utility.yul\":8066:8067   */\n  dup4\n    /* \"#utility.yul\":8059:8068   */\n  iszero\n    /* \"#utility.yul\":8039:8122   */\n  or\n    /* \"#utility.yul\":8016:8155   */\n  tag_199\n  jumpi\n    /* \"#utility.yul\":8135:8153   */\n  tag_200\n  tag_86\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":8016:8155   */\ntag_199:\n    /* \"#utility.yul\":7800:8162   */\n  pop\n    /* \"#utility.yul\":7752:8162   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8168:8245   */\ntag_90:\n    /* \"#utility.yul\":8205:8212   */\n  0x00\n    /* \"#utility.yul\":8234:8239   */\n  dup2\n    /* \"#utility.yul\":8223:8239   */\n  swap1\n  pop\n    /* \"#utility.yul\":8168:8245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8251:8369   */\ntag_91:\n    /* \"#utility.yul\":8338:8362   */\n  tag_203\n    /* \"#utility.yul\":8356:8361   */\n  dup2\n    /* \"#utility.yul\":8338:8362   */\n  tag_90\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":8333:8336   */\n  dup3\n    /* \"#utility.yul\":8326:8363   */\n  mstore\n    /* \"#utility.yul\":8251:8369   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8375:8493   */\ntag_92:\n    /* \"#utility.yul\":8462:8486   */\n  tag_205\n    /* \"#utility.yul\":8480:8485   */\n  dup2\n    /* \"#utility.yul\":8462:8486   */\n  tag_74\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":8457:8460   */\n  dup3\n    /* \"#utility.yul\":8450:8487   */\n  mstore\n    /* \"#utility.yul\":8375:8493   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8499:8625   */\ntag_93:\n    /* \"#utility.yul\":8536:8543   */\n  0x00\n    /* \"#utility.yul\":8576:8618   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8569:8574   */\n  dup3\n    /* \"#utility.yul\":8565:8619   */\n  and\n    /* \"#utility.yul\":8554:8619   */\n  swap1\n  pop\n    /* \"#utility.yul\":8499:8625   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8631:8727   */\ntag_94:\n    /* \"#utility.yul\":8668:8675   */\n  0x00\n    /* \"#utility.yul\":8697:8721   */\n  tag_208\n    /* \"#utility.yul\":8715:8720   */\n  dup3\n    /* \"#utility.yul\":8697:8721   */\n  tag_93\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":8686:8721   */\n  swap1\n  pop\n    /* \"#utility.yul\":8631:8727   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8733:8851   */\ntag_95:\n    /* \"#utility.yul\":8820:8844   */\n  tag_210\n    /* \"#utility.yul\":8838:8843   */\n  dup2\n    /* \"#utility.yul\":8820:8844   */\n  tag_94\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":8815:8818   */\n  dup3\n    /* \"#utility.yul\":8808:8845   */\n  mstore\n    /* \"#utility.yul\":8733:8851   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8857:9521   */\ntag_39:\n    /* \"#utility.yul\":9062:9066   */\n  0x00\n    /* \"#utility.yul\":9100:9103   */\n  0xa0\n    /* \"#utility.yul\":9089:9098   */\n  dup3\n    /* \"#utility.yul\":9085:9104   */\n  add\n    /* \"#utility.yul\":9077:9104   */\n  swap1\n  pop\n    /* \"#utility.yul\":9114:9185   */\n  tag_212\n    /* \"#utility.yul\":9182:9183   */\n  0x00\n    /* \"#utility.yul\":9171:9180   */\n  dup4\n    /* \"#utility.yul\":9167:9184   */\n  add\n    /* \"#utility.yul\":9158:9164   */\n  dup9\n    /* \"#utility.yul\":9114:9185   */\n  tag_91\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":9195:9267   */\n  tag_213\n    /* \"#utility.yul\":9263:9265   */\n  0x20\n    /* \"#utility.yul\":9252:9261   */\n  dup4\n    /* \"#utility.yul\":9248:9266   */\n  add\n    /* \"#utility.yul\":9239:9245   */\n  dup8\n    /* \"#utility.yul\":9195:9267   */\n  tag_91\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":9277:9349   */\n  tag_214\n    /* \"#utility.yul\":9345:9347   */\n  0x40\n    /* \"#utility.yul\":9334:9343   */\n  dup4\n    /* \"#utility.yul\":9330:9348   */\n  add\n    /* \"#utility.yul\":9321:9327   */\n  dup7\n    /* \"#utility.yul\":9277:9349   */\n  tag_91\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":9359:9431   */\n  tag_215\n    /* \"#utility.yul\":9427:9429   */\n  0x60\n    /* \"#utility.yul\":9416:9425   */\n  dup4\n    /* \"#utility.yul\":9412:9430   */\n  add\n    /* \"#utility.yul\":9403:9409   */\n  dup6\n    /* \"#utility.yul\":9359:9431   */\n  tag_92\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":9441:9514   */\n  tag_216\n    /* \"#utility.yul\":9509:9512   */\n  0x80\n    /* \"#utility.yul\":9498:9507   */\n  dup4\n    /* \"#utility.yul\":9494:9513   */\n  add\n    /* \"#utility.yul\":9485:9491   */\n  dup5\n    /* \"#utility.yul\":9441:9514   */\n  tag_95\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":8857:9521   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9527:9749   */\ntag_44:\n    /* \"#utility.yul\":9620:9624   */\n  0x00\n    /* \"#utility.yul\":9658:9660   */\n  0x20\n    /* \"#utility.yul\":9647:9656   */\n  dup3\n    /* \"#utility.yul\":9643:9661   */\n  add\n    /* \"#utility.yul\":9635:9661   */\n  swap1\n  pop\n    /* \"#utility.yul\":9671:9742   */\n  tag_218\n    /* \"#utility.yul\":9739:9740   */\n  0x00\n    /* \"#utility.yul\":9728:9737   */\n  dup4\n    /* \"#utility.yul\":9724:9741   */\n  add\n    /* \"#utility.yul\":9715:9721   */\n  dup5\n    /* \"#utility.yul\":9671:9742   */\n  tag_95\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":9527:9749   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9755:9924   */\ntag_96:\n    /* \"#utility.yul\":9839:9850   */\n  0x00\n    /* \"#utility.yul\":9873:9879   */\n  dup3\n    /* \"#utility.yul\":9868:9871   */\n  dup3\n    /* \"#utility.yul\":9861:9880   */\n  mstore\n    /* \"#utility.yul\":9913:9917   */\n  0x20\n    /* \"#utility.yul\":9908:9911   */\n  dup3\n    /* \"#utility.yul\":9904:9918   */\n  add\n    /* \"#utility.yul\":9889:9918   */\n  swap1\n  pop\n    /* \"#utility.yul\":9755:9924   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9930:10176   */\ntag_97:\n    /* \"#utility.yul\":10011:10012   */\n  0x00\n    /* \"#utility.yul\":10021:10134   */\ntag_221:\n    /* \"#utility.yul\":10035:10041   */\n  dup4\n    /* \"#utility.yul\":10032:10033   */\n  dup2\n    /* \"#utility.yul\":10029:10042   */\n  lt\n    /* \"#utility.yul\":10021:10134   */\n  iszero\n  tag_223\n  jumpi\n    /* \"#utility.yul\":10120:10121   */\n  dup1\n    /* \"#utility.yul\":10115:10118   */\n  dup3\n    /* \"#utility.yul\":10111:10122   */\n  add\n    /* \"#utility.yul\":10105:10123   */\n  mload\n    /* \"#utility.yul\":10101:10102   */\n  dup2\n    /* \"#utility.yul\":10096:10099   */\n  dup5\n    /* \"#utility.yul\":10092:10103   */\n  add\n    /* \"#utility.yul\":10085:10124   */\n  mstore\n    /* \"#utility.yul\":10057:10059   */\n  0x20\n    /* \"#utility.yul\":10054:10055   */\n  dup2\n    /* \"#utility.yul\":10050:10060   */\n  add\n    /* \"#utility.yul\":10045:10060   */\n  swap1\n  pop\n    /* \"#utility.yul\":10021:10134   */\n  jump(tag_221)\ntag_223:\n    /* \"#utility.yul\":10168:10169   */\n  0x00\n    /* \"#utility.yul\":10159:10165   */\n  dup5\n    /* \"#utility.yul\":10154:10157   */\n  dup5\n    /* \"#utility.yul\":10150:10166   */\n  add\n    /* \"#utility.yul\":10143:10170   */\n  mstore\n    /* \"#utility.yul\":9992:10176   */\n  pop\n    /* \"#utility.yul\":9930:10176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10182:10284   */\ntag_98:\n    /* \"#utility.yul\":10223:10229   */\n  0x00\n    /* \"#utility.yul\":10274:10276   */\n  0x1f\n    /* \"#utility.yul\":10270:10277   */\n  not\n    /* \"#utility.yul\":10265:10267   */\n  0x1f\n    /* \"#utility.yul\":10258:10263   */\n  dup4\n    /* \"#utility.yul\":10254:10268   */\n  add\n    /* \"#utility.yul\":10250:10278   */\n  and\n    /* \"#utility.yul\":10240:10278   */\n  swap1\n  pop\n    /* \"#utility.yul\":10182:10284   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10290:10667   */\ntag_99:\n    /* \"#utility.yul\":10378:10381   */\n  0x00\n    /* \"#utility.yul\":10406:10445   */\n  tag_226\n    /* \"#utility.yul\":10439:10444   */\n  dup3\n    /* \"#utility.yul\":10406:10445   */\n  tag_66\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":10461:10532   */\n  tag_227\n    /* \"#utility.yul\":10525:10531   */\n  dup2\n    /* \"#utility.yul\":10520:10523   */\n  dup6\n    /* \"#utility.yul\":10461:10532   */\n  tag_96\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":10454:10532   */\n  swap4\n  pop\n    /* \"#utility.yul\":10541:10606   */\n  tag_228\n    /* \"#utility.yul\":10599:10605   */\n  dup2\n    /* \"#utility.yul\":10594:10597   */\n  dup6\n    /* \"#utility.yul\":10587:10591   */\n  0x20\n    /* \"#utility.yul\":10580:10585   */\n  dup7\n    /* \"#utility.yul\":10576:10592   */\n  add\n    /* \"#utility.yul\":10541:10606   */\n  tag_97\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":10631:10660   */\n  tag_229\n    /* \"#utility.yul\":10653:10659   */\n  dup2\n    /* \"#utility.yul\":10631:10660   */\n  tag_98\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":10626:10629   */\n  dup5\n    /* \"#utility.yul\":10622:10661   */\n  add\n    /* \"#utility.yul\":10615:10661   */\n  swap2\n  pop\n    /* \"#utility.yul\":10382:10667   */\n  pop\n    /* \"#utility.yul\":10290:10667   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10673:10986   */\ntag_50:\n    /* \"#utility.yul\":10786:10790   */\n  0x00\n    /* \"#utility.yul\":10824:10826   */\n  0x20\n    /* \"#utility.yul\":10813:10822   */\n  dup3\n    /* \"#utility.yul\":10809:10827   */\n  add\n    /* \"#utility.yul\":10801:10827   */\n  swap1\n  pop\n    /* \"#utility.yul\":10873:10882   */\n  dup2\n    /* \"#utility.yul\":10867:10871   */\n  dup2\n    /* \"#utility.yul\":10863:10883   */\n  sub\n    /* \"#utility.yul\":10859:10860   */\n  0x00\n    /* \"#utility.yul\":10848:10857   */\n  dup4\n    /* \"#utility.yul\":10844:10861   */\n  add\n    /* \"#utility.yul\":10837:10884   */\n  mstore\n    /* \"#utility.yul\":10901:10979   */\n  tag_231\n    /* \"#utility.yul\":10974:10978   */\n  dup2\n    /* \"#utility.yul\":10965:10971   */\n  dup5\n    /* \"#utility.yul\":10901:10979   */\n  tag_99\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":10893:10979   */\n  swap1\n  pop\n    /* \"#utility.yul\":10673:10986   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10992:11090   */\ntag_100:\n    /* \"#utility.yul\":11043:11049   */\n  0x00\n    /* \"#utility.yul\":11077:11082   */\n  dup2\n    /* \"#utility.yul\":11071:11083   */\n  mload\n    /* \"#utility.yul\":11061:11083   */\n  swap1\n  pop\n    /* \"#utility.yul\":10992:11090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11096:11212   */\ntag_101:\n    /* \"#utility.yul\":11147:11151   */\n  0x00\n    /* \"#utility.yul\":11170:11173   */\n  dup2\n    /* \"#utility.yul\":11162:11173   */\n  swap1\n  pop\n    /* \"#utility.yul\":11200:11204   */\n  0x20\n    /* \"#utility.yul\":11195:11198   */\n  dup3\n    /* \"#utility.yul\":11191:11205   */\n  add\n    /* \"#utility.yul\":11183:11205   */\n  swap1\n  pop\n    /* \"#utility.yul\":11096:11212   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11218:11372   */\ntag_102:\n    /* \"#utility.yul\":11261:11272   */\n  0x00\n    /* \"#utility.yul\":11297:11326   */\n  tag_235\n    /* \"#utility.yul\":11321:11324   */\n  dup3\n    /* \"#utility.yul\":11315:11325   */\n  mload\n    /* \"#utility.yul\":11297:11326   */\n  tag_90\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":11360:11365   */\n  dup1\n    /* \"#utility.yul\":11336:11365   */\n  swap2\n  pop\n    /* \"#utility.yul\":11273:11372   */\n  pop\n    /* \"#utility.yul\":11218:11372   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11378:11972   */\ntag_52:\n    /* \"#utility.yul\":11462:11467   */\n  0x00\n    /* \"#utility.yul\":11493:11531   */\n  tag_237\n    /* \"#utility.yul\":11525:11530   */\n  dup3\n    /* \"#utility.yul\":11493:11531   */\n  tag_100\n  jump\t// in\ntag_237:\n    /* \"#utility.yul\":11556:11561   */\n  dup3\n    /* \"#utility.yul\":11583:11623   */\n  tag_238\n    /* \"#utility.yul\":11617:11622   */\n  dup5\n    /* \"#utility.yul\":11583:11623   */\n  tag_101\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":11571:11623   */\n  swap1\n  pop\n    /* \"#utility.yul\":11642:11677   */\n  tag_239\n    /* \"#utility.yul\":11668:11676   */\n  dup2\n    /* \"#utility.yul\":11642:11677   */\n  tag_102\n  jump\t// in\ntag_239:\n    /* \"#utility.yul\":11633:11677   */\n  swap3\n  pop\n    /* \"#utility.yul\":11701:11703   */\n  0x20\n    /* \"#utility.yul\":11693:11699   */\n  dup3\n    /* \"#utility.yul\":11690:11704   */\n  lt\n    /* \"#utility.yul\":11687:11965   */\n  iszero\n  tag_240\n  jumpi\n    /* \"#utility.yul\":11772:11941   */\n  tag_241\n    /* \"#utility.yul\":11857:11923   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":11827:11833   */\n  dup4\n    /* \"#utility.yul\":11823:11825   */\n  0x20\n    /* \"#utility.yul\":11819:11834   */\n  sub\n    /* \"#utility.yul\":11816:11817   */\n  0x08\n    /* \"#utility.yul\":11812:11835   */\n  mul\n    /* \"#utility.yul\":11772:11941   */\n  tag_72\n  jump\t// in\ntag_241:\n    /* \"#utility.yul\":11749:11754   */\n  dup4\n    /* \"#utility.yul\":11728:11955   */\n  and\n    /* \"#utility.yul\":11719:11955   */\n  swap3\n  pop\n    /* \"#utility.yul\":11687:11965   */\ntag_240:\n    /* \"#utility.yul\":11468:11972   */\n  pop\n  pop\n    /* \"#utility.yul\":11378:11972   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11978:12169   */\ntag_57:\n    /* \"#utility.yul\":12018:12021   */\n  0x00\n    /* \"#utility.yul\":12037:12057   */\n  tag_243\n    /* \"#utility.yul\":12055:12056   */\n  dup3\n    /* \"#utility.yul\":12037:12057   */\n  tag_74\n  jump\t// in\ntag_243:\n    /* \"#utility.yul\":12032:12057   */\n  swap2\n  pop\n    /* \"#utility.yul\":12071:12091   */\n  tag_244\n    /* \"#utility.yul\":12089:12090   */\n  dup4\n    /* \"#utility.yul\":12071:12091   */\n  tag_74\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":12066:12091   */\n  swap3\n  pop\n    /* \"#utility.yul\":12114:12115   */\n  dup3\n    /* \"#utility.yul\":12111:12112   */\n  dup3\n    /* \"#utility.yul\":12107:12116   */\n  add\n    /* \"#utility.yul\":12100:12116   */\n  swap1\n  pop\n    /* \"#utility.yul\":12135:12138   */\n  dup1\n    /* \"#utility.yul\":12132:12133   */\n  dup3\n    /* \"#utility.yul\":12129:12139   */\n  gt\n    /* \"#utility.yul\":12126:12162   */\n  iszero\n  tag_245\n  jumpi\n    /* \"#utility.yul\":12142:12160   */\n  tag_246\n  tag_86\n  jump\t// in\ntag_246:\n    /* \"#utility.yul\":12126:12162   */\ntag_245:\n    /* \"#utility.yul\":11978:12169   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12175:12617   */\ntag_61:\n    /* \"#utility.yul\":12324:12328   */\n  0x00\n    /* \"#utility.yul\":12362:12364   */\n  0x60\n    /* \"#utility.yul\":12351:12360   */\n  dup3\n    /* \"#utility.yul\":12347:12365   */\n  add\n    /* \"#utility.yul\":12339:12365   */\n  swap1\n  pop\n    /* \"#utility.yul\":12375:12446   */\n  tag_248\n    /* \"#utility.yul\":12443:12444   */\n  0x00\n    /* \"#utility.yul\":12432:12441   */\n  dup4\n    /* \"#utility.yul\":12428:12445   */\n  add\n    /* \"#utility.yul\":12419:12425   */\n  dup7\n    /* \"#utility.yul\":12375:12446   */\n  tag_95\n  jump\t// in\ntag_248:\n    /* \"#utility.yul\":12456:12528   */\n  tag_249\n    /* \"#utility.yul\":12524:12526   */\n  0x20\n    /* \"#utility.yul\":12513:12522   */\n  dup4\n    /* \"#utility.yul\":12509:12527   */\n  add\n    /* \"#utility.yul\":12500:12506   */\n  dup6\n    /* \"#utility.yul\":12456:12528   */\n  tag_92\n  jump\t// in\ntag_249:\n    /* \"#utility.yul\":12538:12610   */\n  tag_250\n    /* \"#utility.yul\":12606:12608   */\n  0x40\n    /* \"#utility.yul\":12595:12604   */\n  dup4\n    /* \"#utility.yul\":12591:12609   */\n  add\n    /* \"#utility.yul\":12582:12588   */\n  dup5\n    /* \"#utility.yul\":12538:12610   */\n  tag_92\n  jump\t// in\ntag_250:\n    /* \"#utility.yul\":12175:12617   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12623:12845   */\ntag_65:\n    /* \"#utility.yul\":12716:12720   */\n  0x00\n    /* \"#utility.yul\":12754:12756   */\n  0x20\n    /* \"#utility.yul\":12743:12752   */\n  dup3\n    /* \"#utility.yul\":12739:12757   */\n  add\n    /* \"#utility.yul\":12731:12757   */\n  swap1\n  pop\n    /* \"#utility.yul\":12767:12838   */\n  tag_252\n    /* \"#utility.yul\":12835:12836   */\n  0x00\n    /* \"#utility.yul\":12824:12833   */\n  dup4\n    /* \"#utility.yul\":12820:12837   */\n  add\n    /* \"#utility.yul\":12811:12817   */\n  dup5\n    /* \"#utility.yul\":12767:12838   */\n  tag_92\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":12623:12845   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":423:1169  contract ERC20TokenGTT is ERC20, ERC20Permit, ReentrancyGuard {... */\ntag_28:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x5f16a9a75b8cdf579ff288b3f8e4aadbaebf33539193013b563b5d2afc5fb775\")\n  0x00\n  assignImmutable(\"0x08bdd9b53746b3d3d49a5b887b4db8bce05b5638cb7c2c29493ae15671c8080f\")\n  0x00\n  assignImmutable(\"0x764729bae1eb91b473d69237ce1d491301f68dd17d5e99d329348e4c0ce2622d\")\n  0x00\n  assignImmutable(\"0x1028edde2c11714e8c602dbf2f11ca68edc9e460f5ce0b1cfccd007f7766ad4a\")\n  0x00\n  assignImmutable(\"0xa22ac9802f4f4d38724c19fb8e2fcf588c0066914ae6269b44c96a5ca130a1bd\")\n  0x00\n  assignImmutable(\"0x62c04aa2ba983f68d24f36f1071519a5da6efcb7e8fd8ffeea96be718d6b9857\")\n  0x00\n  assignImmutable(\"0x6b1c649d76d82d7ec684938eb8cf812da931da1f103e41a152e94b0751f753d5\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":423:1169  contract ERC20TokenGTT is ERC20, ERC20Permit, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7ecebe00\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa0712d68\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x7ecebe00\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2656:2768  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_8:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2406:2549  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":1021:1166  function mint(uint _amount) external onlyOwner {... */\n    tag_13:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1680:2352  function permit(... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2656:2768  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2715:2722  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2741:2761  _domainSeparatorV4() */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2741:2759  _domainSeparatorV4 */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2741:2761  _domainSeparatorV4() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2734:2761  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2656:2768  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2406:2549  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2497:2504  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2523:2542  super.nonces(owner) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2536:2541  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2523:2535  super.nonces */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2523:2542  super.nonces(owner) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2516:2542  return super.nonces(owner) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2406:2549  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_57:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5242:5255  bytes1 fields */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5269:5287  string memory name */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5301:5322  string memory version */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5336:5351  uint256 chainId */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5365:5390  address verifyingContract */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5404:5416  bytes32 salt */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5430:5457  uint256[] memory extensions */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      tag_108\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5544  _EIP712Name */\n      tag_109\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      tag_110\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5574  _EIP712Version */\n      tag_111\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5590:5603  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5625:5629  this */\n      address\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5652:5653  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5644:5654  bytes32(0) */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5682:5683  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5668:5684  new uint256[](0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_112\n      jumpi\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n    tag_112:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_115\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_115:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5482:5694  return (... */\n      0x0f00000000000000000000000000000000000000000000000000000000000000\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_82\n      jump\t// in\n    tag_117:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_118\n      swap1\n      tag_82\n      jump\t// in\n    tag_118:\n      dup1\n      iszero\n      tag_119\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_120\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_119)\n    tag_120:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_121:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_121\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":1021:1166  function mint(uint _amount) external onlyOwner {... */\n    tag_66:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":933:938  owner */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":919:938  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":919:929  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":919:938  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":915:994  if (msg.sender != owner) {... */\n      tag_123\n      jumpi\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":971:981  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":962:982  NotOwner(msg.sender) */\n      mload(0x40)\n      0x245aecd300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":915:994  if (msg.sender != owner) {... */\n    tag_123:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":1079:1105  _mint(msg.sender, _amount) */\n      tag_127\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":1085:1095  msg.sender */\n      caller\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":1097:1104  _amount */\n      dup3\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":1079:1084  _mint */\n      tag_128\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":1079:1105  _mint(msg.sender, _amount) */\n      jump\t// in\n    tag_127:\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":1121:1158  TokenMinted(_amount, block.timestamp) */\n      0x5f7666687319b40936f33c188908d86aea154abd3f4127b4fa0a3f04f303c7da\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":1133:1140  _amount */\n      dup2\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":1142:1157  block.timestamp */\n      timestamp\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":1121:1158  TokenMinted(_amount, block.timestamp) */\n      mload(0x40)\n      tag_129\n      swap3\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":1021:1166  function mint(uint _amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1680:2352  function permit(... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1901:1909  deadline */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1883:1898  block.timestamp */\n      timestamp\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1883:1909  block.timestamp > deadline */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1879:1976  if (block.timestamp > deadline) {... */\n      iszero\n      tag_135\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1956:1964  deadline */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1932:1965  ERC2612ExpiredSignature(deadline) */\n      mload(0x40)\n      0x6279130200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1879:1976  if (block.timestamp > deadline) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1986:2004  bytes32 structHash */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1022:1117  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2045:2050  owner */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2052:2059  spender */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2061:2066  value */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2068:2084  _useNonce(owner) */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2078:2083  owner */\n      dup13\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2068:2077  _useNonce */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2068:2084  _useNonce(owner) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2086:2094  deadline */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2017:2095  abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      add(0x20, mload(0x40))\n      tag_139\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2007:2096  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1986:2096  bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2107:2119  bytes32 hash */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2122:2150  _hashTypedDataV4(structHash) */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2139:2149  structHash */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2122:2138  _hashTypedDataV4 */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2122:2150  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2107:2150  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2161:2175  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2178:2206  ECDSA.recover(hash, v, r, s) */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2192:2196  hash */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2198:2199  v */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2201:2202  r */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2204:2205  s */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2178:2191  ECDSA.recover */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2178:2206  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2161:2206  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2230:2235  owner */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2220:2235  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2220:2226  signer */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2220:2235  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2216:2304  if (signer != owner) {... */\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2279:2285  signer */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2287:2292  owner */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2258:2293  ERC2612InvalidSigner(signer, owner) */\n      mload(0x40)\n      0x4b800e4600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2216:2304  if (signer != owner) {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2314:2345  _approve(owner, spender, value) */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2323:2328  owner */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2330:2337  spender */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2339:2344  value */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2314:2322  _approve */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":2314:2345  _approve(owner, spender, value) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1869:2352  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":1680:2352  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_162\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3845:4107  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3898:3905  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3938:3949  _cachedThis */\n      immutable(\"0xa22ac9802f4f4d38724c19fb8e2fcf588c0066914ae6269b44c96a5ca130a1bd\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3949  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3929:3933  this */\n      address\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3949  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3984  address(this) == _cachedThis && block.chainid == _cachedChainId */\n      dup1\n      iszero\n      tag_169\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3970:3984  _cachedChainId */\n      immutable(\"0x62c04aa2ba983f68d24f36f1071519a5da6efcb7e8fd8ffeea96be718d6b9857\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3953:3966  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3953:3984  block.chainid == _cachedChainId */\n      eq\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3921:3984  address(this) == _cachedThis && block.chainid == _cachedChainId */\n    tag_169:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3917:4101  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4007:4029  _cachedDomainSeparator */\n      immutable(\"0x6b1c649d76d82d7ec684938eb8cf812da931da1f103e41a152e94b0751f753d5\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4000:4029  return _cachedDomainSeparator */\n      swap1\n      pop\n      jump(tag_168)\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3917:4101  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4067:4090  _buildDomainSeparator() */\n      tag_172\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4067:4088  _buildDomainSeparator */\n      tag_173\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4067:4090  _buildDomainSeparator() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4060:4090  return _buildDomainSeparator() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3845:4107  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_168:\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":538:645  function nonces(address owner) public view virtual returns (uint256) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":598:605  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":624:631  _nonces */\n      0x07\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":624:638  _nonces[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":632:637  owner */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":624:638  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":617:638  return _nonces[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":538:645  function nonces(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6021:6147  function _EIP712Name() internal view returns (string memory) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6067:6080  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      tag_176\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6126:6139  _nameFallback */\n      0x05\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6104  _name */\n      immutable(\"0x08bdd9b53746b3d3d49a5b887b4db8bce05b5638cb7c2c29493ae15671c8080f\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6125  _name.toStringWithFallback */\n      tag_177\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6092:6140  return _name.toStringWithFallback(_nameFallback) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6021:6147  function _EIP712Name() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6473:6608  function _EIP712Version() internal view returns (string memory) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6522:6535  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      tag_179\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6584:6600  _versionFallback */\n      0x06\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6562  _version */\n      immutable(\"0x5f16a9a75b8cdf579ff288b3f8e4aadbaebf33539193013b563b5d2afc5fb775\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6583  _version.toStringWithFallback */\n      tag_177\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6547:6601  return _version.toStringWithFallback(_versionFallback) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6473:6608  function _EIP712Version() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":759:1154  function _useNonce(address owner) internal virtual returns (uint256) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":819:826  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":1121:1128  _nonces */\n      0x07\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":1121:1135  _nonces[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":1129:1134  owner */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":1121:1135  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":1121:1137  _nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":1114:1137  return _nonces[owner]++ */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Nonces.sol\":759:1154  function _useNonce(address owner) internal virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4917:5093  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4994:5001  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5020:5086  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_186\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5053:5073  _domainSeparatorV4() */\n      tag_187\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5053:5071  _domainSeparatorV4 */\n      tag_102\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5053:5073  _domainSeparatorV4() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5075:5085  structHash */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5020:5052  MessageHashUtils.toTypedDataHash */\n      tag_188\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5020:5086  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5013:5086  return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4917:5093  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6803:7063  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6888:6895  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6908:6925  address recovered */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6927:6945  RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6947:6963  bytes32 errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6967:6992  tryRecover(hash, v, r, s) */\n      tag_190\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6978:6982  hash */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6984:6985  v */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6987:6988  r */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6990:6991  s */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6967:6977  tryRecover */\n      tag_191\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6967:6992  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6907:6992  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7002:7030  _throwError(error, errorArg) */\n      tag_192\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7014:7019  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7021:7029  errorArg */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7002:7013  _throwError */\n      tag_193\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7002:7030  _throwError(error, errorArg) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7047:7056  recovered */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7040:7056  return recovered */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6803:7063  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_200\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_205)\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_209)\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_210\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n      immutable(\"0x1028edde2c11714e8c602dbf2f11ca68edc9e460f5ce0b1cfccd007f7766ad4a\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n      immutable(\"0x764729bae1eb91b473d69237ce1d491301f68dd17d5e99d329348e4c0ce2622d\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4278:4282  this */\n      address\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      add(0x20, mload(0x40))\n      tag_212\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3385:3652  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3479:3492  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3537:3554  FALLBACK_SENTINEL */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3527:3532  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3508:3554  ShortString.unwrap(value) != FALLBACK_SENTINEL */\n      eq\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n      tag_215\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      tag_216\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3586:3591  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3585  toString */\n      tag_217\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3570:3592  return toString(value) */\n      swap1\n      pop\n      jump(tag_214)\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3630:3635  store */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3623:3635  return store */\n      dup1\n      sload\n      tag_219\n      swap1\n      tag_82\n      jump\t// in\n    tag_219:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_220\n      swap1\n      tag_82\n      jump\t// in\n    tag_220:\n      dup1\n      iszero\n      tag_221\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_222\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_221)\n    tag_222:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_223:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_223\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_221:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3385:3652  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_214:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3353:3754  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3446:3460  bytes32 digest */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3555:3559  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3549:3560  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3585:3595  hex\"19_01\" */\n      0x1901000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3580:3583  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3573:3596  mstore(ptr, hex\"19_01\") */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3632:3647  domainSeparator */\n      dup4\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3625:3629  0x02 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3620:3623  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3616:3630  add(ptr, 0x02) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3609:3648  mstore(add(ptr, 0x02), domainSeparator) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3684:3694  structHash */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3677:3681  0x22 */\n      0x22\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3672:3675  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3668:3682  add(ptr, 0x22) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3661:3695  mstore(add(ptr, 0x22), structHash) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3733:3737  0x42 */\n      0x42\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3728:3731  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3718:3738  keccak256(ptr, 0x42) */\n      keccak256\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3708:3738  digest := keccak256(ptr, 0x42) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3524:3748  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":3353:3754  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_191:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5266:5273  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5275:5287  RecoverError */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5289:5296  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6199:6265  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6194:6195  s */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6186:6196  uint256(s) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6186:6265  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6297:6298  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6301:6331  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6333:6334  s */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6281:6335  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_225)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6440:6454  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6467:6471  hash */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6473:6474  v */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6476:6477  r */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6479:6480  s */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_227\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_230:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6440:6481  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6513:6514  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6501  signer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6547:6548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6551:6580  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6590:6591  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6582:6592  bytes32(0) */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6531:6593  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      jump(tag_225)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6622:6628  signer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6630:6650  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6660:6661  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6652:6662  bytes32(0) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6614:6663  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_225:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7291:7311  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7311  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_233\n      jumpi\n      tag_234\n      tag_235\n      jump\t// in\n    tag_234:\n    tag_233:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7287  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7282:7311  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_236\n      jumpi\n      tag_237\n      tag_235\n      jump\t// in\n    tag_237:\n    tag_236:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n      iszero\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7327:7334  return; */\n      tag_232\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7387:7416  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7416  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_240\n      jumpi\n      tag_241\n      tag_235\n      jump\t// in\n    tag_241:\n    tag_240:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7383  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7378:7416  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_242\n      jumpi\n      tag_243\n      tag_235\n      jump\t// in\n    tag_243:\n    tag_242:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7439:7462  ECDSAInvalidSignature() */\n      mload(0x40)\n      0xf645eedf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7492:7527  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7527  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_246\n      jumpi\n      tag_247\n      tag_235\n      jump\t// in\n    tag_247:\n    tag_246:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7488  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7483:7527  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_248\n      jumpi\n      tag_249\n      tag_235\n      jump\t// in\n    tag_249:\n    tag_248:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_250\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7586:7594  errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7578:7595  uint256(errorArg) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7550:7596  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      0xfce698f700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7626:7656  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7656  error == RecoverError.InvalidSignatureS */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_253\n      jumpi\n      tag_254\n      tag_235\n      jump\t// in\n    tag_254:\n    tag_253:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7622  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7617:7656  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_255\n      jumpi\n      tag_256\n      tag_235\n      jump\t// in\n    tag_256:\n    tag_255:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_257\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7702:7710  errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7679:7711  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      0xd78bce0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_232:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2137:2150  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2162:2173  uint256 len */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      tag_260\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2187:2191  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2186  byteLength */\n      tag_261\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2162:2192  uint256 len = byteLength(sstr) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2280:2297  string memory str */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2311:2313  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2300:2314  new string(32) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_262\n      jumpi\n      tag_263\n      tag_114\n      jump\t// in\n    tag_263:\n    tag_262:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_264\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_264:\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2280:2314  string memory str = new string(32) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2402:2405  len */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2397:2400  str */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2390:2406  mstore(str, len) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2442:2446  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2435:2439  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2430:2433  str */\n      dup3\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2426:2440  add(str, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2419:2447  mstore(add(str, 0x20), sstr) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2473:2476  str */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2466:2476  return str */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2555:2800  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2616:2623  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2635:2649  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2688:2692  0xFF */\n      0xff\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2679:2683  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2652:2685  uint256(ShortString.unwrap(sstr)) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2652:2692  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      and\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2635:2692  uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2715:2717  31 */\n      0x1f\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2706:2712  result */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2706:2717  result > 31 */\n      gt\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2702:2771  if (result > 31) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2740:2760  InvalidShortString() */\n      mload(0x40)\n      0xb3512b0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2702:2771  if (result > 31) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2787:2793  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2780:2793  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2555:2800  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_267:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_268:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_269:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_309:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_309)\n    tag_311:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_270:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_271:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_314\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_267\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":818:889   */\n      tag_315\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_268\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_316\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_269\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":988:1017   */\n      tag_317\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_270\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_23:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_319\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_271\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_273:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_275:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_276:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_325\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_275\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_277:\n        /* \"#utility.yul\":1983:2007   */\n      tag_327\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_276\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_328:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_278:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_330\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_277\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_279:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_280:\n        /* \"#utility.yul\":2339:2363   */\n      tag_333\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_279\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_334:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_281:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_336\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_280\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_26:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_339\n      tag_273\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":2632:2751   */\n    tag_338:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_340\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_278\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_341\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_281\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_282:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_283:\n        /* \"#utility.yul\":3196:3217   */\n      tag_344\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_282\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_29:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_346\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_283\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_284:\n        /* \"#utility.yul\":3533:3557   */\n      tag_348\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_279\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_33:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_350\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_284\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_36:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_353\n      tag_273\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":3908:4027   */\n    tag_352:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_354\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_278\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_355\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_278\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_356\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_281\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_285:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_286:\n        /* \"#utility.yul\":4598:4620   */\n      tag_359\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_285\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_42:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_361\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_286\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:4930   */\n    tag_287:\n        /* \"#utility.yul\":4890:4897   */\n      0x00\n        /* \"#utility.yul\":4919:4924   */\n      dup2\n        /* \"#utility.yul\":4908:4924   */\n      swap1\n      pop\n        /* \"#utility.yul\":4853:4930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4936:5054   */\n    tag_288:\n        /* \"#utility.yul\":5023:5047   */\n      tag_364\n        /* \"#utility.yul\":5041:5046   */\n      dup2\n        /* \"#utility.yul\":5023:5047   */\n      tag_287\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":5018:5021   */\n      dup3\n        /* \"#utility.yul\":5011:5048   */\n      mstore\n        /* \"#utility.yul\":4936:5054   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5060:5282   */\n    tag_46:\n        /* \"#utility.yul\":5153:5157   */\n      0x00\n        /* \"#utility.yul\":5191:5193   */\n      0x20\n        /* \"#utility.yul\":5180:5189   */\n      dup3\n        /* \"#utility.yul\":5176:5194   */\n      add\n        /* \"#utility.yul\":5168:5194   */\n      swap1\n      pop\n        /* \"#utility.yul\":5204:5275   */\n      tag_366\n        /* \"#utility.yul\":5272:5273   */\n      0x00\n        /* \"#utility.yul\":5261:5270   */\n      dup4\n        /* \"#utility.yul\":5257:5274   */\n      add\n        /* \"#utility.yul\":5248:5254   */\n      dup5\n        /* \"#utility.yul\":5204:5275   */\n      tag_288\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":5060:5282   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5288:5617   */\n    tag_49:\n        /* \"#utility.yul\":5347:5353   */\n      0x00\n        /* \"#utility.yul\":5396:5398   */\n      0x20\n        /* \"#utility.yul\":5384:5393   */\n      dup3\n        /* \"#utility.yul\":5375:5382   */\n      dup5\n        /* \"#utility.yul\":5371:5394   */\n      sub\n        /* \"#utility.yul\":5367:5399   */\n      slt\n        /* \"#utility.yul\":5364:5483   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":5402:5481   */\n      tag_369\n      tag_273\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":5364:5483   */\n    tag_368:\n        /* \"#utility.yul\":5522:5523   */\n      0x00\n        /* \"#utility.yul\":5547:5600   */\n      tag_370\n        /* \"#utility.yul\":5592:5599   */\n      dup5\n        /* \"#utility.yul\":5583:5589   */\n      dup3\n        /* \"#utility.yul\":5572:5581   */\n      dup6\n        /* \"#utility.yul\":5568:5590   */\n      add\n        /* \"#utility.yul\":5547:5600   */\n      tag_278\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":5537:5600   */\n      swap2\n      pop\n        /* \"#utility.yul\":5493:5610   */\n      pop\n        /* \"#utility.yul\":5288:5617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5623:5772   */\n    tag_289:\n        /* \"#utility.yul\":5659:5666   */\n      0x00\n        /* \"#utility.yul\":5699:5765   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5692:5697   */\n      dup3\n        /* \"#utility.yul\":5688:5766   */\n      and\n        /* \"#utility.yul\":5677:5766   */\n      swap1\n      pop\n        /* \"#utility.yul\":5623:5772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5778:5893   */\n    tag_290:\n        /* \"#utility.yul\":5863:5886   */\n      tag_373\n        /* \"#utility.yul\":5880:5885   */\n      dup2\n        /* \"#utility.yul\":5863:5886   */\n      tag_289\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":5858:5861   */\n      dup3\n        /* \"#utility.yul\":5851:5887   */\n      mstore\n        /* \"#utility.yul\":5778:5893   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5899:6017   */\n    tag_291:\n        /* \"#utility.yul\":5986:6010   */\n      tag_375\n        /* \"#utility.yul\":6004:6009   */\n      dup2\n        /* \"#utility.yul\":5986:6010   */\n      tag_276\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":5981:5984   */\n      dup3\n        /* \"#utility.yul\":5974:6011   */\n      mstore\n        /* \"#utility.yul\":5899:6017   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6023:6137   */\n    tag_292:\n        /* \"#utility.yul\":6090:6096   */\n      0x00\n        /* \"#utility.yul\":6124:6129   */\n      dup2\n        /* \"#utility.yul\":6118:6130   */\n      mload\n        /* \"#utility.yul\":6108:6130   */\n      swap1\n      pop\n        /* \"#utility.yul\":6023:6137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6143:6327   */\n    tag_293:\n        /* \"#utility.yul\":6242:6253   */\n      0x00\n        /* \"#utility.yul\":6276:6282   */\n      dup3\n        /* \"#utility.yul\":6271:6274   */\n      dup3\n        /* \"#utility.yul\":6264:6283   */\n      mstore\n        /* \"#utility.yul\":6316:6320   */\n      0x20\n        /* \"#utility.yul\":6311:6314   */\n      dup3\n        /* \"#utility.yul\":6307:6321   */\n      add\n        /* \"#utility.yul\":6292:6321   */\n      swap1\n      pop\n        /* \"#utility.yul\":6143:6327   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6333:6465   */\n    tag_294:\n        /* \"#utility.yul\":6400:6404   */\n      0x00\n        /* \"#utility.yul\":6423:6426   */\n      dup2\n        /* \"#utility.yul\":6415:6426   */\n      swap1\n      pop\n        /* \"#utility.yul\":6453:6457   */\n      0x20\n        /* \"#utility.yul\":6448:6451   */\n      dup3\n        /* \"#utility.yul\":6444:6458   */\n      add\n        /* \"#utility.yul\":6436:6458   */\n      swap1\n      pop\n        /* \"#utility.yul\":6333:6465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6471:6579   */\n    tag_295:\n        /* \"#utility.yul\":6548:6572   */\n      tag_380\n        /* \"#utility.yul\":6566:6571   */\n      dup2\n        /* \"#utility.yul\":6548:6572   */\n      tag_279\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":6543:6546   */\n      dup3\n        /* \"#utility.yul\":6536:6573   */\n      mstore\n        /* \"#utility.yul\":6471:6579   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6585:6764   */\n    tag_296:\n        /* \"#utility.yul\":6654:6664   */\n      0x00\n        /* \"#utility.yul\":6675:6721   */\n      tag_382\n        /* \"#utility.yul\":6717:6720   */\n      dup4\n        /* \"#utility.yul\":6709:6715   */\n      dup4\n        /* \"#utility.yul\":6675:6721   */\n      tag_295\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":6753:6757   */\n      0x20\n        /* \"#utility.yul\":6748:6751   */\n      dup4\n        /* \"#utility.yul\":6744:6758   */\n      add\n        /* \"#utility.yul\":6730:6758   */\n      swap1\n      pop\n        /* \"#utility.yul\":6585:6764   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6770:6883   */\n    tag_297:\n        /* \"#utility.yul\":6840:6844   */\n      0x00\n        /* \"#utility.yul\":6872:6876   */\n      0x20\n        /* \"#utility.yul\":6867:6870   */\n      dup3\n        /* \"#utility.yul\":6863:6877   */\n      add\n        /* \"#utility.yul\":6855:6877   */\n      swap1\n      pop\n        /* \"#utility.yul\":6770:6883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6919:7651   */\n    tag_298:\n        /* \"#utility.yul\":7038:7041   */\n      0x00\n        /* \"#utility.yul\":7067:7121   */\n      tag_385\n        /* \"#utility.yul\":7115:7120   */\n      dup3\n        /* \"#utility.yul\":7067:7121   */\n      tag_292\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7137:7223   */\n      tag_386\n        /* \"#utility.yul\":7216:7222   */\n      dup2\n        /* \"#utility.yul\":7211:7214   */\n      dup6\n        /* \"#utility.yul\":7137:7223   */\n      tag_293\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":7130:7223   */\n      swap4\n      pop\n        /* \"#utility.yul\":7247:7303   */\n      tag_387\n        /* \"#utility.yul\":7297:7302   */\n      dup4\n        /* \"#utility.yul\":7247:7303   */\n      tag_294\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":7326:7333   */\n      dup1\n        /* \"#utility.yul\":7357:7358   */\n      0x00\n        /* \"#utility.yul\":7342:7626   */\n    tag_388:\n        /* \"#utility.yul\":7367:7373   */\n      dup4\n        /* \"#utility.yul\":7364:7365   */\n      dup2\n        /* \"#utility.yul\":7361:7374   */\n      lt\n        /* \"#utility.yul\":7342:7626   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":7443:7449   */\n      dup2\n        /* \"#utility.yul\":7437:7450   */\n      mload\n        /* \"#utility.yul\":7470:7533   */\n      tag_391\n        /* \"#utility.yul\":7529:7532   */\n      dup9\n        /* \"#utility.yul\":7514:7527   */\n      dup3\n        /* \"#utility.yul\":7470:7533   */\n      tag_296\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":7463:7533   */\n      swap8\n      pop\n        /* \"#utility.yul\":7556:7616   */\n      tag_392\n        /* \"#utility.yul\":7609:7615   */\n      dup4\n        /* \"#utility.yul\":7556:7616   */\n      tag_297\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":7546:7616   */\n      swap3\n      pop\n        /* \"#utility.yul\":7402:7626   */\n      pop\n        /* \"#utility.yul\":7389:7390   */\n      0x01\n        /* \"#utility.yul\":7386:7387   */\n      dup2\n        /* \"#utility.yul\":7382:7391   */\n      add\n        /* \"#utility.yul\":7377:7391   */\n      swap1\n      pop\n        /* \"#utility.yul\":7342:7626   */\n      jump(tag_388)\n    tag_390:\n        /* \"#utility.yul\":7346:7360   */\n      pop\n        /* \"#utility.yul\":7642:7645   */\n      dup6\n        /* \"#utility.yul\":7635:7645   */\n      swap4\n      pop\n        /* \"#utility.yul\":7043:7651   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6919:7651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7657:8872   */\n    tag_59:\n        /* \"#utility.yul\":8006:8010   */\n      0x00\n        /* \"#utility.yul\":8044:8047   */\n      0xe0\n        /* \"#utility.yul\":8033:8042   */\n      dup3\n        /* \"#utility.yul\":8029:8048   */\n      add\n        /* \"#utility.yul\":8021:8048   */\n      swap1\n      pop\n        /* \"#utility.yul\":8058:8127   */\n      tag_394\n        /* \"#utility.yul\":8124:8125   */\n      0x00\n        /* \"#utility.yul\":8113:8122   */\n      dup4\n        /* \"#utility.yul\":8109:8126   */\n      add\n        /* \"#utility.yul\":8100:8106   */\n      dup11\n        /* \"#utility.yul\":8058:8127   */\n      tag_290\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":8174:8183   */\n      dup2\n        /* \"#utility.yul\":8168:8172   */\n      dup2\n        /* \"#utility.yul\":8164:8184   */\n      sub\n        /* \"#utility.yul\":8159:8161   */\n      0x20\n        /* \"#utility.yul\":8148:8157   */\n      dup4\n        /* \"#utility.yul\":8144:8162   */\n      add\n        /* \"#utility.yul\":8137:8185   */\n      mstore\n        /* \"#utility.yul\":8202:8280   */\n      tag_395\n        /* \"#utility.yul\":8275:8279   */\n      dup2\n        /* \"#utility.yul\":8266:8272   */\n      dup10\n        /* \"#utility.yul\":8202:8280   */\n      tag_271\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":8194:8280   */\n      swap1\n      pop\n        /* \"#utility.yul\":8327:8336   */\n      dup2\n        /* \"#utility.yul\":8321:8325   */\n      dup2\n        /* \"#utility.yul\":8317:8337   */\n      sub\n        /* \"#utility.yul\":8312:8314   */\n      0x40\n        /* \"#utility.yul\":8301:8310   */\n      dup4\n        /* \"#utility.yul\":8297:8315   */\n      add\n        /* \"#utility.yul\":8290:8338   */\n      mstore\n        /* \"#utility.yul\":8355:8433   */\n      tag_396\n        /* \"#utility.yul\":8428:8432   */\n      dup2\n        /* \"#utility.yul\":8419:8425   */\n      dup9\n        /* \"#utility.yul\":8355:8433   */\n      tag_271\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":8347:8433   */\n      swap1\n      pop\n        /* \"#utility.yul\":8443:8515   */\n      tag_397\n        /* \"#utility.yul\":8511:8513   */\n      0x60\n        /* \"#utility.yul\":8500:8509   */\n      dup4\n        /* \"#utility.yul\":8496:8514   */\n      add\n        /* \"#utility.yul\":8487:8493   */\n      dup8\n        /* \"#utility.yul\":8443:8515   */\n      tag_284\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":8525:8598   */\n      tag_398\n        /* \"#utility.yul\":8593:8596   */\n      0x80\n        /* \"#utility.yul\":8582:8591   */\n      dup4\n        /* \"#utility.yul\":8578:8597   */\n      add\n        /* \"#utility.yul\":8569:8575   */\n      dup7\n        /* \"#utility.yul\":8525:8598   */\n      tag_291\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":8608:8681   */\n      tag_399\n        /* \"#utility.yul\":8676:8679   */\n      0xa0\n        /* \"#utility.yul\":8665:8674   */\n      dup4\n        /* \"#utility.yul\":8661:8680   */\n      add\n        /* \"#utility.yul\":8652:8658   */\n      dup6\n        /* \"#utility.yul\":8608:8681   */\n      tag_288\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":8729:8738   */\n      dup2\n        /* \"#utility.yul\":8723:8727   */\n      dup2\n        /* \"#utility.yul\":8719:8739   */\n      sub\n        /* \"#utility.yul\":8713:8716   */\n      0xc0\n        /* \"#utility.yul\":8702:8711   */\n      dup4\n        /* \"#utility.yul\":8698:8717   */\n      add\n        /* \"#utility.yul\":8691:8740   */\n      mstore\n        /* \"#utility.yul\":8757:8865   */\n      tag_400\n        /* \"#utility.yul\":8860:8864   */\n      dup2\n        /* \"#utility.yul\":8851:8857   */\n      dup5\n        /* \"#utility.yul\":8757:8865   */\n      tag_298\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":8749:8865   */\n      swap1\n      pop\n        /* \"#utility.yul\":7657:8872   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8878:9207   */\n    tag_65:\n        /* \"#utility.yul\":8937:8943   */\n      0x00\n        /* \"#utility.yul\":8986:8988   */\n      0x20\n        /* \"#utility.yul\":8974:8983   */\n      dup3\n        /* \"#utility.yul\":8965:8972   */\n      dup5\n        /* \"#utility.yul\":8961:8984   */\n      sub\n        /* \"#utility.yul\":8957:8989   */\n      slt\n        /* \"#utility.yul\":8954:9073   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":8992:9071   */\n      tag_403\n      tag_273\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":8954:9073   */\n    tag_402:\n        /* \"#utility.yul\":9112:9113   */\n      0x00\n        /* \"#utility.yul\":9137:9190   */\n      tag_404\n        /* \"#utility.yul\":9182:9189   */\n      dup5\n        /* \"#utility.yul\":9173:9179   */\n      dup3\n        /* \"#utility.yul\":9162:9171   */\n      dup6\n        /* \"#utility.yul\":9158:9180   */\n      add\n        /* \"#utility.yul\":9137:9190   */\n      tag_281\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":9127:9190   */\n      swap2\n      pop\n        /* \"#utility.yul\":9083:9200   */\n      pop\n        /* \"#utility.yul\":8878:9207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9213:9331   */\n    tag_299:\n        /* \"#utility.yul\":9284:9306   */\n      tag_406\n        /* \"#utility.yul\":9300:9305   */\n      dup2\n        /* \"#utility.yul\":9284:9306   */\n      tag_285\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9277:9282   */\n      dup2\n        /* \"#utility.yul\":9274:9307   */\n      eq\n        /* \"#utility.yul\":9264:9325   */\n      tag_407\n      jumpi\n        /* \"#utility.yul\":9321:9322   */\n      0x00\n        /* \"#utility.yul\":9318:9319   */\n      dup1\n        /* \"#utility.yul\":9311:9323   */\n      revert\n        /* \"#utility.yul\":9264:9325   */\n    tag_407:\n        /* \"#utility.yul\":9213:9331   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9337:9472   */\n    tag_300:\n        /* \"#utility.yul\":9381:9386   */\n      0x00\n        /* \"#utility.yul\":9419:9425   */\n      dup2\n        /* \"#utility.yul\":9406:9426   */\n      calldataload\n        /* \"#utility.yul\":9397:9426   */\n      swap1\n      pop\n        /* \"#utility.yul\":9435:9466   */\n      tag_409\n        /* \"#utility.yul\":9460:9465   */\n      dup2\n        /* \"#utility.yul\":9435:9466   */\n      tag_299\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":9337:9472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9478:9600   */\n    tag_301:\n        /* \"#utility.yul\":9551:9575   */\n      tag_411\n        /* \"#utility.yul\":9569:9574   */\n      dup2\n        /* \"#utility.yul\":9551:9575   */\n      tag_287\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":9544:9549   */\n      dup2\n        /* \"#utility.yul\":9541:9576   */\n      eq\n        /* \"#utility.yul\":9531:9594   */\n      tag_412\n      jumpi\n        /* \"#utility.yul\":9590:9591   */\n      0x00\n        /* \"#utility.yul\":9587:9588   */\n      dup1\n        /* \"#utility.yul\":9580:9592   */\n      revert\n        /* \"#utility.yul\":9531:9594   */\n    tag_412:\n        /* \"#utility.yul\":9478:9600   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9606:9745   */\n    tag_302:\n        /* \"#utility.yul\":9652:9657   */\n      0x00\n        /* \"#utility.yul\":9690:9696   */\n      dup2\n        /* \"#utility.yul\":9677:9697   */\n      calldataload\n        /* \"#utility.yul\":9668:9697   */\n      swap1\n      pop\n        /* \"#utility.yul\":9706:9739   */\n      tag_414\n        /* \"#utility.yul\":9733:9738   */\n      dup2\n        /* \"#utility.yul\":9706:9739   */\n      tag_301\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":9606:9745   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9751:10950   */\n    tag_73:\n        /* \"#utility.yul\":9862:9868   */\n      0x00\n        /* \"#utility.yul\":9870:9876   */\n      dup1\n        /* \"#utility.yul\":9878:9884   */\n      0x00\n        /* \"#utility.yul\":9886:9892   */\n      dup1\n        /* \"#utility.yul\":9894:9900   */\n      0x00\n        /* \"#utility.yul\":9902:9908   */\n      dup1\n        /* \"#utility.yul\":9910:9916   */\n      0x00\n        /* \"#utility.yul\":9959:9962   */\n      0xe0\n        /* \"#utility.yul\":9947:9956   */\n      dup9\n        /* \"#utility.yul\":9938:9945   */\n      dup11\n        /* \"#utility.yul\":9934:9957   */\n      sub\n        /* \"#utility.yul\":9930:9963   */\n      slt\n        /* \"#utility.yul\":9927:10047   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":9966:10045   */\n      tag_417\n      tag_273\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":9927:10047   */\n    tag_416:\n        /* \"#utility.yul\":10086:10087   */\n      0x00\n        /* \"#utility.yul\":10111:10164   */\n      tag_418\n        /* \"#utility.yul\":10156:10163   */\n      dup11\n        /* \"#utility.yul\":10147:10153   */\n      dup3\n        /* \"#utility.yul\":10136:10145   */\n      dup12\n        /* \"#utility.yul\":10132:10154   */\n      add\n        /* \"#utility.yul\":10111:10164   */\n      tag_278\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":10101:10164   */\n      swap8\n      pop\n        /* \"#utility.yul\":10057:10174   */\n      pop\n        /* \"#utility.yul\":10213:10215   */\n      0x20\n        /* \"#utility.yul\":10239:10292   */\n      tag_419\n        /* \"#utility.yul\":10284:10291   */\n      dup11\n        /* \"#utility.yul\":10275:10281   */\n      dup3\n        /* \"#utility.yul\":10264:10273   */\n      dup12\n        /* \"#utility.yul\":10260:10282   */\n      add\n        /* \"#utility.yul\":10239:10292   */\n      tag_278\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":10229:10292   */\n      swap7\n      pop\n        /* \"#utility.yul\":10184:10302   */\n      pop\n        /* \"#utility.yul\":10341:10343   */\n      0x40\n        /* \"#utility.yul\":10367:10420   */\n      tag_420\n        /* \"#utility.yul\":10412:10419   */\n      dup11\n        /* \"#utility.yul\":10403:10409   */\n      dup3\n        /* \"#utility.yul\":10392:10401   */\n      dup12\n        /* \"#utility.yul\":10388:10410   */\n      add\n        /* \"#utility.yul\":10367:10420   */\n      tag_281\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":10357:10420   */\n      swap6\n      pop\n        /* \"#utility.yul\":10312:10430   */\n      pop\n        /* \"#utility.yul\":10469:10471   */\n      0x60\n        /* \"#utility.yul\":10495:10548   */\n      tag_421\n        /* \"#utility.yul\":10540:10547   */\n      dup11\n        /* \"#utility.yul\":10531:10537   */\n      dup3\n        /* \"#utility.yul\":10520:10529   */\n      dup12\n        /* \"#utility.yul\":10516:10538   */\n      add\n        /* \"#utility.yul\":10495:10548   */\n      tag_281\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":10485:10548   */\n      swap5\n      pop\n        /* \"#utility.yul\":10440:10558   */\n      pop\n        /* \"#utility.yul\":10597:10600   */\n      0x80\n        /* \"#utility.yul\":10624:10675   */\n      tag_422\n        /* \"#utility.yul\":10667:10674   */\n      dup11\n        /* \"#utility.yul\":10658:10664   */\n      dup3\n        /* \"#utility.yul\":10647:10656   */\n      dup12\n        /* \"#utility.yul\":10643:10665   */\n      add\n        /* \"#utility.yul\":10624:10675   */\n      tag_300\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":10614:10675   */\n      swap4\n      pop\n        /* \"#utility.yul\":10568:10685   */\n      pop\n        /* \"#utility.yul\":10724:10727   */\n      0xa0\n        /* \"#utility.yul\":10751:10804   */\n      tag_423\n        /* \"#utility.yul\":10796:10803   */\n      dup11\n        /* \"#utility.yul\":10787:10793   */\n      dup3\n        /* \"#utility.yul\":10776:10785   */\n      dup12\n        /* \"#utility.yul\":10772:10794   */\n      add\n        /* \"#utility.yul\":10751:10804   */\n      tag_302\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":10741:10804   */\n      swap3\n      pop\n        /* \"#utility.yul\":10695:10814   */\n      pop\n        /* \"#utility.yul\":10853:10856   */\n      0xc0\n        /* \"#utility.yul\":10880:10933   */\n      tag_424\n        /* \"#utility.yul\":10925:10932   */\n      dup11\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10905:10914   */\n      dup12\n        /* \"#utility.yul\":10901:10923   */\n      add\n        /* \"#utility.yul\":10880:10933   */\n      tag_302\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":10870:10933   */\n      swap2\n      pop\n        /* \"#utility.yul\":10824:10943   */\n      pop\n        /* \"#utility.yul\":9751:10950   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10956:11430   */\n    tag_77:\n        /* \"#utility.yul\":11024:11030   */\n      0x00\n        /* \"#utility.yul\":11032:11038   */\n      dup1\n        /* \"#utility.yul\":11081:11083   */\n      0x40\n        /* \"#utility.yul\":11069:11078   */\n      dup4\n        /* \"#utility.yul\":11060:11067   */\n      dup6\n        /* \"#utility.yul\":11056:11079   */\n      sub\n        /* \"#utility.yul\":11052:11084   */\n      slt\n        /* \"#utility.yul\":11049:11168   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":11087:11166   */\n      tag_427\n      tag_273\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":11049:11168   */\n    tag_426:\n        /* \"#utility.yul\":11207:11208   */\n      0x00\n        /* \"#utility.yul\":11232:11285   */\n      tag_428\n        /* \"#utility.yul\":11277:11284   */\n      dup6\n        /* \"#utility.yul\":11268:11274   */\n      dup3\n        /* \"#utility.yul\":11257:11266   */\n      dup7\n        /* \"#utility.yul\":11253:11275   */\n      add\n        /* \"#utility.yul\":11232:11285   */\n      tag_278\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":11222:11285   */\n      swap3\n      pop\n        /* \"#utility.yul\":11178:11295   */\n      pop\n        /* \"#utility.yul\":11334:11336   */\n      0x20\n        /* \"#utility.yul\":11360:11413   */\n      tag_429\n        /* \"#utility.yul\":11405:11412   */\n      dup6\n        /* \"#utility.yul\":11396:11402   */\n      dup3\n        /* \"#utility.yul\":11385:11394   */\n      dup7\n        /* \"#utility.yul\":11381:11403   */\n      add\n        /* \"#utility.yul\":11360:11413   */\n      tag_278\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":11350:11413   */\n      swap2\n      pop\n        /* \"#utility.yul\":11305:11423   */\n      pop\n        /* \"#utility.yul\":10956:11430   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11436:11616   */\n    tag_303:\n        /* \"#utility.yul\":11484:11561   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11481:11482   */\n      0x00\n        /* \"#utility.yul\":11474:11562   */\n      mstore\n        /* \"#utility.yul\":11581:11585   */\n      0x22\n        /* \"#utility.yul\":11578:11579   */\n      0x04\n        /* \"#utility.yul\":11571:11586   */\n      mstore\n        /* \"#utility.yul\":11605:11609   */\n      0x24\n        /* \"#utility.yul\":11602:11603   */\n      0x00\n        /* \"#utility.yul\":11595:11610   */\n      revert\n        /* \"#utility.yul\":11622:11942   */\n    tag_82:\n        /* \"#utility.yul\":11666:11672   */\n      0x00\n        /* \"#utility.yul\":11703:11704   */\n      0x02\n        /* \"#utility.yul\":11697:11701   */\n      dup3\n        /* \"#utility.yul\":11693:11705   */\n      div\n        /* \"#utility.yul\":11683:11705   */\n      swap1\n      pop\n        /* \"#utility.yul\":11750:11751   */\n      0x01\n        /* \"#utility.yul\":11744:11748   */\n      dup3\n        /* \"#utility.yul\":11740:11752   */\n      and\n        /* \"#utility.yul\":11771:11789   */\n      dup1\n        /* \"#utility.yul\":11761:11842   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":11827:11831   */\n      0x7f\n        /* \"#utility.yul\":11819:11825   */\n      dup3\n        /* \"#utility.yul\":11815:11832   */\n      and\n        /* \"#utility.yul\":11805:11832   */\n      swap2\n      pop\n        /* \"#utility.yul\":11761:11842   */\n    tag_432:\n        /* \"#utility.yul\":11889:11891   */\n      0x20\n        /* \"#utility.yul\":11881:11887   */\n      dup3\n        /* \"#utility.yul\":11878:11892   */\n      lt\n        /* \"#utility.yul\":11858:11876   */\n      dup2\n        /* \"#utility.yul\":11855:11893   */\n      sub\n        /* \"#utility.yul\":11852:11936   */\n      tag_433\n      jumpi\n        /* \"#utility.yul\":11908:11926   */\n      tag_434\n      tag_303\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":11852:11936   */\n    tag_433:\n        /* \"#utility.yul\":11673:11942   */\n      pop\n        /* \"#utility.yul\":11622:11942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11948:12128   */\n    tag_114:\n        /* \"#utility.yul\":11996:12073   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11993:11994   */\n      0x00\n        /* \"#utility.yul\":11986:12074   */\n      mstore\n        /* \"#utility.yul\":12093:12097   */\n      0x41\n        /* \"#utility.yul\":12090:12091   */\n      0x04\n        /* \"#utility.yul\":12083:12098   */\n      mstore\n        /* \"#utility.yul\":12117:12121   */\n      0x24\n        /* \"#utility.yul\":12114:12115   */\n      0x00\n        /* \"#utility.yul\":12107:12122   */\n      revert\n        /* \"#utility.yul\":12134:12356   */\n    tag_125:\n        /* \"#utility.yul\":12227:12231   */\n      0x00\n        /* \"#utility.yul\":12265:12267   */\n      0x20\n        /* \"#utility.yul\":12254:12263   */\n      dup3\n        /* \"#utility.yul\":12250:12268   */\n      add\n        /* \"#utility.yul\":12242:12268   */\n      swap1\n      pop\n        /* \"#utility.yul\":12278:12349   */\n      tag_437\n        /* \"#utility.yul\":12346:12347   */\n      0x00\n        /* \"#utility.yul\":12335:12344   */\n      dup4\n        /* \"#utility.yul\":12331:12348   */\n      add\n        /* \"#utility.yul\":12322:12328   */\n      dup5\n        /* \"#utility.yul\":12278:12349   */\n      tag_291\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":12134:12356   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12362:12694   */\n    tag_130:\n        /* \"#utility.yul\":12483:12487   */\n      0x00\n        /* \"#utility.yul\":12521:12523   */\n      0x40\n        /* \"#utility.yul\":12510:12519   */\n      dup3\n        /* \"#utility.yul\":12506:12524   */\n      add\n        /* \"#utility.yul\":12498:12524   */\n      swap1\n      pop\n        /* \"#utility.yul\":12534:12605   */\n      tag_439\n        /* \"#utility.yul\":12602:12603   */\n      0x00\n        /* \"#utility.yul\":12591:12600   */\n      dup4\n        /* \"#utility.yul\":12587:12604   */\n      add\n        /* \"#utility.yul\":12578:12584   */\n      dup6\n        /* \"#utility.yul\":12534:12605   */\n      tag_284\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":12615:12687   */\n      tag_440\n        /* \"#utility.yul\":12683:12685   */\n      0x20\n        /* \"#utility.yul\":12672:12681   */\n      dup4\n        /* \"#utility.yul\":12668:12686   */\n      add\n        /* \"#utility.yul\":12659:12665   */\n      dup5\n        /* \"#utility.yul\":12615:12687   */\n      tag_284\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":12362:12694   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12700:13475   */\n    tag_140:\n        /* \"#utility.yul\":12933:12937   */\n      0x00\n        /* \"#utility.yul\":12971:12974   */\n      0xc0\n        /* \"#utility.yul\":12960:12969   */\n      dup3\n        /* \"#utility.yul\":12956:12975   */\n      add\n        /* \"#utility.yul\":12948:12975   */\n      swap1\n      pop\n        /* \"#utility.yul\":12985:13056   */\n      tag_442\n        /* \"#utility.yul\":13053:13054   */\n      0x00\n        /* \"#utility.yul\":13042:13051   */\n      dup4\n        /* \"#utility.yul\":13038:13055   */\n      add\n        /* \"#utility.yul\":13029:13035   */\n      dup10\n        /* \"#utility.yul\":12985:13056   */\n      tag_288\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":13066:13138   */\n      tag_443\n        /* \"#utility.yul\":13134:13136   */\n      0x20\n        /* \"#utility.yul\":13123:13132   */\n      dup4\n        /* \"#utility.yul\":13119:13137   */\n      add\n        /* \"#utility.yul\":13110:13116   */\n      dup9\n        /* \"#utility.yul\":13066:13138   */\n      tag_291\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":13148:13220   */\n      tag_444\n        /* \"#utility.yul\":13216:13218   */\n      0x40\n        /* \"#utility.yul\":13205:13214   */\n      dup4\n        /* \"#utility.yul\":13201:13219   */\n      add\n        /* \"#utility.yul\":13192:13198   */\n      dup8\n        /* \"#utility.yul\":13148:13220   */\n      tag_291\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":13230:13302   */\n      tag_445\n        /* \"#utility.yul\":13298:13300   */\n      0x60\n        /* \"#utility.yul\":13287:13296   */\n      dup4\n        /* \"#utility.yul\":13283:13301   */\n      add\n        /* \"#utility.yul\":13274:13280   */\n      dup7\n        /* \"#utility.yul\":13230:13302   */\n      tag_284\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":13312:13385   */\n      tag_446\n        /* \"#utility.yul\":13380:13383   */\n      0x80\n        /* \"#utility.yul\":13369:13378   */\n      dup4\n        /* \"#utility.yul\":13365:13384   */\n      add\n        /* \"#utility.yul\":13356:13362   */\n      dup6\n        /* \"#utility.yul\":13312:13385   */\n      tag_284\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":13395:13468   */\n      tag_447\n        /* \"#utility.yul\":13463:13466   */\n      0xa0\n        /* \"#utility.yul\":13452:13461   */\n      dup4\n        /* \"#utility.yul\":13448:13467   */\n      add\n        /* \"#utility.yul\":13439:13445   */\n      dup5\n        /* \"#utility.yul\":13395:13468   */\n      tag_284\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":12700:13475   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13481:13813   */\n    tag_147:\n        /* \"#utility.yul\":13602:13606   */\n      0x00\n        /* \"#utility.yul\":13640:13642   */\n      0x40\n        /* \"#utility.yul\":13629:13638   */\n      dup3\n        /* \"#utility.yul\":13625:13643   */\n      add\n        /* \"#utility.yul\":13617:13643   */\n      swap1\n      pop\n        /* \"#utility.yul\":13653:13724   */\n      tag_449\n        /* \"#utility.yul\":13721:13722   */\n      0x00\n        /* \"#utility.yul\":13710:13719   */\n      dup4\n        /* \"#utility.yul\":13706:13723   */\n      add\n        /* \"#utility.yul\":13697:13703   */\n      dup6\n        /* \"#utility.yul\":13653:13724   */\n      tag_291\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":13734:13806   */\n      tag_450\n        /* \"#utility.yul\":13802:13804   */\n      0x20\n        /* \"#utility.yul\":13791:13800   */\n      dup4\n        /* \"#utility.yul\":13787:13805   */\n      add\n        /* \"#utility.yul\":13778:13784   */\n      dup5\n        /* \"#utility.yul\":13734:13806   */\n      tag_291\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":13481:13813   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13819:14261   */\n    tag_159:\n        /* \"#utility.yul\":13968:13972   */\n      0x00\n        /* \"#utility.yul\":14006:14008   */\n      0x60\n        /* \"#utility.yul\":13995:14004   */\n      dup3\n        /* \"#utility.yul\":13991:14009   */\n      add\n        /* \"#utility.yul\":13983:14009   */\n      swap1\n      pop\n        /* \"#utility.yul\":14019:14090   */\n      tag_452\n        /* \"#utility.yul\":14087:14088   */\n      0x00\n        /* \"#utility.yul\":14076:14085   */\n      dup4\n        /* \"#utility.yul\":14072:14089   */\n      add\n        /* \"#utility.yul\":14063:14069   */\n      dup7\n        /* \"#utility.yul\":14019:14090   */\n      tag_291\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":14100:14172   */\n      tag_453\n        /* \"#utility.yul\":14168:14170   */\n      0x20\n        /* \"#utility.yul\":14157:14166   */\n      dup4\n        /* \"#utility.yul\":14153:14171   */\n      add\n        /* \"#utility.yul\":14144:14150   */\n      dup6\n        /* \"#utility.yul\":14100:14172   */\n      tag_284\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":14182:14254   */\n      tag_454\n        /* \"#utility.yul\":14250:14252   */\n      0x40\n        /* \"#utility.yul\":14239:14248   */\n      dup4\n        /* \"#utility.yul\":14235:14253   */\n      add\n        /* \"#utility.yul\":14226:14232   */\n      dup5\n        /* \"#utility.yul\":14182:14254   */\n      tag_284\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":13819:14261   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14267:14447   */\n    tag_304:\n        /* \"#utility.yul\":14315:14392   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14312:14313   */\n      0x00\n        /* \"#utility.yul\":14305:14393   */\n      mstore\n        /* \"#utility.yul\":14412:14416   */\n      0x11\n        /* \"#utility.yul\":14409:14410   */\n      0x04\n        /* \"#utility.yul\":14402:14417   */\n      mstore\n        /* \"#utility.yul\":14436:14440   */\n      0x24\n        /* \"#utility.yul\":14433:14434   */\n      0x00\n        /* \"#utility.yul\":14426:14441   */\n      revert\n        /* \"#utility.yul\":14453:14644   */\n    tag_204:\n        /* \"#utility.yul\":14493:14496   */\n      0x00\n        /* \"#utility.yul\":14512:14532   */\n      tag_457\n        /* \"#utility.yul\":14530:14531   */\n      dup3\n        /* \"#utility.yul\":14512:14532   */\n      tag_279\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":14507:14532   */\n      swap2\n      pop\n        /* \"#utility.yul\":14546:14566   */\n      tag_458\n        /* \"#utility.yul\":14564:14565   */\n      dup4\n        /* \"#utility.yul\":14546:14566   */\n      tag_279\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":14541:14566   */\n      swap3\n      pop\n        /* \"#utility.yul\":14589:14590   */\n      dup3\n        /* \"#utility.yul\":14586:14587   */\n      dup3\n        /* \"#utility.yul\":14582:14591   */\n      add\n        /* \"#utility.yul\":14575:14591   */\n      swap1\n      pop\n        /* \"#utility.yul\":14610:14613   */\n      dup1\n        /* \"#utility.yul\":14607:14608   */\n      dup3\n        /* \"#utility.yul\":14604:14614   */\n      gt\n        /* \"#utility.yul\":14601:14637   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":14617:14635   */\n      tag_460\n      tag_304\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":14601:14637   */\n    tag_459:\n        /* \"#utility.yul\":14453:14644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14650:15314   */\n    tag_213:\n        /* \"#utility.yul\":14855:14859   */\n      0x00\n        /* \"#utility.yul\":14893:14896   */\n      0xa0\n        /* \"#utility.yul\":14882:14891   */\n      dup3\n        /* \"#utility.yul\":14878:14897   */\n      add\n        /* \"#utility.yul\":14870:14897   */\n      swap1\n      pop\n        /* \"#utility.yul\":14907:14978   */\n      tag_462\n        /* \"#utility.yul\":14975:14976   */\n      0x00\n        /* \"#utility.yul\":14964:14973   */\n      dup4\n        /* \"#utility.yul\":14960:14977   */\n      add\n        /* \"#utility.yul\":14951:14957   */\n      dup9\n        /* \"#utility.yul\":14907:14978   */\n      tag_288\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":14988:15060   */\n      tag_463\n        /* \"#utility.yul\":15056:15058   */\n      0x20\n        /* \"#utility.yul\":15045:15054   */\n      dup4\n        /* \"#utility.yul\":15041:15059   */\n      add\n        /* \"#utility.yul\":15032:15038   */\n      dup8\n        /* \"#utility.yul\":14988:15060   */\n      tag_288\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":15070:15142   */\n      tag_464\n        /* \"#utility.yul\":15138:15140   */\n      0x40\n        /* \"#utility.yul\":15127:15136   */\n      dup4\n        /* \"#utility.yul\":15123:15141   */\n      add\n        /* \"#utility.yul\":15114:15120   */\n      dup7\n        /* \"#utility.yul\":15070:15142   */\n      tag_288\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":15152:15224   */\n      tag_465\n        /* \"#utility.yul\":15220:15222   */\n      0x60\n        /* \"#utility.yul\":15209:15218   */\n      dup4\n        /* \"#utility.yul\":15205:15223   */\n      add\n        /* \"#utility.yul\":15196:15202   */\n      dup6\n        /* \"#utility.yul\":15152:15224   */\n      tag_284\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":15234:15307   */\n      tag_466\n        /* \"#utility.yul\":15302:15305   */\n      0x80\n        /* \"#utility.yul\":15291:15300   */\n      dup4\n        /* \"#utility.yul\":15287:15306   */\n      add\n        /* \"#utility.yul\":15278:15284   */\n      dup5\n        /* \"#utility.yul\":15234:15307   */\n      tag_291\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":14650:15314   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15320:15865   */\n    tag_228:\n        /* \"#utility.yul\":15493:15497   */\n      0x00\n        /* \"#utility.yul\":15531:15534   */\n      0x80\n        /* \"#utility.yul\":15520:15529   */\n      dup3\n        /* \"#utility.yul\":15516:15535   */\n      add\n        /* \"#utility.yul\":15508:15535   */\n      swap1\n      pop\n        /* \"#utility.yul\":15545:15616   */\n      tag_468\n        /* \"#utility.yul\":15613:15614   */\n      0x00\n        /* \"#utility.yul\":15602:15611   */\n      dup4\n        /* \"#utility.yul\":15598:15615   */\n      add\n        /* \"#utility.yul\":15589:15595   */\n      dup8\n        /* \"#utility.yul\":15545:15616   */\n      tag_288\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":15626:15694   */\n      tag_469\n        /* \"#utility.yul\":15690:15692   */\n      0x20\n        /* \"#utility.yul\":15679:15688   */\n      dup4\n        /* \"#utility.yul\":15675:15693   */\n      add\n        /* \"#utility.yul\":15666:15672   */\n      dup7\n        /* \"#utility.yul\":15626:15694   */\n      tag_286\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":15704:15776   */\n      tag_470\n        /* \"#utility.yul\":15772:15774   */\n      0x40\n        /* \"#utility.yul\":15761:15770   */\n      dup4\n        /* \"#utility.yul\":15757:15775   */\n      add\n        /* \"#utility.yul\":15748:15754   */\n      dup6\n        /* \"#utility.yul\":15704:15776   */\n      tag_288\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":15786:15858   */\n      tag_471\n        /* \"#utility.yul\":15854:15856   */\n      0x60\n        /* \"#utility.yul\":15843:15852   */\n      dup4\n        /* \"#utility.yul\":15839:15857   */\n      add\n        /* \"#utility.yul\":15830:15836   */\n      dup5\n        /* \"#utility.yul\":15786:15858   */\n      tag_288\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":15320:15865   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15871:16051   */\n    tag_235:\n        /* \"#utility.yul\":15919:15996   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15916:15917   */\n      0x00\n        /* \"#utility.yul\":15909:15997   */\n      mstore\n        /* \"#utility.yul\":16016:16020   */\n      0x21\n        /* \"#utility.yul\":16013:16014   */\n      0x04\n        /* \"#utility.yul\":16006:16021   */\n      mstore\n        /* \"#utility.yul\":16040:16044   */\n      0x24\n        /* \"#utility.yul\":16037:16038   */\n      0x00\n        /* \"#utility.yul\":16030:16045   */\n      revert\n\n    auxdata: 0xa2646970667358221220c95646f450bb7adc94c0613beedc8068fe2cd2afd9c27e2a7dfb98f8ed47340464736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1447": {
									"entryPoint": null,
									"id": 1447,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2521": {
									"entryPoint": null,
									"id": 2521,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_317": {
									"entryPoint": null,
									"id": 317,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_907": {
									"entryPoint": null,
									"id": 907,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_2568": {
									"entryPoint": 679,
									"id": 2568,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_620": {
									"entryPoint": 779,
									"id": 620,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_587": {
									"entryPoint": 1032,
									"id": 587,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_344": {
									"entryPoint": 771,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStringSlot_1798": {
									"entryPoint": 1023,
									"id": 1798,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_1652": {
									"entryPoint": 594,
									"id": 1652,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_1554": {
									"entryPoint": 917,
									"id": 1554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3571,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 3065,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_memory_ptr": {
									"entryPoint": 3365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2477,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 2801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2567,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2041,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 3029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 3402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3199,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2420,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1635,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1590,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_memoryt_bytes32": {
									"entryPoint": 3380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1777,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1928,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1971,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12848:20",
										"nodeType": "YulBlock",
										"src": "0:12848:20",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:20",
													"nodeType": "YulBlock",
													"src": "66:40:20",
													"statements": [
														{
															"nativeSrc": "77:22:20",
															"nodeType": "YulAssignment",
															"src": "77:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:20"
																},
																"nativeSrc": "87:12:20",
																"nodeType": "YulFunctionCall",
																"src": "87:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:20",
														"nodeType": "YulTypedName",
														"src": "49:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:20",
														"nodeType": "YulTypedName",
														"src": "59:6:20",
														"type": ""
													}
												],
												"src": "7:99:20"
											},
											{
												"body": {
													"nativeSrc": "140:152:20",
													"nodeType": "YulBlock",
													"src": "140:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:20",
																		"nodeType": "YulLiteral",
																		"src": "157:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:20",
																		"nodeType": "YulLiteral",
																		"src": "160:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:20"
																},
																"nativeSrc": "150:88:20",
																"nodeType": "YulFunctionCall",
																"src": "150:88:20"
															},
															"nativeSrc": "150:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:20",
																		"nodeType": "YulLiteral",
																		"src": "254:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:20",
																		"nodeType": "YulLiteral",
																		"src": "257:4:20",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:20"
																},
																"nativeSrc": "247:15:20",
																"nodeType": "YulFunctionCall",
																"src": "247:15:20"
															},
															"nativeSrc": "247:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:20",
																		"nodeType": "YulLiteral",
																		"src": "278:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:20",
																		"nodeType": "YulLiteral",
																		"src": "281:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:20"
																},
																"nativeSrc": "271:15:20",
																"nodeType": "YulFunctionCall",
																"src": "271:15:20"
															},
															"nativeSrc": "271:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:20"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:20"
											},
											{
												"body": {
													"nativeSrc": "326:152:20",
													"nodeType": "YulBlock",
													"src": "326:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:20",
																		"nodeType": "YulLiteral",
																		"src": "343:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:20",
																		"nodeType": "YulLiteral",
																		"src": "346:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:20"
																},
																"nativeSrc": "336:88:20",
																"nodeType": "YulFunctionCall",
																"src": "336:88:20"
															},
															"nativeSrc": "336:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:20",
																		"nodeType": "YulLiteral",
																		"src": "440:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:20",
																		"nodeType": "YulLiteral",
																		"src": "443:4:20",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:20"
																},
																"nativeSrc": "433:15:20",
																"nodeType": "YulFunctionCall",
																"src": "433:15:20"
															},
															"nativeSrc": "433:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:20",
																		"nodeType": "YulLiteral",
																		"src": "464:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:20",
																		"nodeType": "YulLiteral",
																		"src": "467:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:20"
																},
																"nativeSrc": "457:15:20",
																"nodeType": "YulFunctionCall",
																"src": "457:15:20"
															},
															"nativeSrc": "457:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:20"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:20"
											},
											{
												"body": {
													"nativeSrc": "535:269:20",
													"nodeType": "YulBlock",
													"src": "535:269:20",
													"statements": [
														{
															"nativeSrc": "545:22:20",
															"nodeType": "YulAssignment",
															"src": "545:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:20",
																		"nodeType": "YulLiteral",
																		"src": "565:1:20",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:20"
																},
																"nativeSrc": "555:12:20",
																"nodeType": "YulFunctionCall",
																"src": "555:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:20"
																}
															]
														},
														{
															"nativeSrc": "576:38:20",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:20",
																		"nodeType": "YulLiteral",
																		"src": "612:1:20",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:20"
																},
																"nativeSrc": "602:12:20",
																"nodeType": "YulFunctionCall",
																"src": "602:12:20"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:20",
																	"nodeType": "YulTypedName",
																	"src": "580:18:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:20",
																"nodeType": "YulBlock",
																"src": "653:51:20",
																"statements": [
																	{
																		"nativeSrc": "667:27:20",
																		"nodeType": "YulAssignment",
																		"src": "667:27:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:20",
																					"nodeType": "YulLiteral",
																					"src": "689:4:20",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:20"
																			},
																			"nativeSrc": "677:17:20",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:20"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:20",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:20"
																},
																"nativeSrc": "626:26:20",
																"nodeType": "YulFunctionCall",
																"src": "626:26:20"
															},
															"nativeSrc": "623:81:20",
															"nodeType": "YulIf",
															"src": "623:81:20"
														},
														{
															"body": {
																"nativeSrc": "756:42:20",
																"nodeType": "YulBlock",
																"src": "756:42:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:20"
																			},
																			"nativeSrc": "770:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:20"
																		},
																		"nativeSrc": "770:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:20",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:20",
																				"nodeType": "YulLiteral",
																				"src": "751:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:20"
																		},
																		"nativeSrc": "740:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:20"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:20"
																},
																"nativeSrc": "717:38:20",
																"nodeType": "YulFunctionCall",
																"src": "717:38:20"
															},
															"nativeSrc": "714:84:20",
															"nodeType": "YulIf",
															"src": "714:84:20"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:20",
														"nodeType": "YulTypedName",
														"src": "519:4:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:20",
														"nodeType": "YulTypedName",
														"src": "528:6:20",
														"type": ""
													}
												],
												"src": "484:320:20"
											},
											{
												"body": {
													"nativeSrc": "864:87:20",
													"nodeType": "YulBlock",
													"src": "864:87:20",
													"statements": [
														{
															"nativeSrc": "874:11:20",
															"nodeType": "YulAssignment",
															"src": "874:11:20",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:20",
																"nodeType": "YulIdentifier",
																"src": "882:3:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:20",
																		"nodeType": "YulLiteral",
																		"src": "902:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:20"
																},
																"nativeSrc": "895:14:20",
																"nodeType": "YulFunctionCall",
																"src": "895:14:20"
															},
															"nativeSrc": "895:14:20",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:20"
														},
														{
															"nativeSrc": "918:26:20",
															"nodeType": "YulAssignment",
															"src": "918:26:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:20",
																		"nodeType": "YulLiteral",
																		"src": "936:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:20",
																		"nodeType": "YulLiteral",
																		"src": "939:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:20"
																},
																"nativeSrc": "926:18:20",
																"nodeType": "YulFunctionCall",
																"src": "926:18:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:20"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:20",
														"nodeType": "YulTypedName",
														"src": "851:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:20",
														"nodeType": "YulTypedName",
														"src": "859:4:20",
														"type": ""
													}
												],
												"src": "810:141:20"
											},
											{
												"body": {
													"nativeSrc": "1001:49:20",
													"nodeType": "YulBlock",
													"src": "1001:49:20",
													"statements": [
														{
															"nativeSrc": "1011:33:20",
															"nodeType": "YulAssignment",
															"src": "1011:33:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:20",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:20"
																		},
																		"nativeSrc": "1025:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:20"
																},
																"nativeSrc": "1021:23:20",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:20"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:20",
														"nodeType": "YulTypedName",
														"src": "984:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:20",
														"nodeType": "YulTypedName",
														"src": "994:6:20",
														"type": ""
													}
												],
												"src": "957:93:20"
											},
											{
												"body": {
													"nativeSrc": "1109:54:20",
													"nodeType": "YulBlock",
													"src": "1109:54:20",
													"statements": [
														{
															"nativeSrc": "1119:37:20",
															"nodeType": "YulAssignment",
															"src": "1119:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:20"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:20"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:20"
																},
																"nativeSrc": "1140:16:20",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:20"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:20"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:20",
														"nodeType": "YulTypedName",
														"src": "1084:4:20",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:20",
														"nodeType": "YulTypedName",
														"src": "1090:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:20",
														"nodeType": "YulTypedName",
														"src": "1100:8:20",
														"type": ""
													}
												],
												"src": "1056:107:20"
											},
											{
												"body": {
													"nativeSrc": "1245:317:20",
													"nodeType": "YulBlock",
													"src": "1245:317:20",
													"statements": [
														{
															"nativeSrc": "1255:35:20",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:20",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:20",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:20"
																},
																"nativeSrc": "1272:18:20",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:20"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:20",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:20",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:20",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:20",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:20"
																},
																"nativeSrc": "1311:97:20",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:20"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:20",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:20",
															"nodeType": "YulAssignment",
															"src": "1417:51:20",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:20"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:20",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:20"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:20"
																},
																"nativeSrc": "1429:39:20",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:20"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:20"
																}
															]
														},
														{
															"nativeSrc": "1477:30:20",
															"nodeType": "YulAssignment",
															"src": "1477:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:20"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:20"
																		},
																		"nativeSrc": "1497:9:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:20"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:20"
																},
																"nativeSrc": "1486:21:20",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:20"
																}
															]
														},
														{
															"nativeSrc": "1516:40:20",
															"nodeType": "YulAssignment",
															"src": "1516:40:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:20",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:20"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:20"
																		},
																		"nativeSrc": "1536:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:20"
																},
																"nativeSrc": "1526:30:20",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:20"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:20",
														"nodeType": "YulTypedName",
														"src": "1206:5:20",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:20",
														"nodeType": "YulTypedName",
														"src": "1213:10:20",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:20",
														"nodeType": "YulTypedName",
														"src": "1225:8:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:20",
														"nodeType": "YulTypedName",
														"src": "1238:6:20",
														"type": ""
													}
												],
												"src": "1169:393:20"
											},
											{
												"body": {
													"nativeSrc": "1613:32:20",
													"nodeType": "YulBlock",
													"src": "1613:32:20",
													"statements": [
														{
															"nativeSrc": "1623:16:20",
															"nodeType": "YulAssignment",
															"src": "1623:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:20",
																"nodeType": "YulIdentifier",
																"src": "1634:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:20",
														"nodeType": "YulTypedName",
														"src": "1595:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:20",
														"nodeType": "YulTypedName",
														"src": "1605:7:20",
														"type": ""
													}
												],
												"src": "1568:77:20"
											},
											{
												"body": {
													"nativeSrc": "1683:28:20",
													"nodeType": "YulBlock",
													"src": "1683:28:20",
													"statements": [
														{
															"nativeSrc": "1693:12:20",
															"nodeType": "YulAssignment",
															"src": "1693:12:20",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:20",
																"nodeType": "YulIdentifier",
																"src": "1700:5:20"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:20"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:20",
														"nodeType": "YulTypedName",
														"src": "1669:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:20",
														"nodeType": "YulTypedName",
														"src": "1679:3:20",
														"type": ""
													}
												],
												"src": "1651:60:20"
											},
											{
												"body": {
													"nativeSrc": "1777:82:20",
													"nodeType": "YulBlock",
													"src": "1777:82:20",
													"statements": [
														{
															"nativeSrc": "1787:66:20",
															"nodeType": "YulAssignment",
															"src": "1787:66:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:20"
																				},
																				"nativeSrc": "1827:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:20"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:20",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:20"
																		},
																		"nativeSrc": "1818:34:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:20"
																},
																"nativeSrc": "1800:53:20",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:20"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:20"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:20",
														"nodeType": "YulTypedName",
														"src": "1757:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:20",
														"nodeType": "YulTypedName",
														"src": "1767:9:20",
														"type": ""
													}
												],
												"src": "1717:142:20"
											},
											{
												"body": {
													"nativeSrc": "1912:28:20",
													"nodeType": "YulBlock",
													"src": "1912:28:20",
													"statements": [
														{
															"nativeSrc": "1922:12:20",
															"nodeType": "YulAssignment",
															"src": "1922:12:20",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:20",
																"nodeType": "YulIdentifier",
																"src": "1929:5:20"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:20"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:20",
														"nodeType": "YulTypedName",
														"src": "1898:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:20",
														"nodeType": "YulTypedName",
														"src": "1908:3:20",
														"type": ""
													}
												],
												"src": "1865:75:20"
											},
											{
												"body": {
													"nativeSrc": "2022:193:20",
													"nodeType": "YulBlock",
													"src": "2022:193:20",
													"statements": [
														{
															"nativeSrc": "2032:63:20",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:20",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:20",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:20"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:20",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:20"
																},
																"nativeSrc": "2056:39:20",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:20"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:20",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:20",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:20"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:20"
																				},
																				"nativeSrc": "2145:11:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:20"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:20",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:20"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:20",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:20"
																				},
																				"nativeSrc": "2166:41:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:20"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:20",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:20"
																		},
																		"nativeSrc": "2117:91:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:20"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:20"
																},
																"nativeSrc": "2104:105:20",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:20"
															},
															"nativeSrc": "2104:105:20",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:20"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:20",
														"nodeType": "YulTypedName",
														"src": "1999:4:20",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:20",
														"nodeType": "YulTypedName",
														"src": "2005:6:20",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:20",
														"nodeType": "YulTypedName",
														"src": "2013:7:20",
														"type": ""
													}
												],
												"src": "1946:269:20"
											},
											{
												"body": {
													"nativeSrc": "2270:24:20",
													"nodeType": "YulBlock",
													"src": "2270:24:20",
													"statements": [
														{
															"nativeSrc": "2280:8:20",
															"nodeType": "YulAssignment",
															"src": "2280:8:20",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:20",
																"nodeType": "YulLiteral",
																"src": "2287:1:20",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:20"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:20",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:20",
														"nodeType": "YulTypedName",
														"src": "2266:3:20",
														"type": ""
													}
												],
												"src": "2221:73:20"
											},
											{
												"body": {
													"nativeSrc": "2353:136:20",
													"nodeType": "YulBlock",
													"src": "2353:136:20",
													"statements": [
														{
															"nativeSrc": "2363:46:20",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:20",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:20",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:20"
																},
																"nativeSrc": "2377:32:20",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:20"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:20",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:20"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:20"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:20"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:20"
																},
																"nativeSrc": "2418:65:20",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:20"
															},
															"nativeSrc": "2418:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:20"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:20",
														"nodeType": "YulTypedName",
														"src": "2339:4:20",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:20",
														"nodeType": "YulTypedName",
														"src": "2345:6:20",
														"type": ""
													}
												],
												"src": "2300:189:20"
											},
											{
												"body": {
													"nativeSrc": "2545:136:20",
													"nodeType": "YulBlock",
													"src": "2545:136:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:20",
																"nodeType": "YulBlock",
																"src": "2612:63:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:20",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:20"
																			},
																			"nativeSrc": "2626:39:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:20"
																		},
																		"nativeSrc": "2626:39:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:20"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:20"
																},
																"nativeSrc": "2562:14:20",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:20"
															},
															"nativeSrc": "2555:120:20",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:20",
																"nodeType": "YulBlock",
																"src": "2577:26:20",
																"statements": [
																	{
																		"nativeSrc": "2579:22:20",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:20",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:20"
																			},
																			"nativeSrc": "2588:13:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:20"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:20"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:20",
																"nodeType": "YulBlock",
																"src": "2559:2:20",
																"statements": []
															},
															"src": "2555:120:20"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:20",
														"nodeType": "YulTypedName",
														"src": "2533:5:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:20",
														"nodeType": "YulTypedName",
														"src": "2540:3:20",
														"type": ""
													}
												],
												"src": "2495:186:20"
											},
											{
												"body": {
													"nativeSrc": "2766:464:20",
													"nodeType": "YulBlock",
													"src": "2766:464:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:20",
																"nodeType": "YulBlock",
																"src": "2792:431:20",
																"statements": [
																	{
																		"nativeSrc": "2806:54:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:20"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:20",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:20"
																			},
																			"nativeSrc": "2822:38:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:20"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:20",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:20",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:20",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:20"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:20",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:20"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:20",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:20"
																					},
																					"nativeSrc": "2906:29:20",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:20"
																			},
																			"nativeSrc": "2892:44:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:20"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:20",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:20",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:20",
																			"nodeType": "YulBlock",
																			"src": "3093:27:20",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:20",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:20",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:20",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:20"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:20",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:20"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:20",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:20",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:20",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:20",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:20"
																			},
																			"nativeSrc": "3074:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:20"
																		},
																		"nativeSrc": "3071:49:20",
																		"nodeType": "YulIf",
																		"src": "3071:49:20"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:20",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:20"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:20",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:20"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:20"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:20",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:20"
																							},
																							"nativeSrc": "3189:22:20",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:20"
																					},
																					"nativeSrc": "3175:37:20",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:20"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:20",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:20"
																			},
																			"nativeSrc": "3133:80:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:20"
																		},
																		"nativeSrc": "3133:80:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:20",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:20"
																},
																"nativeSrc": "2780:11:20",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:20"
															},
															"nativeSrc": "2777:446:20",
															"nodeType": "YulIf",
															"src": "2777:446:20"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:20",
														"nodeType": "YulTypedName",
														"src": "2742:5:20",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:20",
														"nodeType": "YulTypedName",
														"src": "2749:3:20",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:20",
														"nodeType": "YulTypedName",
														"src": "2754:10:20",
														"type": ""
													}
												],
												"src": "2687:543:20"
											},
											{
												"body": {
													"nativeSrc": "3299:54:20",
													"nodeType": "YulBlock",
													"src": "3299:54:20",
													"statements": [
														{
															"nativeSrc": "3309:37:20",
															"nodeType": "YulAssignment",
															"src": "3309:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:20"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:20"
																},
																"nativeSrc": "3330:16:20",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:20"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:20"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:20",
														"nodeType": "YulTypedName",
														"src": "3274:4:20",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:20",
														"nodeType": "YulTypedName",
														"src": "3280:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:20",
														"nodeType": "YulTypedName",
														"src": "3290:8:20",
														"type": ""
													}
												],
												"src": "3236:117:20"
											},
											{
												"body": {
													"nativeSrc": "3410:118:20",
													"nodeType": "YulBlock",
													"src": "3410:118:20",
													"statements": [
														{
															"nativeSrc": "3420:68:20",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:20",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:20",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:20"
																				},
																				"nativeSrc": "3465:13:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:20"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:20",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:20",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:20"
																				},
																				"nativeSrc": "3480:6:20",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:20"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:20",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:20"
																		},
																		"nativeSrc": "3436:51:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:20"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:20"
																},
																"nativeSrc": "3432:56:20",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:20"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:20",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:20",
															"nodeType": "YulAssignment",
															"src": "3497:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:20"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:20"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:20"
																},
																"nativeSrc": "3507:15:20",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:20"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:20",
														"nodeType": "YulTypedName",
														"src": "3387:4:20",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:20",
														"nodeType": "YulTypedName",
														"src": "3393:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:20",
														"nodeType": "YulTypedName",
														"src": "3403:6:20",
														"type": ""
													}
												],
												"src": "3359:169:20"
											},
											{
												"body": {
													"nativeSrc": "3614:214:20",
													"nodeType": "YulBlock",
													"src": "3614:214:20",
													"statements": [
														{
															"nativeSrc": "3747:37:20",
															"nodeType": "YulAssignment",
															"src": "3747:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:20"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:20"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:20"
																},
																"nativeSrc": "3755:29:20",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:20"
																}
															]
														},
														{
															"nativeSrc": "3793:29:20",
															"nodeType": "YulAssignment",
															"src": "3793:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:20",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:20",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:20"
																		},
																		"nativeSrc": "3810:11:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:20"
																},
																"nativeSrc": "3801:21:20",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:20"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:20"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:20",
														"nodeType": "YulTypedName",
														"src": "3595:4:20",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:20",
														"nodeType": "YulTypedName",
														"src": "3601:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:20",
														"nodeType": "YulTypedName",
														"src": "3609:4:20",
														"type": ""
													}
												],
												"src": "3533:295:20"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:20",
													"nodeType": "YulBlock",
													"src": "3925:1303:20",
													"statements": [
														{
															"nativeSrc": "3936:51:20",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:20",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:20",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:20"
																},
																"nativeSrc": "3950:37:20",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:20"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:20",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:20",
																"nodeType": "YulBlock",
																"src": "4072:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:20"
																			},
																			"nativeSrc": "4074:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:20"
																		},
																		"nativeSrc": "4074:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:20",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:20",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:20"
																},
																"nativeSrc": "4041:30:20",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:20"
															},
															"nativeSrc": "4038:56:20",
															"nodeType": "YulIf",
															"src": "4038:56:20"
														},
														{
															"nativeSrc": "4104:52:20",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:20"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:20",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:20"
																		},
																		"nativeSrc": "4144:11:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:20"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:20",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:20"
																},
																"nativeSrc": "4118:38:20",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:20"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:20",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:20"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:20"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:20"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:20",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:20"
																},
																"nativeSrc": "4203:67:20",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:20"
															},
															"nativeSrc": "4203:67:20",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:20"
														},
														{
															"nativeSrc": "4280:18:20",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:20",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:20",
																"nodeType": "YulLiteral",
																"src": "4297:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:20",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:20",
															"nodeType": "YulAssignment",
															"src": "4308:17:20",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:20",
																"nodeType": "YulLiteral",
																"src": "4321:4:20",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:20",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:20"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:20",
																		"nodeType": "YulBlock",
																		"src": "4372:611:20",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:20",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:20",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:20"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:20",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:20",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:20"
																							},
																							"nativeSrc": "4413:9:20",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:20"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:20"
																					},
																					"nativeSrc": "4401:22:20",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:20"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:20",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:20",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:20",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:20"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:20",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:20"
																					},
																					"nativeSrc": "4451:37:20",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:20"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:20",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:20",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:20",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:20",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:20",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:20",
																					"nodeType": "YulBlock",
																					"src": "4569:163:20",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:20",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:20"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:20",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:20"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:20",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:20"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:20",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:20"
																												},
																												"nativeSrc": "4608:19:20",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:20"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:20",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:20"
																										},
																										"nativeSrc": "4602:26:20",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:20"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:20"
																								},
																								"nativeSrc": "4587:42:20",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:20"
																							},
																							"nativeSrc": "4587:42:20",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:20"
																						},
																						{
																							"nativeSrc": "4646:24:20",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:20",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:20",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:20"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:20",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:20",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:20"
																								},
																								"nativeSrc": "4656:14:20",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:20"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:20"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:20",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:20",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:20",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:20"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:20",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:20",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:20"
																								},
																								"nativeSrc": "4700:18:20",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:20"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:20",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:20"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:20",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:20"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:20",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:20"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:20",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:20"
																					},
																					"nativeSrc": "4532:14:20",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:20"
																				},
																				"nativeSrc": "4524:208:20",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:20",
																					"nodeType": "YulBlock",
																					"src": "4547:21:20",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:20",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:20",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:20",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:20"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:20",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:20",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:20"
																								},
																								"nativeSrc": "4554:12:20",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:20"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:20",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:20"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:20",
																					"nodeType": "YulBlock",
																					"src": "4528:3:20",
																					"statements": []
																				},
																				"src": "4524:208:20"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:20",
																					"nodeType": "YulBlock",
																					"src": "4768:156:20",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:20",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:20",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:20",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:20"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:20",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:20"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:20",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:20"
																										},
																										"nativeSrc": "4809:19:20",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:20"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:20"
																								},
																								"nativeSrc": "4803:26:20",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:20"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:20",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:20",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:20",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:20"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:20",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:20"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:20",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:20"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:20",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:20",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:20",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:20"
																												},
																												"nativeSrc": "4891:17:20",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:20"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:20",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:20"
																										},
																										"nativeSrc": "4861:48:20",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:20"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:20"
																								},
																								"nativeSrc": "4846:64:20",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:20"
																							},
																							"nativeSrc": "4846:64:20",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:20"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:20",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:20"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:20",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:20"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:20",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:20"
																					},
																					"nativeSrc": "4748:19:20",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:20"
																				},
																				"nativeSrc": "4745:179:20",
																				"nodeType": "YulIf",
																				"src": "4745:179:20"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:20",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:20"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:20",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:20"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:20",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:20",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:20",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:20"
																									},
																									"nativeSrc": "4954:14:20",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:20"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:20",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:20",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:20"
																							},
																							"nativeSrc": "4950:22:20",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:20"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:20"
																					},
																					"nativeSrc": "4937:36:20",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:20"
																				},
																				"nativeSrc": "4937:36:20",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:20"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:20",
																	"nodeType": "YulCase",
																	"src": "4365:618:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:20",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:20",
																		"nodeType": "YulBlock",
																		"src": "5000:222:20",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:20",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:20",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:20",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:20",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:20",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:20",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:20",
																					"nodeType": "YulBlock",
																					"src": "5051:67:20",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:20",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:20",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:20",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:20"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:20",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:20"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:20",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:20"
																										},
																										"nativeSrc": "5084:19:20",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:20"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:20"
																								},
																								"nativeSrc": "5078:26:20",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:20"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:20"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:20"
																				},
																				"nativeSrc": "5041:77:20",
																				"nodeType": "YulIf",
																				"src": "5041:77:20"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:20",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:20"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:20",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:20"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:20",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:20"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:20",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:20"
																							},
																							"nativeSrc": "5144:67:20",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:20"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:20"
																					},
																					"nativeSrc": "5131:81:20",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:20"
																				},
																				"nativeSrc": "5131:81:20",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:20"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:20",
																	"nodeType": "YulCase",
																	"src": "4992:230:20",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:20",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:20"
																},
																"nativeSrc": "4342:14:20",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:20"
															},
															"nativeSrc": "4335:887:20",
															"nodeType": "YulSwitch",
															"src": "4335:887:20"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:20",
														"nodeType": "YulTypedName",
														"src": "3914:4:20",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:20",
														"nodeType": "YulTypedName",
														"src": "3920:3:20",
														"type": ""
													}
												],
												"src": "3833:1395:20"
											},
											{
												"body": {
													"nativeSrc": "5262:152:20",
													"nodeType": "YulBlock",
													"src": "5262:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5279:1:20",
																		"nodeType": "YulLiteral",
																		"src": "5279:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5282:77:20",
																		"nodeType": "YulLiteral",
																		"src": "5282:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5272:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5272:6:20"
																},
																"nativeSrc": "5272:88:20",
																"nodeType": "YulFunctionCall",
																"src": "5272:88:20"
															},
															"nativeSrc": "5272:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "5272:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5376:1:20",
																		"nodeType": "YulLiteral",
																		"src": "5376:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5379:4:20",
																		"nodeType": "YulLiteral",
																		"src": "5379:4:20",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5369:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5369:6:20"
																},
																"nativeSrc": "5369:15:20",
																"nodeType": "YulFunctionCall",
																"src": "5369:15:20"
															},
															"nativeSrc": "5369:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "5369:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5400:1:20",
																		"nodeType": "YulLiteral",
																		"src": "5400:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:4:20",
																		"nodeType": "YulLiteral",
																		"src": "5403:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5393:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5393:6:20"
																},
																"nativeSrc": "5393:15:20",
																"nodeType": "YulFunctionCall",
																"src": "5393:15:20"
															},
															"nativeSrc": "5393:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "5393:15:20"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5234:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "5234:180:20"
											},
											{
												"body": {
													"nativeSrc": "5471:51:20",
													"nodeType": "YulBlock",
													"src": "5471:51:20",
													"statements": [
														{
															"nativeSrc": "5481:34:20",
															"nodeType": "YulAssignment",
															"src": "5481:34:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5506:1:20",
																		"nodeType": "YulLiteral",
																		"src": "5506:1:20",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5509:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "5509:5:20"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5502:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5502:3:20"
																},
																"nativeSrc": "5502:13:20",
																"nodeType": "YulFunctionCall",
																"src": "5502:13:20"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5481:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "5481:8:20"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "5420:102:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5452:5:20",
														"nodeType": "YulTypedName",
														"src": "5452:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5462:8:20",
														"nodeType": "YulTypedName",
														"src": "5462:8:20",
														"type": ""
													}
												],
												"src": "5420:102:20"
											},
											{
												"body": {
													"nativeSrc": "5601:775:20",
													"nodeType": "YulBlock",
													"src": "5601:775:20",
													"statements": [
														{
															"nativeSrc": "5611:15:20",
															"nodeType": "YulAssignment",
															"src": "5611:15:20",
															"value": {
																"name": "_power",
																"nativeSrc": "5620:6:20",
																"nodeType": "YulIdentifier",
																"src": "5620:6:20"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5611:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "5611:5:20"
																}
															]
														},
														{
															"nativeSrc": "5635:14:20",
															"nodeType": "YulAssignment",
															"src": "5635:14:20",
															"value": {
																"name": "_base",
																"nativeSrc": "5644:5:20",
																"nodeType": "YulIdentifier",
																"src": "5644:5:20"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "5635:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "5635:4:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5693:677:20",
																"nodeType": "YulBlock",
																"src": "5693:677:20",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "5781:22:20",
																			"nodeType": "YulBlock",
																			"src": "5781:22:20",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "5783:16:20",
																							"nodeType": "YulIdentifier",
																							"src": "5783:16:20"
																						},
																						"nativeSrc": "5783:18:20",
																						"nodeType": "YulFunctionCall",
																						"src": "5783:18:20"
																					},
																					"nativeSrc": "5783:18:20",
																					"nodeType": "YulExpressionStatement",
																					"src": "5783:18:20"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5759:4:20",
																					"nodeType": "YulIdentifier",
																					"src": "5759:4:20"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "5769:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "5769:3:20"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "5774:4:20",
																							"nodeType": "YulIdentifier",
																							"src": "5774:4:20"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "5765:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "5765:3:20"
																					},
																					"nativeSrc": "5765:14:20",
																					"nodeType": "YulFunctionCall",
																					"src": "5765:14:20"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "5756:2:20",
																				"nodeType": "YulIdentifier",
																				"src": "5756:2:20"
																			},
																			"nativeSrc": "5756:24:20",
																			"nodeType": "YulFunctionCall",
																			"src": "5756:24:20"
																		},
																		"nativeSrc": "5753:50:20",
																		"nodeType": "YulIf",
																		"src": "5753:50:20"
																	},
																	{
																		"body": {
																			"nativeSrc": "5848:419:20",
																			"nodeType": "YulBlock",
																			"src": "5848:419:20",
																			"statements": [
																				{
																					"nativeSrc": "6228:25:20",
																					"nodeType": "YulAssignment",
																					"src": "6228:25:20",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "6241:5:20",
																								"nodeType": "YulIdentifier",
																								"src": "6241:5:20"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "6248:4:20",
																								"nodeType": "YulIdentifier",
																								"src": "6248:4:20"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "6237:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "6237:3:20"
																						},
																						"nativeSrc": "6237:16:20",
																						"nodeType": "YulFunctionCall",
																						"src": "6237:16:20"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "6228:5:20",
																							"nodeType": "YulIdentifier",
																							"src": "6228:5:20"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "5823:8:20",
																					"nodeType": "YulIdentifier",
																					"src": "5823:8:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5833:1:20",
																					"nodeType": "YulLiteral",
																					"src": "5833:1:20",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5819:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "5819:3:20"
																			},
																			"nativeSrc": "5819:16:20",
																			"nodeType": "YulFunctionCall",
																			"src": "5819:16:20"
																		},
																		"nativeSrc": "5816:451:20",
																		"nodeType": "YulIf",
																		"src": "5816:451:20"
																	},
																	{
																		"nativeSrc": "6280:23:20",
																		"nodeType": "YulAssignment",
																		"src": "6280:23:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6292:4:20",
																					"nodeType": "YulIdentifier",
																					"src": "6292:4:20"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "6298:4:20",
																					"nodeType": "YulIdentifier",
																					"src": "6298:4:20"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "6288:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "6288:3:20"
																			},
																			"nativeSrc": "6288:15:20",
																			"nodeType": "YulFunctionCall",
																			"src": "6288:15:20"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "6280:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "6280:4:20"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6316:44:20",
																		"nodeType": "YulAssignment",
																		"src": "6316:44:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6351:8:20",
																					"nodeType": "YulIdentifier",
																					"src": "6351:8:20"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "6328:22:20",
																				"nodeType": "YulIdentifier",
																				"src": "6328:22:20"
																			},
																			"nativeSrc": "6328:32:20",
																			"nodeType": "YulFunctionCall",
																			"src": "6328:32:20"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6316:8:20",
																				"nodeType": "YulIdentifier",
																				"src": "6316:8:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5669:8:20",
																		"nodeType": "YulIdentifier",
																		"src": "5669:8:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5679:1:20",
																		"nodeType": "YulLiteral",
																		"src": "5679:1:20",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5666:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "5666:2:20"
																},
																"nativeSrc": "5666:15:20",
																"nodeType": "YulFunctionCall",
																"src": "5666:15:20"
															},
															"nativeSrc": "5658:712:20",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5682:2:20",
																"nodeType": "YulBlock",
																"src": "5682:2:20",
																"statements": []
															},
															"pre": {
																"nativeSrc": "5662:3:20",
																"nodeType": "YulBlock",
																"src": "5662:3:20",
																"statements": []
															},
															"src": "5658:712:20"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "5528:848:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "5556:6:20",
														"nodeType": "YulTypedName",
														"src": "5556:6:20",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "5564:5:20",
														"nodeType": "YulTypedName",
														"src": "5564:5:20",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5571:8:20",
														"nodeType": "YulTypedName",
														"src": "5571:8:20",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "5581:3:20",
														"nodeType": "YulTypedName",
														"src": "5581:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5589:5:20",
														"nodeType": "YulTypedName",
														"src": "5589:5:20",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "5596:4:20",
														"nodeType": "YulTypedName",
														"src": "5596:4:20",
														"type": ""
													}
												],
												"src": "5528:848:20"
											},
											{
												"body": {
													"nativeSrc": "6442:1013:20",
													"nodeType": "YulBlock",
													"src": "6442:1013:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "6637:20:20",
																"nodeType": "YulBlock",
																"src": "6637:20:20",
																"statements": [
																	{
																		"nativeSrc": "6639:10:20",
																		"nodeType": "YulAssignment",
																		"src": "6639:10:20",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6648:1:20",
																			"nodeType": "YulLiteral",
																			"src": "6648:1:20",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6639:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "6639:5:20"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6650:5:20",
																		"nodeType": "YulLeave",
																		"src": "6650:5:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6627:8:20",
																		"nodeType": "YulIdentifier",
																		"src": "6627:8:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6620:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6620:6:20"
																},
																"nativeSrc": "6620:16:20",
																"nodeType": "YulFunctionCall",
																"src": "6620:16:20"
															},
															"nativeSrc": "6617:40:20",
															"nodeType": "YulIf",
															"src": "6617:40:20"
														},
														{
															"body": {
																"nativeSrc": "6682:20:20",
																"nodeType": "YulBlock",
																"src": "6682:20:20",
																"statements": [
																	{
																		"nativeSrc": "6684:10:20",
																		"nodeType": "YulAssignment",
																		"src": "6684:10:20",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6693:1:20",
																			"nodeType": "YulLiteral",
																			"src": "6693:1:20",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6684:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "6684:5:20"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6695:5:20",
																		"nodeType": "YulLeave",
																		"src": "6695:5:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6676:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "6676:4:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6669:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6669:6:20"
																},
																"nativeSrc": "6669:12:20",
																"nodeType": "YulFunctionCall",
																"src": "6669:12:20"
															},
															"nativeSrc": "6666:36:20",
															"nodeType": "YulIf",
															"src": "6666:36:20"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6812:20:20",
																		"nodeType": "YulBlock",
																		"src": "6812:20:20",
																		"statements": [
																			{
																				"nativeSrc": "6814:10:20",
																				"nodeType": "YulAssignment",
																				"src": "6814:10:20",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6823:1:20",
																					"nodeType": "YulLiteral",
																					"src": "6823:1:20",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6814:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "6814:5:20"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6825:5:20",
																				"nodeType": "YulLeave",
																				"src": "6825:5:20"
																			}
																		]
																	},
																	"nativeSrc": "6805:27:20",
																	"nodeType": "YulCase",
																	"src": "6805:27:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6810:1:20",
																		"nodeType": "YulLiteral",
																		"src": "6810:1:20",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6856:176:20",
																		"nodeType": "YulBlock",
																		"src": "6856:176:20",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "6891:22:20",
																					"nodeType": "YulBlock",
																					"src": "6891:22:20",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6893:16:20",
																									"nodeType": "YulIdentifier",
																									"src": "6893:16:20"
																								},
																								"nativeSrc": "6893:18:20",
																								"nodeType": "YulFunctionCall",
																								"src": "6893:18:20"
																							},
																							"nativeSrc": "6893:18:20",
																							"nodeType": "YulExpressionStatement",
																							"src": "6893:18:20"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "6876:8:20",
																							"nodeType": "YulIdentifier",
																							"src": "6876:8:20"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6886:3:20",
																							"nodeType": "YulLiteral",
																							"src": "6886:3:20",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6873:2:20",
																						"nodeType": "YulIdentifier",
																						"src": "6873:2:20"
																					},
																					"nativeSrc": "6873:17:20",
																					"nodeType": "YulFunctionCall",
																					"src": "6873:17:20"
																				},
																				"nativeSrc": "6870:43:20",
																				"nodeType": "YulIf",
																				"src": "6870:43:20"
																			},
																			{
																				"nativeSrc": "6926:25:20",
																				"nodeType": "YulAssignment",
																				"src": "6926:25:20",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6939:1:20",
																							"nodeType": "YulLiteral",
																							"src": "6939:1:20",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "6942:8:20",
																							"nodeType": "YulIdentifier",
																							"src": "6942:8:20"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "6935:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "6935:3:20"
																					},
																					"nativeSrc": "6935:16:20",
																					"nodeType": "YulFunctionCall",
																					"src": "6935:16:20"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6926:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "6926:5:20"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6982:22:20",
																					"nodeType": "YulBlock",
																					"src": "6982:22:20",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6984:16:20",
																									"nodeType": "YulIdentifier",
																									"src": "6984:16:20"
																								},
																								"nativeSrc": "6984:18:20",
																								"nodeType": "YulFunctionCall",
																								"src": "6984:18:20"
																							},
																							"nativeSrc": "6984:18:20",
																							"nodeType": "YulExpressionStatement",
																							"src": "6984:18:20"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "6970:5:20",
																							"nodeType": "YulIdentifier",
																							"src": "6970:5:20"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "6977:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "6977:3:20"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6967:2:20",
																						"nodeType": "YulIdentifier",
																						"src": "6967:2:20"
																					},
																					"nativeSrc": "6967:14:20",
																					"nodeType": "YulFunctionCall",
																					"src": "6967:14:20"
																				},
																				"nativeSrc": "6964:40:20",
																				"nodeType": "YulIf",
																				"src": "6964:40:20"
																			},
																			{
																				"nativeSrc": "7017:5:20",
																				"nodeType": "YulLeave",
																				"src": "7017:5:20"
																			}
																		]
																	},
																	"nativeSrc": "6841:191:20",
																	"nodeType": "YulCase",
																	"src": "6841:191:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6846:1:20",
																		"nodeType": "YulLiteral",
																		"src": "6846:1:20",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "6762:4:20",
																"nodeType": "YulIdentifier",
																"src": "6762:4:20"
															},
															"nativeSrc": "6755:277:20",
															"nodeType": "YulSwitch",
															"src": "6755:277:20"
														},
														{
															"body": {
																"nativeSrc": "7164:123:20",
																"nodeType": "YulBlock",
																"src": "7164:123:20",
																"statements": [
																	{
																		"nativeSrc": "7178:28:20",
																		"nodeType": "YulAssignment",
																		"src": "7178:28:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7191:4:20",
																					"nodeType": "YulIdentifier",
																					"src": "7191:4:20"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "7197:8:20",
																					"nodeType": "YulIdentifier",
																					"src": "7197:8:20"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "7187:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "7187:3:20"
																			},
																			"nativeSrc": "7187:19:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7187:19:20"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "7178:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "7178:5:20"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7237:22:20",
																			"nodeType": "YulBlock",
																			"src": "7237:22:20",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7239:16:20",
																							"nodeType": "YulIdentifier",
																							"src": "7239:16:20"
																						},
																						"nativeSrc": "7239:18:20",
																						"nodeType": "YulFunctionCall",
																						"src": "7239:18:20"
																					},
																					"nativeSrc": "7239:18:20",
																					"nodeType": "YulExpressionStatement",
																					"src": "7239:18:20"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "7225:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "7225:5:20"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "7232:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "7232:3:20"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7222:2:20",
																				"nodeType": "YulIdentifier",
																				"src": "7222:2:20"
																			},
																			"nativeSrc": "7222:14:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7222:14:20"
																		},
																		"nativeSrc": "7219:40:20",
																		"nodeType": "YulIf",
																		"src": "7219:40:20"
																	},
																	{
																		"nativeSrc": "7272:5:20",
																		"nodeType": "YulLeave",
																		"src": "7272:5:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7067:4:20",
																						"nodeType": "YulIdentifier",
																						"src": "7067:4:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7073:2:20",
																						"nodeType": "YulLiteral",
																						"src": "7073:2:20",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7064:2:20",
																					"nodeType": "YulIdentifier",
																					"src": "7064:2:20"
																				},
																				"nativeSrc": "7064:12:20",
																				"nodeType": "YulFunctionCall",
																				"src": "7064:12:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7081:8:20",
																						"nodeType": "YulIdentifier",
																						"src": "7081:8:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7091:2:20",
																						"nodeType": "YulLiteral",
																						"src": "7091:2:20",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7078:2:20",
																					"nodeType": "YulIdentifier",
																					"src": "7078:2:20"
																				},
																				"nativeSrc": "7078:16:20",
																				"nodeType": "YulFunctionCall",
																				"src": "7078:16:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7060:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7060:3:20"
																		},
																		"nativeSrc": "7060:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7060:35:20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "7116:4:20",
																						"nodeType": "YulIdentifier",
																						"src": "7116:4:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7122:3:20",
																						"nodeType": "YulLiteral",
																						"src": "7122:3:20",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7113:2:20",
																					"nodeType": "YulIdentifier",
																					"src": "7113:2:20"
																				},
																				"nativeSrc": "7113:13:20",
																				"nodeType": "YulFunctionCall",
																				"src": "7113:13:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "7131:8:20",
																						"nodeType": "YulIdentifier",
																						"src": "7131:8:20"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7141:2:20",
																						"nodeType": "YulLiteral",
																						"src": "7141:2:20",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "7128:2:20",
																					"nodeType": "YulIdentifier",
																					"src": "7128:2:20"
																				},
																				"nativeSrc": "7128:16:20",
																				"nodeType": "YulFunctionCall",
																				"src": "7128:16:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7109:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:20"
																		},
																		"nativeSrc": "7109:36:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7109:36:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7044:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "7044:2:20"
																},
																"nativeSrc": "7044:111:20",
																"nodeType": "YulFunctionCall",
																"src": "7044:111:20"
															},
															"nativeSrc": "7041:246:20",
															"nodeType": "YulIf",
															"src": "7041:246:20"
														},
														{
															"nativeSrc": "7297:57:20",
															"nodeType": "YulAssignment",
															"src": "7297:57:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7331:1:20",
																		"nodeType": "YulLiteral",
																		"src": "7331:1:20",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7334:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "7334:4:20"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7340:8:20",
																		"nodeType": "YulIdentifier",
																		"src": "7340:8:20"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "7350:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "7350:3:20"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "7312:18:20",
																	"nodeType": "YulIdentifier",
																	"src": "7312:18:20"
																},
																"nativeSrc": "7312:42:20",
																"nodeType": "YulFunctionCall",
																"src": "7312:42:20"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7297:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "7297:5:20"
																},
																{
																	"name": "base",
																	"nativeSrc": "7304:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "7304:4:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7393:22:20",
																"nodeType": "YulBlock",
																"src": "7393:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7395:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "7395:16:20"
																			},
																			"nativeSrc": "7395:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7395:18:20"
																		},
																		"nativeSrc": "7395:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "7395:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7370:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "7370:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "7381:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "7381:3:20"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "7386:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:20"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7377:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:20"
																		},
																		"nativeSrc": "7377:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "7377:14:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7367:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "7367:2:20"
																},
																"nativeSrc": "7367:25:20",
																"nodeType": "YulFunctionCall",
																"src": "7367:25:20"
															},
															"nativeSrc": "7364:51:20",
															"nodeType": "YulIf",
															"src": "7364:51:20"
														},
														{
															"nativeSrc": "7424:25:20",
															"nodeType": "YulAssignment",
															"src": "7424:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7437:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "7437:5:20"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7444:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "7444:4:20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7433:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7433:3:20"
																},
																"nativeSrc": "7433:16:20",
																"nodeType": "YulFunctionCall",
																"src": "7433:16:20"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7424:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "7424:5:20"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "6382:1073:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6412:4:20",
														"nodeType": "YulTypedName",
														"src": "6412:4:20",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6418:8:20",
														"nodeType": "YulTypedName",
														"src": "6418:8:20",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6428:3:20",
														"nodeType": "YulTypedName",
														"src": "6428:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6436:5:20",
														"nodeType": "YulTypedName",
														"src": "6436:5:20",
														"type": ""
													}
												],
												"src": "6382:1073:20"
											},
											{
												"body": {
													"nativeSrc": "7527:219:20",
													"nodeType": "YulBlock",
													"src": "7527:219:20",
													"statements": [
														{
															"nativeSrc": "7537:31:20",
															"nodeType": "YulAssignment",
															"src": "7537:31:20",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7563:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "7563:4:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7545:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "7545:17:20"
																},
																"nativeSrc": "7545:23:20",
																"nodeType": "YulFunctionCall",
																"src": "7545:23:20"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7537:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "7537:4:20"
																}
															]
														},
														{
															"nativeSrc": "7577:39:20",
															"nodeType": "YulAssignment",
															"src": "7577:39:20",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7607:8:20",
																		"nodeType": "YulIdentifier",
																		"src": "7607:8:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7589:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "7589:17:20"
																},
																"nativeSrc": "7589:27:20",
																"nodeType": "YulFunctionCall",
																"src": "7589:27:20"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "7577:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "7577:8:20"
																}
															]
														},
														{
															"nativeSrc": "7626:113:20",
															"nodeType": "YulAssignment",
															"src": "7626:113:20",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7656:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "7656:4:20"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7662:8:20",
																		"nodeType": "YulIdentifier",
																		"src": "7662:8:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7672:66:20",
																		"nodeType": "YulLiteral",
																		"src": "7672:66:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "7635:20:20",
																	"nodeType": "YulIdentifier",
																	"src": "7635:20:20"
																},
																"nativeSrc": "7635:104:20",
																"nodeType": "YulFunctionCall",
																"src": "7635:104:20"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7626:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "7626:5:20"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "7461:285:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7502:4:20",
														"nodeType": "YulTypedName",
														"src": "7502:4:20",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7508:8:20",
														"nodeType": "YulTypedName",
														"src": "7508:8:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7521:5:20",
														"nodeType": "YulTypedName",
														"src": "7521:5:20",
														"type": ""
													}
												],
												"src": "7461:285:20"
											},
											{
												"body": {
													"nativeSrc": "7800:362:20",
													"nodeType": "YulBlock",
													"src": "7800:362:20",
													"statements": [
														{
															"nativeSrc": "7810:25:20",
															"nodeType": "YulAssignment",
															"src": "7810:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7833:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "7833:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7815:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "7815:17:20"
																},
																"nativeSrc": "7815:20:20",
																"nodeType": "YulFunctionCall",
																"src": "7815:20:20"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7810:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "7810:1:20"
																}
															]
														},
														{
															"nativeSrc": "7844:25:20",
															"nodeType": "YulAssignment",
															"src": "7844:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7867:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "7867:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7849:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "7849:17:20"
																},
																"nativeSrc": "7849:20:20",
																"nodeType": "YulFunctionCall",
																"src": "7849:20:20"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7844:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "7844:1:20"
																}
															]
														},
														{
															"nativeSrc": "7878:28:20",
															"nodeType": "YulVariableDeclaration",
															"src": "7878:28:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7901:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "7901:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7904:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "7904:1:20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7897:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7897:3:20"
																},
																"nativeSrc": "7897:9:20",
																"nodeType": "YulFunctionCall",
																"src": "7897:9:20"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7882:11:20",
																	"nodeType": "YulTypedName",
																	"src": "7882:11:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7915:41:20",
															"nodeType": "YulAssignment",
															"src": "7915:41:20",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7944:11:20",
																		"nodeType": "YulIdentifier",
																		"src": "7944:11:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7926:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "7926:17:20"
																},
																"nativeSrc": "7926:30:20",
																"nodeType": "YulFunctionCall",
																"src": "7926:30:20"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7915:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "7915:7:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8133:22:20",
																"nodeType": "YulBlock",
																"src": "8133:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8135:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "8135:16:20"
																			},
																			"nativeSrc": "8135:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "8135:18:20"
																		},
																		"nativeSrc": "8135:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "8135:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8066:1:20",
																						"nodeType": "YulIdentifier",
																						"src": "8066:1:20"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8059:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "8059:6:20"
																				},
																				"nativeSrc": "8059:9:20",
																				"nodeType": "YulFunctionCall",
																				"src": "8059:9:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8089:1:20",
																						"nodeType": "YulIdentifier",
																						"src": "8089:1:20"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8096:7:20",
																								"nodeType": "YulIdentifier",
																								"src": "8096:7:20"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8105:1:20",
																								"nodeType": "YulIdentifier",
																								"src": "8105:1:20"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8092:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "8092:3:20"
																						},
																						"nativeSrc": "8092:15:20",
																						"nodeType": "YulFunctionCall",
																						"src": "8092:15:20"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8086:2:20",
																					"nodeType": "YulIdentifier",
																					"src": "8086:2:20"
																				},
																				"nativeSrc": "8086:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "8086:22:20"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8039:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "8039:2:20"
																		},
																		"nativeSrc": "8039:83:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8039:83:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8019:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8019:6:20"
																},
																"nativeSrc": "8019:113:20",
																"nodeType": "YulFunctionCall",
																"src": "8019:113:20"
															},
															"nativeSrc": "8016:139:20",
															"nodeType": "YulIf",
															"src": "8016:139:20"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7752:410:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7783:1:20",
														"nodeType": "YulTypedName",
														"src": "7783:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7786:1:20",
														"nodeType": "YulTypedName",
														"src": "7786:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7792:7:20",
														"nodeType": "YulTypedName",
														"src": "7792:7:20",
														"type": ""
													}
												],
												"src": "7752:410:20"
											},
											{
												"body": {
													"nativeSrc": "8213:32:20",
													"nodeType": "YulBlock",
													"src": "8213:32:20",
													"statements": [
														{
															"nativeSrc": "8223:16:20",
															"nodeType": "YulAssignment",
															"src": "8223:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "8234:5:20",
																"nodeType": "YulIdentifier",
																"src": "8234:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8223:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "8223:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "8168:77:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8195:5:20",
														"nodeType": "YulTypedName",
														"src": "8195:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8205:7:20",
														"nodeType": "YulTypedName",
														"src": "8205:7:20",
														"type": ""
													}
												],
												"src": "8168:77:20"
											},
											{
												"body": {
													"nativeSrc": "8316:53:20",
													"nodeType": "YulBlock",
													"src": "8316:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8333:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "8333:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8356:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "8356:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "8338:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "8338:17:20"
																		},
																		"nativeSrc": "8338:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8338:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8326:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8326:6:20"
																},
																"nativeSrc": "8326:37:20",
																"nodeType": "YulFunctionCall",
																"src": "8326:37:20"
															},
															"nativeSrc": "8326:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "8326:37:20"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "8251:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8304:5:20",
														"nodeType": "YulTypedName",
														"src": "8304:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8311:3:20",
														"nodeType": "YulTypedName",
														"src": "8311:3:20",
														"type": ""
													}
												],
												"src": "8251:118:20"
											},
											{
												"body": {
													"nativeSrc": "8440:53:20",
													"nodeType": "YulBlock",
													"src": "8440:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8457:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "8457:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8480:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "8480:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8462:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "8462:17:20"
																		},
																		"nativeSrc": "8462:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8462:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8450:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8450:6:20"
																},
																"nativeSrc": "8450:37:20",
																"nodeType": "YulFunctionCall",
																"src": "8450:37:20"
															},
															"nativeSrc": "8450:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "8450:37:20"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8375:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8428:5:20",
														"nodeType": "YulTypedName",
														"src": "8428:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8435:3:20",
														"nodeType": "YulTypedName",
														"src": "8435:3:20",
														"type": ""
													}
												],
												"src": "8375:118:20"
											},
											{
												"body": {
													"nativeSrc": "8544:81:20",
													"nodeType": "YulBlock",
													"src": "8544:81:20",
													"statements": [
														{
															"nativeSrc": "8554:65:20",
															"nodeType": "YulAssignment",
															"src": "8554:65:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8569:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "8569:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8576:42:20",
																		"nodeType": "YulLiteral",
																		"src": "8576:42:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8565:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "8565:3:20"
																},
																"nativeSrc": "8565:54:20",
																"nodeType": "YulFunctionCall",
																"src": "8565:54:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8554:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "8554:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8499:126:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8526:5:20",
														"nodeType": "YulTypedName",
														"src": "8526:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8536:7:20",
														"nodeType": "YulTypedName",
														"src": "8536:7:20",
														"type": ""
													}
												],
												"src": "8499:126:20"
											},
											{
												"body": {
													"nativeSrc": "8676:51:20",
													"nodeType": "YulBlock",
													"src": "8676:51:20",
													"statements": [
														{
															"nativeSrc": "8686:35:20",
															"nodeType": "YulAssignment",
															"src": "8686:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8715:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "8715:5:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "8697:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "8697:17:20"
																},
																"nativeSrc": "8697:24:20",
																"nodeType": "YulFunctionCall",
																"src": "8697:24:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8686:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "8686:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "8631:96:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8658:5:20",
														"nodeType": "YulTypedName",
														"src": "8658:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8668:7:20",
														"nodeType": "YulTypedName",
														"src": "8668:7:20",
														"type": ""
													}
												],
												"src": "8631:96:20"
											},
											{
												"body": {
													"nativeSrc": "8798:53:20",
													"nodeType": "YulBlock",
													"src": "8798:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8815:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "8815:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8838:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "8838:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8820:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "8820:17:20"
																		},
																		"nativeSrc": "8820:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8820:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8808:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8808:6:20"
																},
																"nativeSrc": "8808:37:20",
																"nodeType": "YulFunctionCall",
																"src": "8808:37:20"
															},
															"nativeSrc": "8808:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "8808:37:20"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8733:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8786:5:20",
														"nodeType": "YulTypedName",
														"src": "8786:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8793:3:20",
														"nodeType": "YulTypedName",
														"src": "8793:3:20",
														"type": ""
													}
												],
												"src": "8733:118:20"
											},
											{
												"body": {
													"nativeSrc": "9067:454:20",
													"nodeType": "YulBlock",
													"src": "9067:454:20",
													"statements": [
														{
															"nativeSrc": "9077:27:20",
															"nodeType": "YulAssignment",
															"src": "9077:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9089:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "9089:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9100:3:20",
																		"nodeType": "YulLiteral",
																		"src": "9100:3:20",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9085:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9085:3:20"
																},
																"nativeSrc": "9085:19:20",
																"nodeType": "YulFunctionCall",
																"src": "9085:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9077:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "9077:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9158:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9158:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9171:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9171:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9182:1:20",
																				"nodeType": "YulLiteral",
																				"src": "9182:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9167:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9167:3:20"
																		},
																		"nativeSrc": "9167:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9167:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9114:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "9114:43:20"
																},
																"nativeSrc": "9114:71:20",
																"nodeType": "YulFunctionCall",
																"src": "9114:71:20"
															},
															"nativeSrc": "9114:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "9114:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9239:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9239:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9252:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9252:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9263:2:20",
																				"nodeType": "YulLiteral",
																				"src": "9263:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9248:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9248:3:20"
																		},
																		"nativeSrc": "9248:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9248:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9195:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "9195:43:20"
																},
																"nativeSrc": "9195:72:20",
																"nodeType": "YulFunctionCall",
																"src": "9195:72:20"
															},
															"nativeSrc": "9195:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "9195:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9321:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9321:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9334:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9334:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9345:2:20",
																				"nodeType": "YulLiteral",
																				"src": "9345:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9330:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9330:3:20"
																		},
																		"nativeSrc": "9330:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9330:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9277:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "9277:43:20"
																},
																"nativeSrc": "9277:72:20",
																"nodeType": "YulFunctionCall",
																"src": "9277:72:20"
															},
															"nativeSrc": "9277:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "9277:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "9403:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9403:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9416:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9416:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9427:2:20",
																				"nodeType": "YulLiteral",
																				"src": "9427:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9412:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9412:3:20"
																		},
																		"nativeSrc": "9412:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9412:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9359:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "9359:43:20"
																},
																"nativeSrc": "9359:72:20",
																"nodeType": "YulFunctionCall",
																"src": "9359:72:20"
															},
															"nativeSrc": "9359:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "9359:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "9485:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9485:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9498:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9498:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9509:3:20",
																				"nodeType": "YulLiteral",
																				"src": "9509:3:20",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9494:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9494:3:20"
																		},
																		"nativeSrc": "9494:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9494:19:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9441:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "9441:43:20"
																},
																"nativeSrc": "9441:73:20",
																"nodeType": "YulFunctionCall",
																"src": "9441:73:20"
															},
															"nativeSrc": "9441:73:20",
															"nodeType": "YulExpressionStatement",
															"src": "9441:73:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "8857:664:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9007:9:20",
														"nodeType": "YulTypedName",
														"src": "9007:9:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9019:6:20",
														"nodeType": "YulTypedName",
														"src": "9019:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9027:6:20",
														"nodeType": "YulTypedName",
														"src": "9027:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9035:6:20",
														"nodeType": "YulTypedName",
														"src": "9035:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9043:6:20",
														"nodeType": "YulTypedName",
														"src": "9043:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9051:6:20",
														"nodeType": "YulTypedName",
														"src": "9051:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9062:4:20",
														"nodeType": "YulTypedName",
														"src": "9062:4:20",
														"type": ""
													}
												],
												"src": "8857:664:20"
											},
											{
												"body": {
													"nativeSrc": "9625:124:20",
													"nodeType": "YulBlock",
													"src": "9625:124:20",
													"statements": [
														{
															"nativeSrc": "9635:26:20",
															"nodeType": "YulAssignment",
															"src": "9635:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9647:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "9647:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9658:2:20",
																		"nodeType": "YulLiteral",
																		"src": "9658:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9643:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9643:3:20"
																},
																"nativeSrc": "9643:18:20",
																"nodeType": "YulFunctionCall",
																"src": "9643:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9635:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "9635:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9715:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9715:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9728:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9728:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9739:1:20",
																				"nodeType": "YulLiteral",
																				"src": "9739:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9724:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9724:3:20"
																		},
																		"nativeSrc": "9724:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9724:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9671:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "9671:43:20"
																},
																"nativeSrc": "9671:71:20",
																"nodeType": "YulFunctionCall",
																"src": "9671:71:20"
															},
															"nativeSrc": "9671:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "9671:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9527:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9597:9:20",
														"nodeType": "YulTypedName",
														"src": "9597:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9609:6:20",
														"nodeType": "YulTypedName",
														"src": "9609:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9620:4:20",
														"nodeType": "YulTypedName",
														"src": "9620:4:20",
														"type": ""
													}
												],
												"src": "9527:222:20"
											},
											{
												"body": {
													"nativeSrc": "9851:73:20",
													"nodeType": "YulBlock",
													"src": "9851:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9868:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "9868:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9873:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9873:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9861:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9861:6:20"
																},
																"nativeSrc": "9861:19:20",
																"nodeType": "YulFunctionCall",
																"src": "9861:19:20"
															},
															"nativeSrc": "9861:19:20",
															"nodeType": "YulExpressionStatement",
															"src": "9861:19:20"
														},
														{
															"nativeSrc": "9889:29:20",
															"nodeType": "YulAssignment",
															"src": "9889:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9908:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "9908:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9913:4:20",
																		"nodeType": "YulLiteral",
																		"src": "9913:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9904:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9904:3:20"
																},
																"nativeSrc": "9904:14:20",
																"nodeType": "YulFunctionCall",
																"src": "9904:14:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9889:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "9889:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9755:169:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9823:3:20",
														"nodeType": "YulTypedName",
														"src": "9823:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9828:6:20",
														"nodeType": "YulTypedName",
														"src": "9828:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9839:11:20",
														"nodeType": "YulTypedName",
														"src": "9839:11:20",
														"type": ""
													}
												],
												"src": "9755:169:20"
											},
											{
												"body": {
													"nativeSrc": "9992:184:20",
													"nodeType": "YulBlock",
													"src": "9992:184:20",
													"statements": [
														{
															"nativeSrc": "10002:10:20",
															"nodeType": "YulVariableDeclaration",
															"src": "10002:10:20",
															"value": {
																"kind": "number",
																"nativeSrc": "10011:1:20",
																"nodeType": "YulLiteral",
																"src": "10011:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "10006:1:20",
																	"nodeType": "YulTypedName",
																	"src": "10006:1:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10071:63:20",
																"nodeType": "YulBlock",
																"src": "10071:63:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "10096:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "10096:3:20"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "10101:1:20",
																							"nodeType": "YulIdentifier",
																							"src": "10101:1:20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "10092:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "10092:3:20"
																					},
																					"nativeSrc": "10092:11:20",
																					"nodeType": "YulFunctionCall",
																					"src": "10092:11:20"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "10115:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "10115:3:20"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "10120:1:20",
																									"nodeType": "YulIdentifier",
																									"src": "10120:1:20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10111:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "10111:3:20"
																							},
																							"nativeSrc": "10111:11:20",
																							"nodeType": "YulFunctionCall",
																							"src": "10111:11:20"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "10105:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "10105:5:20"
																					},
																					"nativeSrc": "10105:18:20",
																					"nodeType": "YulFunctionCall",
																					"src": "10105:18:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10085:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "10085:6:20"
																			},
																			"nativeSrc": "10085:39:20",
																			"nodeType": "YulFunctionCall",
																			"src": "10085:39:20"
																		},
																		"nativeSrc": "10085:39:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "10085:39:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "10032:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "10032:1:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10035:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10035:6:20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "10029:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "10029:2:20"
																},
																"nativeSrc": "10029:13:20",
																"nodeType": "YulFunctionCall",
																"src": "10029:13:20"
															},
															"nativeSrc": "10021:113:20",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10043:19:20",
																"nodeType": "YulBlock",
																"src": "10043:19:20",
																"statements": [
																	{
																		"nativeSrc": "10045:15:20",
																		"nodeType": "YulAssignment",
																		"src": "10045:15:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "10054:1:20",
																					"nodeType": "YulIdentifier",
																					"src": "10054:1:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10057:2:20",
																					"nodeType": "YulLiteral",
																					"src": "10057:2:20",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10050:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "10050:3:20"
																			},
																			"nativeSrc": "10050:10:20",
																			"nodeType": "YulFunctionCall",
																			"src": "10050:10:20"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "10045:1:20",
																				"nodeType": "YulIdentifier",
																				"src": "10045:1:20"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "10025:3:20",
																"nodeType": "YulBlock",
																"src": "10025:3:20",
																"statements": []
															},
															"src": "10021:113:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "10154:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "10154:3:20"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10159:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "10159:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10150:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10150:3:20"
																		},
																		"nativeSrc": "10150:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10150:16:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10168:1:20",
																		"nodeType": "YulLiteral",
																		"src": "10168:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10143:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "10143:6:20"
																},
																"nativeSrc": "10143:27:20",
																"nodeType": "YulFunctionCall",
																"src": "10143:27:20"
															},
															"nativeSrc": "10143:27:20",
															"nodeType": "YulExpressionStatement",
															"src": "10143:27:20"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "9930:246:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9974:3:20",
														"nodeType": "YulTypedName",
														"src": "9974:3:20",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "9979:3:20",
														"nodeType": "YulTypedName",
														"src": "9979:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9984:6:20",
														"nodeType": "YulTypedName",
														"src": "9984:6:20",
														"type": ""
													}
												],
												"src": "9930:246:20"
											},
											{
												"body": {
													"nativeSrc": "10230:54:20",
													"nodeType": "YulBlock",
													"src": "10230:54:20",
													"statements": [
														{
															"nativeSrc": "10240:38:20",
															"nodeType": "YulAssignment",
															"src": "10240:38:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10258:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "10258:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10265:2:20",
																				"nodeType": "YulLiteral",
																				"src": "10265:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10254:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10254:3:20"
																		},
																		"nativeSrc": "10254:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10254:14:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10274:2:20",
																				"nodeType": "YulLiteral",
																				"src": "10274:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10270:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10270:3:20"
																		},
																		"nativeSrc": "10270:7:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10270:7:20"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10250:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10250:3:20"
																},
																"nativeSrc": "10250:28:20",
																"nodeType": "YulFunctionCall",
																"src": "10250:28:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10240:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "10240:6:20"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "10182:102:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10213:5:20",
														"nodeType": "YulTypedName",
														"src": "10213:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "10223:6:20",
														"nodeType": "YulTypedName",
														"src": "10223:6:20",
														"type": ""
													}
												],
												"src": "10182:102:20"
											},
											{
												"body": {
													"nativeSrc": "10382:285:20",
													"nodeType": "YulBlock",
													"src": "10382:285:20",
													"statements": [
														{
															"nativeSrc": "10392:53:20",
															"nodeType": "YulVariableDeclaration",
															"src": "10392:53:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10439:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "10439:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "10406:32:20",
																	"nodeType": "YulIdentifier",
																	"src": "10406:32:20"
																},
																"nativeSrc": "10406:39:20",
																"nodeType": "YulFunctionCall",
																"src": "10406:39:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10396:6:20",
																	"nodeType": "YulTypedName",
																	"src": "10396:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10454:78:20",
															"nodeType": "YulAssignment",
															"src": "10454:78:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10520:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "10520:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10525:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10525:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10461:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "10461:58:20"
																},
																"nativeSrc": "10461:71:20",
																"nodeType": "YulFunctionCall",
																"src": "10461:71:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10454:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10454:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10580:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "10580:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10587:4:20",
																				"nodeType": "YulLiteral",
																				"src": "10587:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10576:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10576:3:20"
																		},
																		"nativeSrc": "10576:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10576:16:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10594:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "10594:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10599:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10599:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10541:34:20",
																	"nodeType": "YulIdentifier",
																	"src": "10541:34:20"
																},
																"nativeSrc": "10541:65:20",
																"nodeType": "YulFunctionCall",
																"src": "10541:65:20"
															},
															"nativeSrc": "10541:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "10541:65:20"
														},
														{
															"nativeSrc": "10615:46:20",
															"nodeType": "YulAssignment",
															"src": "10615:46:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10626:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "10626:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10653:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "10653:6:20"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "10631:21:20",
																			"nodeType": "YulIdentifier",
																			"src": "10631:21:20"
																		},
																		"nativeSrc": "10631:29:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10631:29:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10622:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10622:3:20"
																},
																"nativeSrc": "10622:39:20",
																"nodeType": "YulFunctionCall",
																"src": "10622:39:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10615:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10615:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10290:377:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10363:5:20",
														"nodeType": "YulTypedName",
														"src": "10363:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10370:3:20",
														"nodeType": "YulTypedName",
														"src": "10370:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10378:3:20",
														"nodeType": "YulTypedName",
														"src": "10378:3:20",
														"type": ""
													}
												],
												"src": "10290:377:20"
											},
											{
												"body": {
													"nativeSrc": "10791:195:20",
													"nodeType": "YulBlock",
													"src": "10791:195:20",
													"statements": [
														{
															"nativeSrc": "10801:26:20",
															"nodeType": "YulAssignment",
															"src": "10801:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10813:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "10813:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10824:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10824:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10809:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "10809:3:20"
																},
																"nativeSrc": "10809:18:20",
																"nodeType": "YulFunctionCall",
																"src": "10809:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10801:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "10801:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10848:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "10848:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10859:1:20",
																				"nodeType": "YulLiteral",
																				"src": "10859:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10844:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10844:3:20"
																		},
																		"nativeSrc": "10844:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10844:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10867:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "10867:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10873:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "10873:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10863:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "10863:3:20"
																		},
																		"nativeSrc": "10863:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10863:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10837:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "10837:6:20"
																},
																"nativeSrc": "10837:47:20",
																"nodeType": "YulFunctionCall",
																"src": "10837:47:20"
															},
															"nativeSrc": "10837:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "10837:47:20"
														},
														{
															"nativeSrc": "10893:86:20",
															"nodeType": "YulAssignment",
															"src": "10893:86:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10965:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "10965:6:20"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10974:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "10974:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10901:63:20",
																	"nodeType": "YulIdentifier",
																	"src": "10901:63:20"
																},
																"nativeSrc": "10901:78:20",
																"nodeType": "YulFunctionCall",
																"src": "10901:78:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10893:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "10893:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10673:313:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10763:9:20",
														"nodeType": "YulTypedName",
														"src": "10763:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10775:6:20",
														"nodeType": "YulTypedName",
														"src": "10775:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10786:4:20",
														"nodeType": "YulTypedName",
														"src": "10786:4:20",
														"type": ""
													}
												],
												"src": "10673:313:20"
											},
											{
												"body": {
													"nativeSrc": "11050:40:20",
													"nodeType": "YulBlock",
													"src": "11050:40:20",
													"statements": [
														{
															"nativeSrc": "11061:22:20",
															"nodeType": "YulAssignment",
															"src": "11061:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11077:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "11077:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11071:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "11071:5:20"
																},
																"nativeSrc": "11071:12:20",
																"nodeType": "YulFunctionCall",
																"src": "11071:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11061:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11061:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "10992:98:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11033:5:20",
														"nodeType": "YulTypedName",
														"src": "11033:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11043:6:20",
														"nodeType": "YulTypedName",
														"src": "11043:6:20",
														"type": ""
													}
												],
												"src": "10992:98:20"
											},
											{
												"body": {
													"nativeSrc": "11152:60:20",
													"nodeType": "YulBlock",
													"src": "11152:60:20",
													"statements": [
														{
															"nativeSrc": "11162:11:20",
															"nodeType": "YulAssignment",
															"src": "11162:11:20",
															"value": {
																"name": "ptr",
																"nativeSrc": "11170:3:20",
																"nodeType": "YulIdentifier",
																"src": "11170:3:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11162:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "11162:4:20"
																}
															]
														},
														{
															"nativeSrc": "11183:22:20",
															"nodeType": "YulAssignment",
															"src": "11183:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "11195:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "11195:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11200:4:20",
																		"nodeType": "YulLiteral",
																		"src": "11200:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11191:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11191:3:20"
																},
																"nativeSrc": "11191:14:20",
																"nodeType": "YulFunctionCall",
																"src": "11191:14:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11183:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "11183:4:20"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_memory_ptr",
												"nativeSrc": "11096:116:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11139:3:20",
														"nodeType": "YulTypedName",
														"src": "11139:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "11147:4:20",
														"nodeType": "YulTypedName",
														"src": "11147:4:20",
														"type": ""
													}
												],
												"src": "11096:116:20"
											},
											{
												"body": {
													"nativeSrc": "11273:99:20",
													"nodeType": "YulBlock",
													"src": "11273:99:20",
													"statements": [
														{
															"nativeSrc": "11284:42:20",
															"nodeType": "YulVariableDeclaration",
															"src": "11284:42:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "11321:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "11321:3:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11315:5:20",
																			"nodeType": "YulIdentifier",
																			"src": "11315:5:20"
																		},
																		"nativeSrc": "11315:10:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11315:10:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes32",
																	"nativeSrc": "11297:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "11297:17:20"
																},
																"nativeSrc": "11297:29:20",
																"nodeType": "YulFunctionCall",
																"src": "11297:29:20"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "11288:5:20",
																	"nodeType": "YulTypedName",
																	"src": "11288:5:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11336:29:20",
															"nodeType": "YulAssignment",
															"src": "11336:29:20",
															"value": {
																"name": "value",
																"nativeSrc": "11360:5:20",
																"nodeType": "YulIdentifier",
																"src": "11360:5:20"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "11336:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "11336:11:20"
																}
															]
														}
													]
												},
												"name": "read_from_memoryt_bytes32",
												"nativeSrc": "11218:154:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11253:3:20",
														"nodeType": "YulTypedName",
														"src": "11253:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "returnValue",
														"nativeSrc": "11261:11:20",
														"nodeType": "YulTypedName",
														"src": "11261:11:20",
														"type": ""
													}
												],
												"src": "11218:154:20"
											},
											{
												"body": {
													"nativeSrc": "11468:504:20",
													"nodeType": "YulBlock",
													"src": "11468:504:20",
													"statements": [
														{
															"nativeSrc": "11479:52:20",
															"nodeType": "YulVariableDeclaration",
															"src": "11479:52:20",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11525:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "11525:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "11493:31:20",
																	"nodeType": "YulIdentifier",
																	"src": "11493:31:20"
																},
																"nativeSrc": "11493:38:20",
																"nodeType": "YulFunctionCall",
																"src": "11493:38:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11483:6:20",
																	"nodeType": "YulTypedName",
																	"src": "11483:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11540:21:20",
															"nodeType": "YulVariableDeclaration",
															"src": "11540:21:20",
															"value": {
																"name": "array",
																"nativeSrc": "11556:5:20",
																"nodeType": "YulIdentifier",
																"src": "11556:5:20"
															},
															"variables": [
																{
																	"name": "dataArea",
																	"nativeSrc": "11544:8:20",
																	"nodeType": "YulTypedName",
																	"src": "11544:8:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11571:52:20",
															"nodeType": "YulAssignment",
															"src": "11571:52:20",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11617:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "11617:5:20"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_bytes_memory_ptr",
																	"nativeSrc": "11583:33:20",
																	"nodeType": "YulIdentifier",
																	"src": "11583:33:20"
																},
																"nativeSrc": "11583:40:20",
																"nodeType": "YulFunctionCall",
																"src": "11583:40:20"
															},
															"variableNames": [
																{
																	"name": "dataArea",
																	"nativeSrc": "11571:8:20",
																	"nodeType": "YulIdentifier",
																	"src": "11571:8:20"
																}
															]
														},
														{
															"nativeSrc": "11633:44:20",
															"nodeType": "YulAssignment",
															"src": "11633:44:20",
															"value": {
																"arguments": [
																	{
																		"name": "dataArea",
																		"nativeSrc": "11668:8:20",
																		"nodeType": "YulIdentifier",
																		"src": "11668:8:20"
																	}
																],
																"functionName": {
																	"name": "read_from_memoryt_bytes32",
																	"nativeSrc": "11642:25:20",
																	"nodeType": "YulIdentifier",
																	"src": "11642:25:20"
																},
																"nativeSrc": "11642:35:20",
																"nodeType": "YulFunctionCall",
																"src": "11642:35:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11633:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "11633:5:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11705:260:20",
																"nodeType": "YulBlock",
																"src": "11705:260:20",
																"statements": [
																	{
																		"nativeSrc": "11719:236:20",
																		"nodeType": "YulAssignment",
																		"src": "11719:236:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "11749:5:20",
																					"nodeType": "YulIdentifier",
																					"src": "11749:5:20"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "11816:1:20",
																									"nodeType": "YulLiteral",
																									"src": "11816:1:20",
																									"type": "",
																									"value": "8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "11823:2:20",
																											"nodeType": "YulLiteral",
																											"src": "11823:2:20",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "11827:6:20",
																											"nodeType": "YulIdentifier",
																											"src": "11827:6:20"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "11819:3:20",
																										"nodeType": "YulIdentifier",
																										"src": "11819:3:20"
																									},
																									"nativeSrc": "11819:15:20",
																									"nodeType": "YulFunctionCall",
																									"src": "11819:15:20"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "11812:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "11812:3:20"
																							},
																							"nativeSrc": "11812:23:20",
																							"nodeType": "YulFunctionCall",
																							"src": "11812:23:20"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11857:66:20",
																							"nodeType": "YulLiteral",
																							"src": "11857:66:20",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "shift_left_dynamic",
																						"nativeSrc": "11772:18:20",
																						"nodeType": "YulIdentifier",
																						"src": "11772:18:20"
																					},
																					"nativeSrc": "11772:169:20",
																					"nodeType": "YulFunctionCall",
																					"src": "11772:169:20"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11728:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "11728:3:20"
																			},
																			"nativeSrc": "11728:227:20",
																			"nodeType": "YulFunctionCall",
																			"src": "11728:227:20"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "11719:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "11719:5:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11693:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "11693:6:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11701:2:20",
																		"nodeType": "YulLiteral",
																		"src": "11701:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11690:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "11690:2:20"
																},
																"nativeSrc": "11690:14:20",
																"nodeType": "YulFunctionCall",
																"src": "11690:14:20"
															},
															"nativeSrc": "11687:278:20",
															"nodeType": "YulIf",
															"src": "11687:278:20"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nativeSrc": "11378:594:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "11452:5:20",
														"nodeType": "YulTypedName",
														"src": "11452:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11462:5:20",
														"nodeType": "YulTypedName",
														"src": "11462:5:20",
														"type": ""
													}
												],
												"src": "11378:594:20"
											},
											{
												"body": {
													"nativeSrc": "12022:147:20",
													"nodeType": "YulBlock",
													"src": "12022:147:20",
													"statements": [
														{
															"nativeSrc": "12032:25:20",
															"nodeType": "YulAssignment",
															"src": "12032:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12055:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "12055:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12037:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "12037:17:20"
																},
																"nativeSrc": "12037:20:20",
																"nodeType": "YulFunctionCall",
																"src": "12037:20:20"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12032:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "12032:1:20"
																}
															]
														},
														{
															"nativeSrc": "12066:25:20",
															"nodeType": "YulAssignment",
															"src": "12066:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12089:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "12089:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12071:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "12071:17:20"
																},
																"nativeSrc": "12071:20:20",
																"nodeType": "YulFunctionCall",
																"src": "12071:20:20"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12066:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "12066:1:20"
																}
															]
														},
														{
															"nativeSrc": "12100:16:20",
															"nodeType": "YulAssignment",
															"src": "12100:16:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12111:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "12111:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12114:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "12114:1:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12107:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12107:3:20"
																},
																"nativeSrc": "12107:9:20",
																"nodeType": "YulFunctionCall",
																"src": "12107:9:20"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12100:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12100:3:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12140:22:20",
																"nodeType": "YulBlock",
																"src": "12140:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12142:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "12142:16:20"
																			},
																			"nativeSrc": "12142:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "12142:18:20"
																		},
																		"nativeSrc": "12142:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "12142:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12132:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "12132:1:20"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12135:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "12135:3:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12129:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "12129:2:20"
																},
																"nativeSrc": "12129:10:20",
																"nodeType": "YulFunctionCall",
																"src": "12129:10:20"
															},
															"nativeSrc": "12126:36:20",
															"nodeType": "YulIf",
															"src": "12126:36:20"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11978:191:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12009:1:20",
														"nodeType": "YulTypedName",
														"src": "12009:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12012:1:20",
														"nodeType": "YulTypedName",
														"src": "12012:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12018:3:20",
														"nodeType": "YulTypedName",
														"src": "12018:3:20",
														"type": ""
													}
												],
												"src": "11978:191:20"
											},
											{
												"body": {
													"nativeSrc": "12329:288:20",
													"nodeType": "YulBlock",
													"src": "12329:288:20",
													"statements": [
														{
															"nativeSrc": "12339:26:20",
															"nodeType": "YulAssignment",
															"src": "12339:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12351:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "12351:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12362:2:20",
																		"nodeType": "YulLiteral",
																		"src": "12362:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12347:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12347:3:20"
																},
																"nativeSrc": "12347:18:20",
																"nodeType": "YulFunctionCall",
																"src": "12347:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12339:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "12339:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12419:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "12419:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12432:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "12432:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12443:1:20",
																				"nodeType": "YulLiteral",
																				"src": "12443:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12428:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12428:3:20"
																		},
																		"nativeSrc": "12428:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12428:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12375:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "12375:43:20"
																},
																"nativeSrc": "12375:71:20",
																"nodeType": "YulFunctionCall",
																"src": "12375:71:20"
															},
															"nativeSrc": "12375:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "12375:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12500:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "12500:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12513:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "12513:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12524:2:20",
																				"nodeType": "YulLiteral",
																				"src": "12524:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12509:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12509:3:20"
																		},
																		"nativeSrc": "12509:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12509:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12456:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "12456:43:20"
																},
																"nativeSrc": "12456:72:20",
																"nodeType": "YulFunctionCall",
																"src": "12456:72:20"
															},
															"nativeSrc": "12456:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "12456:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12582:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "12582:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12595:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "12595:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12606:2:20",
																				"nodeType": "YulLiteral",
																				"src": "12606:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12591:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12591:3:20"
																		},
																		"nativeSrc": "12591:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12591:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12538:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "12538:43:20"
																},
																"nativeSrc": "12538:72:20",
																"nodeType": "YulFunctionCall",
																"src": "12538:72:20"
															},
															"nativeSrc": "12538:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "12538:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12175:442:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12285:9:20",
														"nodeType": "YulTypedName",
														"src": "12285:9:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12297:6:20",
														"nodeType": "YulTypedName",
														"src": "12297:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12305:6:20",
														"nodeType": "YulTypedName",
														"src": "12305:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12313:6:20",
														"nodeType": "YulTypedName",
														"src": "12313:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12324:4:20",
														"nodeType": "YulTypedName",
														"src": "12324:4:20",
														"type": ""
													}
												],
												"src": "12175:442:20"
											},
											{
												"body": {
													"nativeSrc": "12721:124:20",
													"nodeType": "YulBlock",
													"src": "12721:124:20",
													"statements": [
														{
															"nativeSrc": "12731:26:20",
															"nodeType": "YulAssignment",
															"src": "12731:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12743:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "12743:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12754:2:20",
																		"nodeType": "YulLiteral",
																		"src": "12754:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12739:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12739:3:20"
																},
																"nativeSrc": "12739:18:20",
																"nodeType": "YulFunctionCall",
																"src": "12739:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12731:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "12731:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12811:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "12811:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12824:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "12824:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12835:1:20",
																				"nodeType": "YulLiteral",
																				"src": "12835:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12820:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12820:3:20"
																		},
																		"nativeSrc": "12820:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12820:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12767:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "12767:43:20"
																},
																"nativeSrc": "12767:71:20",
																"nodeType": "YulFunctionCall",
																"src": "12767:71:20"
															},
															"nativeSrc": "12767:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "12767:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "12623:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12693:9:20",
														"nodeType": "YulTypedName",
														"src": "12693:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12705:6:20",
														"nodeType": "YulTypedName",
														"src": "12705:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12716:4:20",
														"nodeType": "YulTypedName",
														"src": "12716:4:20",
														"type": ""
													}
												],
												"src": "12623:222:20"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 20,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x476172656E205465737420546F6B656E00000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x476172656E205465737420546F6B656E00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4754540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xFC SWAP2 SWAP1 PUSH3 0x890 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x10E SWAP2 SWAP1 PUSH3 0x890 JUMP JUMPDEST POP POP POP PUSH3 0x127 PUSH1 0x5 DUP4 PUSH3 0x252 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x145 PUSH1 0x6 DUP3 PUSH3 0x252 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x184 PUSH3 0x2A7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH1 0x1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x24C CALLER PUSH3 0x21F PUSH3 0x303 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH3 0x230 SWAP2 SWAP1 PUSH3 0xAF1 JUMP JUMPDEST PUSH3 0x186A0 PUSH3 0x240 SWAP2 SWAP1 PUSH3 0xB41 JUMP JUMPDEST PUSH3 0x30B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE49 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x277 JUMPI PUSH3 0x26F DUP4 PUSH3 0x395 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x2A1 JUMP JUMPDEST DUP3 PUSH3 0x289 DUP4 PUSH3 0x3FF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD SWAP1 DUP2 PUSH3 0x299 SWAP2 SWAP1 PUSH3 0x890 JUMP JUMPDEST POP PUSH1 0xFF PUSH0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x2E8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xBF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x37E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x375 SWAP2 SWAP1 PUSH3 0xC54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x391 PUSH0 DUP4 DUP4 PUSH3 0x408 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x3E4 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3DB SWAP2 SWAP1 PUSH3 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x3F2 SWAP1 PUSH3 0xD4A JUMP JUMPDEST PUSH0 SHR OR PUSH0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x45C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x44F SWAP2 SWAP1 PUSH3 0xDB9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x52D JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x4E8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4DF SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xDF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x576 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x5C0 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x61F SWAP2 SWAP1 PUSH3 0xE2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x6A8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x6BE JUMPI PUSH3 0x6BD PUSH3 0x663 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x722 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x6E5 JUMP JUMPDEST PUSH3 0x72E DUP7 DUP4 PUSH3 0x6E5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x778 PUSH3 0x772 PUSH3 0x76C DUP5 PUSH3 0x746 JUMP JUMPDEST PUSH3 0x74F JUMP JUMPDEST PUSH3 0x746 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x793 DUP4 PUSH3 0x758 JUMP JUMPDEST PUSH3 0x7AB PUSH3 0x7A2 DUP3 PUSH3 0x77F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x6F1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x7C1 PUSH3 0x7B3 JUMP JUMPDEST PUSH3 0x7CE DUP2 DUP5 DUP5 PUSH3 0x788 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x7F5 JUMPI PUSH3 0x7E9 PUSH0 DUP3 PUSH3 0x7B7 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x7D4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x844 JUMPI PUSH3 0x80E DUP2 PUSH3 0x6C4 JUMP JUMPDEST PUSH3 0x819 DUP5 PUSH3 0x6D6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x829 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x841 PUSH3 0x838 DUP6 PUSH3 0x6D6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x7D3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x866 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x849 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x880 DUP4 DUP4 PUSH3 0x855 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x89B DUP3 PUSH3 0x62C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x8B7 JUMPI PUSH3 0x8B6 PUSH3 0x636 JUMP JUMPDEST JUMPDEST PUSH3 0x8C3 DUP3 SLOAD PUSH3 0x690 JUMP JUMPDEST PUSH3 0x8D0 DUP3 DUP3 DUP6 PUSH3 0x7F9 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x906 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x8F1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x8FD DUP6 DUP3 PUSH3 0x873 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x96C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x916 DUP7 PUSH3 0x6C4 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x93F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x918 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x95F JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x95B PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x855 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x9FE JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x9D6 JUMPI PUSH3 0x9D5 PUSH3 0x974 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x9E6 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x9F6 DUP6 PUSH3 0x9A1 JUMP JUMPDEST SWAP5 POP PUSH3 0x9B6 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0xA18 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xAEA JUMP JUMPDEST DUP2 PUSH3 0xA27 JUMPI PUSH0 SWAP1 POP PUSH3 0xAEA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0xA40 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0xA4B JUMPI PUSH3 0xA81 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xAEA JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0xA60 JUMPI PUSH3 0xA5F PUSH3 0x974 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0xA7A JUMPI PUSH3 0xA79 PUSH3 0x974 JUMP JUMPDEST JUMPDEST POP PUSH3 0xAEA JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0xABB JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0xAB5 JUMPI PUSH3 0xAB4 PUSH3 0x974 JUMP JUMPDEST JUMPDEST PUSH3 0xAEA JUMP JUMPDEST PUSH3 0xACA DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x9AD JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xAE4 JUMPI PUSH3 0xAE3 PUSH3 0x974 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xAFD DUP3 PUSH3 0x746 JUMP JUMPDEST SWAP2 POP PUSH3 0xB0A DUP4 PUSH3 0x746 JUMP JUMPDEST SWAP3 POP PUSH3 0xB39 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0xA07 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xB4D DUP3 PUSH3 0x746 JUMP JUMPDEST SWAP2 POP PUSH3 0xB5A DUP4 PUSH3 0x746 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xB6A DUP2 PUSH3 0x746 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xB84 JUMPI PUSH3 0xB83 PUSH3 0x974 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB9F DUP2 PUSH3 0xB8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xBB0 DUP2 PUSH3 0x746 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xBE1 DUP3 PUSH3 0xBB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xBF3 DUP2 PUSH3 0xBD5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0xC0E PUSH0 DUP4 ADD DUP9 PUSH3 0xB94 JUMP JUMPDEST PUSH3 0xC1D PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xB94 JUMP JUMPDEST PUSH3 0xC2C PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0xB94 JUMP JUMPDEST PUSH3 0xC3B PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0xBA5 JUMP JUMPDEST PUSH3 0xC4A PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0xBE8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xC69 PUSH0 DUP4 ADD DUP5 PUSH3 0xBE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC9E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xC81 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xCC5 DUP3 PUSH3 0x62C JUMP JUMPDEST PUSH3 0xCD1 DUP2 DUP6 PUSH3 0xC6F JUMP JUMPDEST SWAP4 POP PUSH3 0xCE3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xC7F JUMP JUMPDEST PUSH3 0xCEE DUP2 PUSH3 0xCA9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0xD13 DUP2 DUP5 PUSH3 0xCB9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xD41 DUP3 MLOAD PUSH3 0xB8B JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xD56 DUP3 PUSH3 0xD1B JUMP JUMPDEST DUP3 PUSH3 0xD62 DUP5 PUSH3 0xD25 JUMP JUMPDEST SWAP1 POP PUSH3 0xD6F DUP2 PUSH3 0xD34 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0xDB2 JUMPI PUSH3 0xDAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x6E5 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xDC5 DUP3 PUSH3 0x746 JUMP JUMPDEST SWAP2 POP PUSH3 0xDD2 DUP4 PUSH3 0x746 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xDED JUMPI PUSH3 0xDEC PUSH3 0x974 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xE08 PUSH0 DUP4 ADD DUP7 PUSH3 0xBE8 JUMP JUMPDEST PUSH3 0xE17 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xBA5 JUMP JUMPDEST PUSH3 0xE26 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xBA5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xE43 PUSH0 DUP4 ADD DUP5 PUSH3 0xBA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1D4D PUSH3 0xE9B PUSH0 CODECOPY PUSH0 PUSH2 0xB23 ADD MSTORE PUSH0 PUSH2 0xAE8 ADD MSTORE PUSH0 PUSH2 0x109B ADD MSTORE PUSH0 PUSH2 0x107A ADD MSTORE PUSH0 PUSH2 0x9E6 ADD MSTORE PUSH0 PUSH2 0xA3C ADD MSTORE PUSH0 PUSH2 0xA65 ADD MSTORE PUSH2 0x1D4D PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2CE JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x248 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C4 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x16B5 JUMP JUMPDEST PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x1674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x1720 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x442 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH2 0x453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x681 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x30D SWAP1 PUSH2 0x1A9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x339 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x384 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x384 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x367 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x398 PUSH2 0x848 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A5 DUP2 DUP6 DUP6 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3C3 PUSH2 0x848 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D0 DUP6 DUP3 DUP6 PUSH2 0x861 JUMP JUMPDEST PUSH2 0x3DB DUP6 DUP6 DUP6 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3F8 PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x44C DUP3 PUSH2 0xA99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x464 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x46C PUSH2 0xB1A JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x48B JUMPI PUSH2 0x48A PUSH2 0x1ACE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4B9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x507 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x533 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x57E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x555 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x57E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x561 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x619 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x245AECD300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x610 SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x623 CALLER DUP3 PUSH2 0xB55 JUMP JUMPDEST PUSH32 0x5F7666687319B40936F33C188908D86AEA154ABD3F4127B4FA0A3F04F303C7DA DUP2 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x654 SWAP3 SWAP2 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x669 PUSH2 0x848 JUMP JUMPDEST SWAP1 POP PUSH2 0x676 DUP2 DUP6 DUP6 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x6C6 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BD SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x6F4 DUP13 PUSH2 0xBD4 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x70A SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x72C DUP3 PUSH2 0xC27 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x73B DUP3 DUP8 DUP8 DUP8 PUSH2 0xC40 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7AF JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A6 SWAP3 SWAP2 SWAP1 PUSH2 0x1B9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7BA DUP11 DUP11 DUP11 PUSH2 0x84F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x85C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC6E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x86C DUP5 DUP5 PUSH2 0x7C6 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x8ED JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8DE JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EC DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xC6E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x963 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95A SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CA SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DE DUP4 DUP4 DUP4 PUSH2 0xE3D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xA5E JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xA8B JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xA96 JUMP JUMPDEST PUSH2 0xA93 PUSH2 0x1056 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB15 PUSH1 0x5 PUSH32 0x0 PUSH2 0x10EB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB50 PUSH1 0x6 PUSH32 0x0 PUSH2 0x10EB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBC SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBD0 PUSH0 DUP4 DUP4 PUSH2 0xE3D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC39 PUSH2 0xC33 PUSH2 0x9E3 JUMP JUMPDEST DUP4 PUSH2 0x1198 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xC50 DUP9 DUP9 DUP9 DUP9 PUSH2 0x11D8 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xC60 DUP3 DUP3 PUSH2 0x12BF JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCDE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD4E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD45 SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xE37 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE2E SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE81 SWAP2 SWAP1 PUSH2 0x1C23 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF5B JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF16 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFA2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xFEC JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1049 SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10D0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x1107 JUMPI PUSH2 0x1100 DUP4 PUSH2 0x1421 JUMP JUMPDEST SWAP1 POP PUSH2 0x1192 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1113 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x113F SWAP1 PUSH2 0x1A9E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x118A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1161 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x118A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x116D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x1214 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x12B5 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1237 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1257 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A8 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x12B5 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12D2 JUMPI PUSH2 0x12D1 PUSH2 0x1CEA JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12E5 JUMPI PUSH2 0x12E4 PUSH2 0x1CEA JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x141D JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12FF JUMPI PUSH2 0x12FE PUSH2 0x1CEA JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1312 JUMPI PUSH2 0x1311 PUSH2 0x1CEA JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1349 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x135D JUMPI PUSH2 0x135C PUSH2 0x1CEA JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1370 JUMPI PUSH2 0x136F PUSH2 0x1CEA JUMP JUMPDEST JUMPDEST SUB PUSH2 0x13B4 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AB SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x13C7 JUMPI PUSH2 0x13C6 PUSH2 0x1CEA JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13DA JUMPI PUSH2 0x13D9 PUSH2 0x1CEA JUMP JUMPDEST JUMPDEST SUB PUSH2 0x141C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1413 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x142D DUP4 PUSH2 0x1493 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x144B JUMPI PUSH2 0x144A PUSH2 0x1ACE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x147D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x14D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1518 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14FD JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x153D DUP3 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0x1547 DUP2 DUP6 PUSH2 0x14EB JUMP JUMPDEST SWAP4 POP PUSH2 0x1557 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x1560 DUP2 PUSH2 0x1523 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1583 DUP2 DUP5 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15B8 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C8 DUP2 PUSH2 0x15AE JUMP JUMPDEST DUP2 EQ PUSH2 0x15D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15E3 DUP2 PUSH2 0x15BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15FB DUP2 PUSH2 0x15E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1605 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1616 DUP2 PUSH2 0x15F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1632 JUMPI PUSH2 0x1631 PUSH2 0x158B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x163F DUP6 DUP3 DUP7 ADD PUSH2 0x15D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1650 DUP6 DUP3 DUP7 ADD PUSH2 0x1608 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x166E DUP2 PUSH2 0x165A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1687 PUSH0 DUP4 ADD DUP5 PUSH2 0x1665 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1696 DUP2 PUSH2 0x15E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16AF PUSH0 DUP4 ADD DUP5 PUSH2 0x168D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16CC JUMPI PUSH2 0x16CB PUSH2 0x158B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D9 DUP7 DUP3 DUP8 ADD PUSH2 0x15D5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16EA DUP7 DUP3 DUP8 ADD PUSH2 0x15D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16FB DUP7 DUP3 DUP8 ADD PUSH2 0x1608 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x171A DUP2 PUSH2 0x1705 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1733 PUSH0 DUP4 ADD DUP5 PUSH2 0x1711 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x174B DUP2 PUSH2 0x1739 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1764 PUSH0 DUP4 ADD DUP5 PUSH2 0x1742 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x177F JUMPI PUSH2 0x177E PUSH2 0x158B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x178C DUP5 DUP3 DUP6 ADD PUSH2 0x15D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C9 DUP2 PUSH2 0x1795 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17D8 DUP2 PUSH2 0x15AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1810 DUP2 PUSH2 0x15E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1821 DUP4 DUP4 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1843 DUP3 PUSH2 0x17DE JUMP JUMPDEST PUSH2 0x184D DUP2 DUP6 PUSH2 0x17E8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1858 DUP4 PUSH2 0x17F8 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1888 JUMPI DUP2 MLOAD PUSH2 0x186F DUP9 DUP3 PUSH2 0x1816 JUMP JUMPDEST SWAP8 POP PUSH2 0x187A DUP4 PUSH2 0x182D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x185B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x18A8 PUSH0 DUP4 ADD DUP11 PUSH2 0x17C0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x18BA DUP2 DUP10 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x18CE DUP2 DUP9 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP PUSH2 0x18DD PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x18EA PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x18F7 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1742 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1909 DUP2 DUP5 PUSH2 0x1839 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x192C JUMPI PUSH2 0x192B PUSH2 0x158B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1939 DUP5 DUP3 DUP6 ADD PUSH2 0x1608 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x194B DUP2 PUSH2 0x1705 JUMP JUMPDEST DUP2 EQ PUSH2 0x1955 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1966 DUP2 PUSH2 0x1942 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1975 DUP2 PUSH2 0x1739 JUMP JUMPDEST DUP2 EQ PUSH2 0x197F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1990 DUP2 PUSH2 0x196C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x19B1 JUMPI PUSH2 0x19B0 PUSH2 0x158B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19BE DUP11 DUP3 DUP12 ADD PUSH2 0x15D5 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x19CF DUP11 DUP3 DUP12 ADD PUSH2 0x15D5 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x19E0 DUP11 DUP3 DUP12 ADD PUSH2 0x1608 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x19F1 DUP11 DUP3 DUP12 ADD PUSH2 0x1608 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1A02 DUP11 DUP3 DUP12 ADD PUSH2 0x1958 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1A13 DUP11 DUP3 DUP12 ADD PUSH2 0x1982 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1A24 DUP11 DUP3 DUP12 ADD PUSH2 0x1982 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A49 JUMPI PUSH2 0x1A48 PUSH2 0x158B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A56 DUP6 DUP3 DUP7 ADD PUSH2 0x15D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A67 DUP6 DUP3 DUP7 ADD PUSH2 0x15D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1AB5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AC8 JUMPI PUSH2 0x1AC7 PUSH2 0x1A71 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B0E PUSH0 DUP4 ADD DUP5 PUSH2 0x17CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B27 PUSH0 DUP4 ADD DUP6 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x1B34 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x168D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1B4E PUSH0 DUP4 ADD DUP10 PUSH2 0x1742 JUMP JUMPDEST PUSH2 0x1B5B PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x1B68 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x1B75 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x1B82 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x1B8F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x168D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BAD PUSH0 DUP4 ADD DUP6 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x1BBA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17CF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BD4 PUSH0 DUP4 ADD DUP7 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x1BE1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x1BEE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x168D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C2D DUP3 PUSH2 0x15E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C38 DUP4 PUSH2 0x15E9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C50 JUMPI PUSH2 0x1C4F PUSH2 0x1BF6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1C69 PUSH0 DUP4 ADD DUP9 PUSH2 0x1742 JUMP JUMPDEST PUSH2 0x1C76 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1742 JUMP JUMPDEST PUSH2 0x1C83 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1742 JUMP JUMPDEST PUSH2 0x1C90 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x1C9D PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x17CF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1CBA PUSH0 DUP4 ADD DUP8 PUSH2 0x1742 JUMP JUMPDEST PUSH2 0x1CC7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x1CD4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1742 JUMP JUMPDEST PUSH2 0x1CE1 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1742 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 JUMP CHAINID DELEGATECALL POP 0xBB PUSH27 0xDC94C0613BEEDC8068FE2CD2AFD9C27E2A7DFB98F8ED4734046473 PUSH16 0x6C634300081500330000000000000000 ",
							"sourceMap": "423:746:0:-:0;;;644:231;;;;;;;;;;1574:52:5;;;;;;;;;;;;;;;;;1613:4;3328:431:16;;;;;;;;;;;;;;;;;1896:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;3401:45:16;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1574:52:5;1713:1:11;1917:7;:21;;;;742:10:0::2;734:5;;:18;;;;;;;;;;;;;;;;;;812:55;818:10;854;:8;;;:10;;:::i;:::-;846:19;;840:2;:25;;;;:::i;:::-;830:6;:36;;;;:::i;:::-;812:5;;;:55;;:::i;:::-;423:746:::0;;2914:340:12;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:16:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3002:82:3:-;3051:5;3075:2;3068:9;;3002:82;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;1708:286:12:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:13:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;6271:1107:3:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:20:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:180::-;5282:77;5279:1;5272:88;5379:4;5376:1;5369:15;5403:4;5400:1;5393:15;5420:102;5462:8;5509:5;5506:1;5502:13;5481:34;;5420:102;;;:::o;5528:848::-;5589:5;5596:4;5620:6;5611:15;;5644:5;5635:14;;5658:712;5679:1;5669:8;5666:15;5658:712;;;5774:4;5769:3;5765:14;5759:4;5756:24;5753:50;;;5783:18;;:::i;:::-;5753:50;5833:1;5823:8;5819:16;5816:451;;;6248:4;6241:5;6237:16;6228:25;;5816:451;6298:4;6292;6288:15;6280:23;;6328:32;6351:8;6328:32;:::i;:::-;6316:44;;5658:712;;;5528:848;;;;;;;:::o;6382:1073::-;6436:5;6627:8;6617:40;;6648:1;6639:10;;6650:5;;6617:40;6676:4;6666:36;;6693:1;6684:10;;6695:5;;6666:36;6762:4;6810:1;6805:27;;;;6846:1;6841:191;;;;6755:277;;6805:27;6823:1;6814:10;;6825:5;;;6841:191;6886:3;6876:8;6873:17;6870:43;;;6893:18;;:::i;:::-;6870:43;6942:8;6939:1;6935:16;6926:25;;6977:3;6970:5;6967:14;6964:40;;;6984:18;;:::i;:::-;6964:40;7017:5;;;6755:277;;7141:2;7131:8;7128:16;7122:3;7116:4;7113:13;7109:36;7091:2;7081:8;7078:16;7073:2;7067:4;7064:12;7060:35;7044:111;7041:246;;;7197:8;7191:4;7187:19;7178:28;;7232:3;7225:5;7222:14;7219:40;;;7239:18;;:::i;:::-;7219:40;7272:5;;7041:246;7312:42;7350:3;7340:8;7334:4;7331:1;7312:42;:::i;:::-;7297:57;;;;7386:4;7381:3;7377:14;7370:5;7367:25;7364:51;;;7395:18;;:::i;:::-;7364:51;7444:4;7437:5;7433:16;7424:25;;6382:1073;;;;;;:::o;7461:285::-;7521:5;7545:23;7563:4;7545:23;:::i;:::-;7537:31;;7589:27;7607:8;7589:27;:::i;:::-;7577:39;;7635:104;7672:66;7662:8;7656:4;7635:104;:::i;:::-;7626:113;;7461:285;;;;:::o;7752:410::-;7792:7;7815:20;7833:1;7815:20;:::i;:::-;7810:25;;7849:20;7867:1;7849:20;:::i;:::-;7844:25;;7904:1;7901;7897:9;7926:30;7944:11;7926:30;:::i;:::-;7915:41;;8105:1;8096:7;8092:15;8089:1;8086:22;8066:1;8059:9;8039:83;8016:139;;8135:18;;:::i;:::-;8016:139;7800:362;7752:410;;;;:::o;8168:77::-;8205:7;8234:5;8223:16;;8168:77;;;:::o;8251:118::-;8338:24;8356:5;8338:24;:::i;:::-;8333:3;8326:37;8251:118;;:::o;8375:::-;8462:24;8480:5;8462:24;:::i;:::-;8457:3;8450:37;8375:118;;:::o;8499:126::-;8536:7;8576:42;8569:5;8565:54;8554:65;;8499:126;;;:::o;8631:96::-;8668:7;8697:24;8715:5;8697:24;:::i;:::-;8686:35;;8631:96;;;:::o;8733:118::-;8820:24;8838:5;8820:24;:::i;:::-;8815:3;8808:37;8733:118;;:::o;8857:664::-;9062:4;9100:3;9089:9;9085:19;9077:27;;9114:71;9182:1;9171:9;9167:17;9158:6;9114:71;:::i;:::-;9195:72;9263:2;9252:9;9248:18;9239:6;9195:72;:::i;:::-;9277;9345:2;9334:9;9330:18;9321:6;9277:72;:::i;:::-;9359;9427:2;9416:9;9412:18;9403:6;9359:72;:::i;:::-;9441:73;9509:3;9498:9;9494:19;9485:6;9441:73;:::i;:::-;8857:664;;;;;;;;:::o;9527:222::-;9620:4;9658:2;9647:9;9643:18;9635:26;;9671:71;9739:1;9728:9;9724:17;9715:6;9671:71;:::i;:::-;9527:222;;;;:::o;9755:169::-;9839:11;9873:6;9868:3;9861:19;9913:4;9908:3;9904:14;9889:29;;9755:169;;;;:::o;9930:246::-;10011:1;10021:113;10035:6;10032:1;10029:13;10021:113;;;10120:1;10115:3;10111:11;10105:18;10101:1;10096:3;10092:11;10085:39;10057:2;10054:1;10050:10;10045:15;;10021:113;;;10168:1;10159:6;10154:3;10150:16;10143:27;9992:184;9930:246;;;:::o;10182:102::-;10223:6;10274:2;10270:7;10265:2;10258:5;10254:14;10250:28;10240:38;;10182:102;;;:::o;10290:377::-;10378:3;10406:39;10439:5;10406:39;:::i;:::-;10461:71;10525:6;10520:3;10461:71;:::i;:::-;10454:78;;10541:65;10599:6;10594:3;10587:4;10580:5;10576:16;10541:65;:::i;:::-;10631:29;10653:6;10631:29;:::i;:::-;10626:3;10622:39;10615:46;;10382:285;10290:377;;;;:::o;10673:313::-;10786:4;10824:2;10813:9;10809:18;10801:26;;10873:9;10867:4;10863:20;10859:1;10848:9;10844:17;10837:47;10901:78;10974:4;10965:6;10901:78;:::i;:::-;10893:86;;10673:313;;;;:::o;10992:98::-;11043:6;11077:5;11071:12;11061:22;;10992:98;;;:::o;11096:116::-;11147:4;11170:3;11162:11;;11200:4;11195:3;11191:14;11183:22;;11096:116;;;:::o;11218:154::-;11261:11;11297:29;11321:3;11315:10;11297:29;:::i;:::-;11360:5;11336:29;;11273:99;11218:154;;;:::o;11378:594::-;11462:5;11493:38;11525:5;11493:38;:::i;:::-;11556:5;11583:40;11617:5;11583:40;:::i;:::-;11571:52;;11642:35;11668:8;11642:35;:::i;:::-;11633:44;;11701:2;11693:6;11690:14;11687:278;;;11772:169;11857:66;11827:6;11823:2;11819:15;11816:1;11812:23;11772:169;:::i;:::-;11749:5;11728:227;11719:236;;11687:278;11468:504;;11378:594;;;:::o;11978:191::-;12018:3;12037:20;12055:1;12037:20;:::i;:::-;12032:25;;12071:20;12089:1;12071:20;:::i;:::-;12066:25;;12114:1;12111;12107:9;12100:16;;12135:3;12132:1;12129:10;12126:36;;;12142:18;;:::i;:::-;12126:36;11978:191;;;;:::o;12175:442::-;12324:4;12362:2;12351:9;12347:18;12339:26;;12375:71;12443:1;12432:9;12428:17;12419:6;12375:71;:::i;:::-;12456:72;12524:2;12513:9;12509:18;12500:6;12456:72;:::i;:::-;12538;12606:2;12595:9;12591:18;12582:6;12538:72;:::i;:::-;12175:442;;;;;;:::o;12623:222::-;12716:4;12754:2;12743:9;12739:18;12731:26;;12767:71;12835:1;12824:9;12820:17;12811:6;12767:71;:::i;:::-;12623:222;;;;:::o;423:746:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_1011": {
									"entryPoint": 1007,
									"id": 1011,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Name_2638": {
									"entryPoint": 2783,
									"id": 2638,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Version_2650": {
									"entryPoint": 2842,
									"id": 2650,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_approve_671": {
									"entryPoint": 2127,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_731": {
									"entryPoint": 3182,
									"id": 731,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_2568": {
									"entryPoint": 4182,
									"id": 2568,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_domainSeparatorV4_2547": {
									"entryPoint": 2531,
									"id": 2547,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_hashTypedDataV4_2584": {
									"entryPoint": 3111,
									"id": 2584,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_mint_620": {
									"entryPoint": 2901,
									"id": 620,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1339": {
									"entryPoint": 2120,
									"id": 1339,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_779": {
									"entryPoint": 2145,
									"id": 779,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_throwError_2423": {
									"entryPoint": 4799,
									"id": 2423,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transfer_510": {
									"entryPoint": 2291,
									"id": 510,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_587": {
									"entryPoint": 3645,
									"id": 587,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_useNonce_1399": {
									"entryPoint": 3028,
									"id": 1399,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@allowance_407": {
									"entryPoint": 1990,
									"id": 407,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_431": {
									"entryPoint": 910,
									"id": 431,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_366": {
									"entryPoint": 1021,
									"id": 366,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@byteLength_1612": {
									"entryPoint": 5267,
									"id": 1612,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_344": {
									"entryPoint": 999,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@eip712Domain_2626": {
									"entryPoint": 1107,
									"id": 2626,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@mint_102": {
									"entryPoint": 1416,
									"id": 102,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_326": {
									"entryPoint": 766,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_1001": {
									"entryPoint": 1090,
									"id": 1001,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nonces_1384": {
									"entryPoint": 2713,
									"id": 1384,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@permit_984": {
									"entryPoint": 1665,
									"id": 984,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@recover_2374": {
									"entryPoint": 3136,
									"id": 2374,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@symbol_335": {
									"entryPoint": 1272,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toStringWithFallback_1679": {
									"entryPoint": 4331,
									"id": 1679,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_1580": {
									"entryPoint": 5153,
									"id": 1580,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toTypedDataHash_2724": {
									"entryPoint": 4504,
									"id": 2724,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_353": {
									"entryPoint": 944,
									"id": 353,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_463": {
									"entryPoint": 953,
									"id": 463,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_390": {
									"entryPoint": 1631,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tryRecover_2338": {
									"entryPoint": 4568,
									"id": 2338,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"abi_decode_t_address": {
									"entryPoint": 5589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 6530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 6488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 6550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes1_to_t_bytes1_fromStack": {
									"entryPoint": 6080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 7066,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7105,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6293,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6971,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7254,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 7335,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6932,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes1": {
									"entryPoint": 6037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5371,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7158,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7402,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6769,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6862,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5515,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 6508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 6466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16054:20",
										"nodeType": "YulBlock",
										"src": "0:16054:20",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:20",
													"nodeType": "YulBlock",
													"src": "66:40:20",
													"statements": [
														{
															"nativeSrc": "77:22:20",
															"nodeType": "YulAssignment",
															"src": "77:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:20"
																},
																"nativeSrc": "87:12:20",
																"nodeType": "YulFunctionCall",
																"src": "87:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:20",
														"nodeType": "YulTypedName",
														"src": "49:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:20",
														"nodeType": "YulTypedName",
														"src": "59:6:20",
														"type": ""
													}
												],
												"src": "7:99:20"
											},
											{
												"body": {
													"nativeSrc": "208:73:20",
													"nodeType": "YulBlock",
													"src": "208:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:20"
																},
																"nativeSrc": "218:19:20",
																"nodeType": "YulFunctionCall",
																"src": "218:19:20"
															},
															"nativeSrc": "218:19:20",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:20"
														},
														{
															"nativeSrc": "246:29:20",
															"nodeType": "YulAssignment",
															"src": "246:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:20",
																		"nodeType": "YulLiteral",
																		"src": "270:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:20"
																},
																"nativeSrc": "261:14:20",
																"nodeType": "YulFunctionCall",
																"src": "261:14:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:20",
														"nodeType": "YulTypedName",
														"src": "180:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:20",
														"nodeType": "YulTypedName",
														"src": "185:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:20",
														"nodeType": "YulTypedName",
														"src": "196:11:20",
														"type": ""
													}
												],
												"src": "112:169:20"
											},
											{
												"body": {
													"nativeSrc": "349:184:20",
													"nodeType": "YulBlock",
													"src": "349:184:20",
													"statements": [
														{
															"nativeSrc": "359:10:20",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:20",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:20",
																"nodeType": "YulLiteral",
																"src": "368:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:20",
																	"nodeType": "YulTypedName",
																	"src": "363:1:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:20",
																"nodeType": "YulBlock",
																"src": "428:63:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:20",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:20"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:20",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:20",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:20"
																					},
																					"nativeSrc": "449:11:20",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:20"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:20",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:20"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:20",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:20",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:20"
																							},
																							"nativeSrc": "468:11:20",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:20"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:20"
																					},
																					"nativeSrc": "462:18:20",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:20"
																			},
																			"nativeSrc": "442:39:20",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:20"
																		},
																		"nativeSrc": "442:39:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:20"
																},
																"nativeSrc": "386:13:20",
																"nodeType": "YulFunctionCall",
																"src": "386:13:20"
															},
															"nativeSrc": "378:113:20",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:20",
																"nodeType": "YulBlock",
																"src": "400:19:20",
																"statements": [
																	{
																		"nativeSrc": "402:15:20",
																		"nodeType": "YulAssignment",
																		"src": "402:15:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:20",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:20",
																					"nodeType": "YulLiteral",
																					"src": "414:2:20",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:20"
																			},
																			"nativeSrc": "407:10:20",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:20"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:20",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:20"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:20",
																"nodeType": "YulBlock",
																"src": "382:3:20",
																"statements": []
															},
															"src": "378:113:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:20"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:20"
																		},
																		"nativeSrc": "507:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:20",
																		"nodeType": "YulLiteral",
																		"src": "525:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:20"
																},
																"nativeSrc": "500:27:20",
																"nodeType": "YulFunctionCall",
																"src": "500:27:20"
															},
															"nativeSrc": "500:27:20",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:20"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:20",
														"nodeType": "YulTypedName",
														"src": "331:3:20",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:20",
														"nodeType": "YulTypedName",
														"src": "336:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:20",
														"nodeType": "YulTypedName",
														"src": "341:6:20",
														"type": ""
													}
												],
												"src": "287:246:20"
											},
											{
												"body": {
													"nativeSrc": "587:54:20",
													"nodeType": "YulBlock",
													"src": "587:54:20",
													"statements": [
														{
															"nativeSrc": "597:38:20",
															"nodeType": "YulAssignment",
															"src": "597:38:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:20",
																				"nodeType": "YulLiteral",
																				"src": "622:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:20"
																		},
																		"nativeSrc": "611:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:20",
																				"nodeType": "YulLiteral",
																				"src": "631:2:20",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:20"
																		},
																		"nativeSrc": "627:7:20",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:20"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:20"
																},
																"nativeSrc": "607:28:20",
																"nodeType": "YulFunctionCall",
																"src": "607:28:20"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:20"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:20",
														"nodeType": "YulTypedName",
														"src": "570:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:20",
														"nodeType": "YulTypedName",
														"src": "580:6:20",
														"type": ""
													}
												],
												"src": "539:102:20"
											},
											{
												"body": {
													"nativeSrc": "739:285:20",
													"nodeType": "YulBlock",
													"src": "739:285:20",
													"statements": [
														{
															"nativeSrc": "749:53:20",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:20",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:20"
																},
																"nativeSrc": "763:39:20",
																"nodeType": "YulFunctionCall",
																"src": "763:39:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:20",
																	"nodeType": "YulTypedName",
																	"src": "753:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:20",
															"nodeType": "YulAssignment",
															"src": "811:78:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:20",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:20"
																},
																"nativeSrc": "818:71:20",
																"nodeType": "YulFunctionCall",
																"src": "818:71:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:20",
																				"nodeType": "YulLiteral",
																				"src": "944:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:20"
																		},
																		"nativeSrc": "933:16:20",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:20"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:20",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:20"
																},
																"nativeSrc": "898:65:20",
																"nodeType": "YulFunctionCall",
																"src": "898:65:20"
															},
															"nativeSrc": "898:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:20"
														},
														{
															"nativeSrc": "972:46:20",
															"nodeType": "YulAssignment",
															"src": "972:46:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:20"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:20",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:20"
																		},
																		"nativeSrc": "988:29:20",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:20"
																},
																"nativeSrc": "979:39:20",
																"nodeType": "YulFunctionCall",
																"src": "979:39:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:20",
														"nodeType": "YulTypedName",
														"src": "720:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:20",
														"nodeType": "YulTypedName",
														"src": "727:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:20",
														"nodeType": "YulTypedName",
														"src": "735:3:20",
														"type": ""
													}
												],
												"src": "647:377:20"
											},
											{
												"body": {
													"nativeSrc": "1148:195:20",
													"nodeType": "YulBlock",
													"src": "1148:195:20",
													"statements": [
														{
															"nativeSrc": "1158:26:20",
															"nodeType": "YulAssignment",
															"src": "1158:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:20"
																},
																"nativeSrc": "1166:18:20",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:20",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:20"
																		},
																		"nativeSrc": "1201:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:20"
																		},
																		"nativeSrc": "1220:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:20"
																},
																"nativeSrc": "1194:47:20",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:20"
															},
															"nativeSrc": "1194:47:20",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:20"
														},
														{
															"nativeSrc": "1250:86:20",
															"nodeType": "YulAssignment",
															"src": "1250:86:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:20"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:20",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:20"
																},
																"nativeSrc": "1258:78:20",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:20",
														"nodeType": "YulTypedName",
														"src": "1120:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:20",
														"nodeType": "YulTypedName",
														"src": "1132:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:20",
														"nodeType": "YulTypedName",
														"src": "1143:4:20",
														"type": ""
													}
												],
												"src": "1030:313:20"
											},
											{
												"body": {
													"nativeSrc": "1389:35:20",
													"nodeType": "YulBlock",
													"src": "1389:35:20",
													"statements": [
														{
															"nativeSrc": "1399:19:20",
															"nodeType": "YulAssignment",
															"src": "1399:19:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:20",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:20"
																},
																"nativeSrc": "1409:9:20",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:20"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:20"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:20",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:20",
														"nodeType": "YulTypedName",
														"src": "1382:6:20",
														"type": ""
													}
												],
												"src": "1349:75:20"
											},
											{
												"body": {
													"nativeSrc": "1519:28:20",
													"nodeType": "YulBlock",
													"src": "1519:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:20"
																},
																"nativeSrc": "1529:12:20",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:20"
															},
															"nativeSrc": "1529:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:20"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:20"
											},
											{
												"body": {
													"nativeSrc": "1642:28:20",
													"nodeType": "YulBlock",
													"src": "1642:28:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:20",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:20"
																},
																"nativeSrc": "1652:12:20",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:20"
															},
															"nativeSrc": "1652:12:20",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:20"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:20",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:20"
											},
											{
												"body": {
													"nativeSrc": "1721:81:20",
													"nodeType": "YulBlock",
													"src": "1721:81:20",
													"statements": [
														{
															"nativeSrc": "1731:65:20",
															"nodeType": "YulAssignment",
															"src": "1731:65:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:20",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:20",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:20"
																},
																"nativeSrc": "1742:54:20",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:20",
														"nodeType": "YulTypedName",
														"src": "1703:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:20",
														"nodeType": "YulTypedName",
														"src": "1713:7:20",
														"type": ""
													}
												],
												"src": "1676:126:20"
											},
											{
												"body": {
													"nativeSrc": "1853:51:20",
													"nodeType": "YulBlock",
													"src": "1853:51:20",
													"statements": [
														{
															"nativeSrc": "1863:35:20",
															"nodeType": "YulAssignment",
															"src": "1863:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:20"
																},
																"nativeSrc": "1874:24:20",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:20",
														"nodeType": "YulTypedName",
														"src": "1835:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:20",
														"nodeType": "YulTypedName",
														"src": "1845:7:20",
														"type": ""
													}
												],
												"src": "1808:96:20"
											},
											{
												"body": {
													"nativeSrc": "1953:79:20",
													"nodeType": "YulBlock",
													"src": "1953:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:20",
																"nodeType": "YulBlock",
																"src": "2010:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:20"
																			},
																			"nativeSrc": "2012:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:20"
																		},
																		"nativeSrc": "2012:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:20"
																				},
																				"nativeSrc": "1983:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:20"
																		},
																		"nativeSrc": "1973:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:20"
																},
																"nativeSrc": "1966:43:20",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:20"
															},
															"nativeSrc": "1963:63:20",
															"nodeType": "YulIf",
															"src": "1963:63:20"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:20",
														"nodeType": "YulTypedName",
														"src": "1946:5:20",
														"type": ""
													}
												],
												"src": "1910:122:20"
											},
											{
												"body": {
													"nativeSrc": "2090:87:20",
													"nodeType": "YulBlock",
													"src": "2090:87:20",
													"statements": [
														{
															"nativeSrc": "2100:29:20",
															"nodeType": "YulAssignment",
															"src": "2100:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:20"
																},
																"nativeSrc": "2109:20:20",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:20"
																},
																"nativeSrc": "2138:33:20",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:20"
															},
															"nativeSrc": "2138:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:20"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:20",
														"nodeType": "YulTypedName",
														"src": "2068:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:20",
														"nodeType": "YulTypedName",
														"src": "2076:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:20",
														"nodeType": "YulTypedName",
														"src": "2084:5:20",
														"type": ""
													}
												],
												"src": "2038:139:20"
											},
											{
												"body": {
													"nativeSrc": "2228:32:20",
													"nodeType": "YulBlock",
													"src": "2228:32:20",
													"statements": [
														{
															"nativeSrc": "2238:16:20",
															"nodeType": "YulAssignment",
															"src": "2238:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:20",
																"nodeType": "YulIdentifier",
																"src": "2249:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:20",
														"nodeType": "YulTypedName",
														"src": "2210:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:20",
														"nodeType": "YulTypedName",
														"src": "2220:7:20",
														"type": ""
													}
												],
												"src": "2183:77:20"
											},
											{
												"body": {
													"nativeSrc": "2309:79:20",
													"nodeType": "YulBlock",
													"src": "2309:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:20",
																"nodeType": "YulBlock",
																"src": "2366:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:20",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:20"
																			},
																			"nativeSrc": "2368:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:20"
																		},
																		"nativeSrc": "2368:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:20"
																				},
																				"nativeSrc": "2339:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:20"
																		},
																		"nativeSrc": "2329:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:20"
																},
																"nativeSrc": "2322:43:20",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:20"
															},
															"nativeSrc": "2319:63:20",
															"nodeType": "YulIf",
															"src": "2319:63:20"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:20",
														"nodeType": "YulTypedName",
														"src": "2302:5:20",
														"type": ""
													}
												],
												"src": "2266:122:20"
											},
											{
												"body": {
													"nativeSrc": "2446:87:20",
													"nodeType": "YulBlock",
													"src": "2446:87:20",
													"statements": [
														{
															"nativeSrc": "2456:29:20",
															"nodeType": "YulAssignment",
															"src": "2456:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:20"
																},
																"nativeSrc": "2465:20:20",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:20"
																},
																"nativeSrc": "2494:33:20",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:20"
															},
															"nativeSrc": "2494:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:20"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:20",
														"nodeType": "YulTypedName",
														"src": "2424:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:20",
														"nodeType": "YulTypedName",
														"src": "2432:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:20",
														"nodeType": "YulTypedName",
														"src": "2440:5:20",
														"type": ""
													}
												],
												"src": "2394:139:20"
											},
											{
												"body": {
													"nativeSrc": "2622:391:20",
													"nodeType": "YulBlock",
													"src": "2622:391:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:20",
																"nodeType": "YulBlock",
																"src": "2668:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:20"
																			},
																			"nativeSrc": "2670:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:20"
																		},
																		"nativeSrc": "2670:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:20"
																		},
																		"nativeSrc": "2639:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:20"
																},
																"nativeSrc": "2635:32:20",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:20"
															},
															"nativeSrc": "2632:119:20",
															"nodeType": "YulIf",
															"src": "2632:119:20"
														},
														{
															"nativeSrc": "2761:117:20",
															"nodeType": "YulBlock",
															"src": "2761:117:20",
															"statements": [
																{
																	"nativeSrc": "2776:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:20",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:20",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:20",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:20"
																				},
																				"nativeSrc": "2836:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:20"
																		},
																		"nativeSrc": "2815:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:20",
															"nodeType": "YulBlock",
															"src": "2888:118:20",
															"statements": [
																{
																	"nativeSrc": "2903:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:20",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:20",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:20",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:20"
																				},
																				"nativeSrc": "2964:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:20"
																		},
																		"nativeSrc": "2943:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:20",
														"nodeType": "YulTypedName",
														"src": "2584:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:20",
														"nodeType": "YulTypedName",
														"src": "2595:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:20",
														"nodeType": "YulTypedName",
														"src": "2607:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:20",
														"nodeType": "YulTypedName",
														"src": "2615:6:20",
														"type": ""
													}
												],
												"src": "2539:474:20"
											},
											{
												"body": {
													"nativeSrc": "3061:48:20",
													"nodeType": "YulBlock",
													"src": "3061:48:20",
													"statements": [
														{
															"nativeSrc": "3071:32:20",
															"nodeType": "YulAssignment",
															"src": "3071:32:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:20"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:20"
																		},
																		"nativeSrc": "3089:13:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:20"
																},
																"nativeSrc": "3082:21:20",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:20",
														"nodeType": "YulTypedName",
														"src": "3043:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:20",
														"nodeType": "YulTypedName",
														"src": "3053:7:20",
														"type": ""
													}
												],
												"src": "3019:90:20"
											},
											{
												"body": {
													"nativeSrc": "3174:50:20",
													"nodeType": "YulBlock",
													"src": "3174:50:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:20",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:20"
																		},
																		"nativeSrc": "3196:21:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:20"
																},
																"nativeSrc": "3184:34:20",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:20"
															},
															"nativeSrc": "3184:34:20",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:20"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:20",
														"nodeType": "YulTypedName",
														"src": "3162:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:20",
														"nodeType": "YulTypedName",
														"src": "3169:3:20",
														"type": ""
													}
												],
												"src": "3115:109:20"
											},
											{
												"body": {
													"nativeSrc": "3322:118:20",
													"nodeType": "YulBlock",
													"src": "3322:118:20",
													"statements": [
														{
															"nativeSrc": "3332:26:20",
															"nodeType": "YulAssignment",
															"src": "3332:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:20"
																},
																"nativeSrc": "3340:18:20",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:20",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:20"
																		},
																		"nativeSrc": "3415:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:20",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:20"
																},
																"nativeSrc": "3368:65:20",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:20"
															},
															"nativeSrc": "3368:65:20",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:20",
														"nodeType": "YulTypedName",
														"src": "3294:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:20",
														"nodeType": "YulTypedName",
														"src": "3306:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:20",
														"nodeType": "YulTypedName",
														"src": "3317:4:20",
														"type": ""
													}
												],
												"src": "3230:210:20"
											},
											{
												"body": {
													"nativeSrc": "3511:53:20",
													"nodeType": "YulBlock",
													"src": "3511:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:20"
																		},
																		"nativeSrc": "3533:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:20"
																},
																"nativeSrc": "3521:37:20",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:20"
															},
															"nativeSrc": "3521:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:20"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:20",
														"nodeType": "YulTypedName",
														"src": "3499:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:20",
														"nodeType": "YulTypedName",
														"src": "3506:3:20",
														"type": ""
													}
												],
												"src": "3446:118:20"
											},
											{
												"body": {
													"nativeSrc": "3668:124:20",
													"nodeType": "YulBlock",
													"src": "3668:124:20",
													"statements": [
														{
															"nativeSrc": "3678:26:20",
															"nodeType": "YulAssignment",
															"src": "3678:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:20"
																},
																"nativeSrc": "3686:18:20",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:20",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:20"
																		},
																		"nativeSrc": "3767:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:20"
																},
																"nativeSrc": "3714:71:20",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:20"
															},
															"nativeSrc": "3714:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:20",
														"nodeType": "YulTypedName",
														"src": "3640:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:20",
														"nodeType": "YulTypedName",
														"src": "3652:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:20",
														"nodeType": "YulTypedName",
														"src": "3663:4:20",
														"type": ""
													}
												],
												"src": "3570:222:20"
											},
											{
												"body": {
													"nativeSrc": "3898:519:20",
													"nodeType": "YulBlock",
													"src": "3898:519:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:20",
																"nodeType": "YulBlock",
																"src": "3944:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:20"
																			},
																			"nativeSrc": "3946:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:20"
																		},
																		"nativeSrc": "3946:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:20"
																		},
																		"nativeSrc": "3915:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:20",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:20"
																},
																"nativeSrc": "3911:32:20",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:20"
															},
															"nativeSrc": "3908:119:20",
															"nodeType": "YulIf",
															"src": "3908:119:20"
														},
														{
															"nativeSrc": "4037:117:20",
															"nodeType": "YulBlock",
															"src": "4037:117:20",
															"statements": [
																{
																	"nativeSrc": "4052:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:20",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:20",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:20",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:20"
																				},
																				"nativeSrc": "4112:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:20"
																		},
																		"nativeSrc": "4091:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:20",
															"nodeType": "YulBlock",
															"src": "4164:118:20",
															"statements": [
																{
																	"nativeSrc": "4179:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:20",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:20",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:20"
																				},
																				"nativeSrc": "4240:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:20"
																		},
																		"nativeSrc": "4219:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:20",
															"nodeType": "YulBlock",
															"src": "4292:118:20",
															"statements": [
																{
																	"nativeSrc": "4307:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:20",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:20",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:20",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:20"
																				},
																				"nativeSrc": "4368:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:20"
																		},
																		"nativeSrc": "4347:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:20",
														"nodeType": "YulTypedName",
														"src": "3852:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:20",
														"nodeType": "YulTypedName",
														"src": "3863:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:20",
														"nodeType": "YulTypedName",
														"src": "3875:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:20",
														"nodeType": "YulTypedName",
														"src": "3883:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:20",
														"nodeType": "YulTypedName",
														"src": "3891:6:20",
														"type": ""
													}
												],
												"src": "3798:619:20"
											},
											{
												"body": {
													"nativeSrc": "4466:43:20",
													"nodeType": "YulBlock",
													"src": "4466:43:20",
													"statements": [
														{
															"nativeSrc": "4476:27:20",
															"nodeType": "YulAssignment",
															"src": "4476:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:20",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:20",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:20"
																},
																"nativeSrc": "4487:16:20",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:20",
														"nodeType": "YulTypedName",
														"src": "4448:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:20",
														"nodeType": "YulTypedName",
														"src": "4458:7:20",
														"type": ""
													}
												],
												"src": "4423:86:20"
											},
											{
												"body": {
													"nativeSrc": "4576:51:20",
													"nodeType": "YulBlock",
													"src": "4576:51:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:20",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:20"
																		},
																		"nativeSrc": "4598:22:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:20"
																},
																"nativeSrc": "4586:35:20",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:20"
															},
															"nativeSrc": "4586:35:20",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:20"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:20",
														"nodeType": "YulTypedName",
														"src": "4564:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:20",
														"nodeType": "YulTypedName",
														"src": "4571:3:20",
														"type": ""
													}
												],
												"src": "4515:112:20"
											},
											{
												"body": {
													"nativeSrc": "4727:120:20",
													"nodeType": "YulBlock",
													"src": "4727:120:20",
													"statements": [
														{
															"nativeSrc": "4737:26:20",
															"nodeType": "YulAssignment",
															"src": "4737:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:20",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:20"
																},
																"nativeSrc": "4745:18:20",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:20",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:20"
																		},
																		"nativeSrc": "4822:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:20",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:20"
																},
																"nativeSrc": "4773:67:20",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:20"
															},
															"nativeSrc": "4773:67:20",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:20",
														"nodeType": "YulTypedName",
														"src": "4699:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:20",
														"nodeType": "YulTypedName",
														"src": "4711:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:20",
														"nodeType": "YulTypedName",
														"src": "4722:4:20",
														"type": ""
													}
												],
												"src": "4633:214:20"
											},
											{
												"body": {
													"nativeSrc": "4898:32:20",
													"nodeType": "YulBlock",
													"src": "4898:32:20",
													"statements": [
														{
															"nativeSrc": "4908:16:20",
															"nodeType": "YulAssignment",
															"src": "4908:16:20",
															"value": {
																"name": "value",
																"nativeSrc": "4919:5:20",
																"nodeType": "YulIdentifier",
																"src": "4919:5:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4908:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "4908:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "4853:77:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4880:5:20",
														"nodeType": "YulTypedName",
														"src": "4880:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4890:7:20",
														"nodeType": "YulTypedName",
														"src": "4890:7:20",
														"type": ""
													}
												],
												"src": "4853:77:20"
											},
											{
												"body": {
													"nativeSrc": "5001:53:20",
													"nodeType": "YulBlock",
													"src": "5001:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5018:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "5018:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5041:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "5041:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5023:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "5023:17:20"
																		},
																		"nativeSrc": "5023:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5023:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5011:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5011:6:20"
																},
																"nativeSrc": "5011:37:20",
																"nodeType": "YulFunctionCall",
																"src": "5011:37:20"
															},
															"nativeSrc": "5011:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "5011:37:20"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "4936:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4989:5:20",
														"nodeType": "YulTypedName",
														"src": "4989:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4996:3:20",
														"nodeType": "YulTypedName",
														"src": "4996:3:20",
														"type": ""
													}
												],
												"src": "4936:118:20"
											},
											{
												"body": {
													"nativeSrc": "5158:124:20",
													"nodeType": "YulBlock",
													"src": "5158:124:20",
													"statements": [
														{
															"nativeSrc": "5168:26:20",
															"nodeType": "YulAssignment",
															"src": "5168:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5180:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "5180:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5191:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5191:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5176:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5176:3:20"
																},
																"nativeSrc": "5176:18:20",
																"nodeType": "YulFunctionCall",
																"src": "5176:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5168:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "5168:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5248:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "5248:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5261:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5261:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5272:1:20",
																				"nodeType": "YulLiteral",
																				"src": "5272:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5257:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5257:3:20"
																		},
																		"nativeSrc": "5257:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5257:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "5204:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "5204:43:20"
																},
																"nativeSrc": "5204:71:20",
																"nodeType": "YulFunctionCall",
																"src": "5204:71:20"
															},
															"nativeSrc": "5204:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "5204:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5060:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5130:9:20",
														"nodeType": "YulTypedName",
														"src": "5130:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5142:6:20",
														"nodeType": "YulTypedName",
														"src": "5142:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5153:4:20",
														"nodeType": "YulTypedName",
														"src": "5153:4:20",
														"type": ""
													}
												],
												"src": "5060:222:20"
											},
											{
												"body": {
													"nativeSrc": "5354:263:20",
													"nodeType": "YulBlock",
													"src": "5354:263:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "5400:83:20",
																"nodeType": "YulBlock",
																"src": "5400:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5402:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "5402:77:20"
																			},
																			"nativeSrc": "5402:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "5402:79:20"
																		},
																		"nativeSrc": "5402:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "5402:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5375:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "5375:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5384:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "5384:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5371:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "5371:3:20"
																		},
																		"nativeSrc": "5371:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5371:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5396:2:20",
																		"nodeType": "YulLiteral",
																		"src": "5396:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5367:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5367:3:20"
																},
																"nativeSrc": "5367:32:20",
																"nodeType": "YulFunctionCall",
																"src": "5367:32:20"
															},
															"nativeSrc": "5364:119:20",
															"nodeType": "YulIf",
															"src": "5364:119:20"
														},
														{
															"nativeSrc": "5493:117:20",
															"nodeType": "YulBlock",
															"src": "5493:117:20",
															"statements": [
																{
																	"nativeSrc": "5508:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5508:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5522:1:20",
																		"nodeType": "YulLiteral",
																		"src": "5522:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5512:6:20",
																			"nodeType": "YulTypedName",
																			"src": "5512:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5537:63:20",
																	"nodeType": "YulAssignment",
																	"src": "5537:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5572:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "5572:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5583:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "5583:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5568:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "5568:3:20"
																				},
																				"nativeSrc": "5568:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "5568:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5592:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "5592:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5547:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "5547:20:20"
																		},
																		"nativeSrc": "5547:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5547:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5537:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "5537:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5288:329:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5324:9:20",
														"nodeType": "YulTypedName",
														"src": "5324:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5335:7:20",
														"nodeType": "YulTypedName",
														"src": "5335:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5347:6:20",
														"nodeType": "YulTypedName",
														"src": "5347:6:20",
														"type": ""
													}
												],
												"src": "5288:329:20"
											},
											{
												"body": {
													"nativeSrc": "5667:105:20",
													"nodeType": "YulBlock",
													"src": "5667:105:20",
													"statements": [
														{
															"nativeSrc": "5677:89:20",
															"nodeType": "YulAssignment",
															"src": "5677:89:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5692:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "5692:5:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5699:66:20",
																		"nodeType": "YulLiteral",
																		"src": "5699:66:20",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5688:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "5688:3:20"
																},
																"nativeSrc": "5688:78:20",
																"nodeType": "YulFunctionCall",
																"src": "5688:78:20"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5677:7:20",
																	"nodeType": "YulIdentifier",
																	"src": "5677:7:20"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes1",
												"nativeSrc": "5623:149:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5649:5:20",
														"nodeType": "YulTypedName",
														"src": "5649:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5659:7:20",
														"nodeType": "YulTypedName",
														"src": "5659:7:20",
														"type": ""
													}
												],
												"src": "5623:149:20"
											},
											{
												"body": {
													"nativeSrc": "5841:52:20",
													"nodeType": "YulBlock",
													"src": "5841:52:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5858:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "5858:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5880:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "5880:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes1",
																			"nativeSrc": "5863:16:20",
																			"nodeType": "YulIdentifier",
																			"src": "5863:16:20"
																		},
																		"nativeSrc": "5863:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5863:23:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5851:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5851:6:20"
																},
																"nativeSrc": "5851:36:20",
																"nodeType": "YulFunctionCall",
																"src": "5851:36:20"
															},
															"nativeSrc": "5851:36:20",
															"nodeType": "YulExpressionStatement",
															"src": "5851:36:20"
														}
													]
												},
												"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
												"nativeSrc": "5778:115:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5829:5:20",
														"nodeType": "YulTypedName",
														"src": "5829:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5836:3:20",
														"nodeType": "YulTypedName",
														"src": "5836:3:20",
														"type": ""
													}
												],
												"src": "5778:115:20"
											},
											{
												"body": {
													"nativeSrc": "5964:53:20",
													"nodeType": "YulBlock",
													"src": "5964:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5981:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "5981:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6004:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "6004:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5986:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "5986:17:20"
																		},
																		"nativeSrc": "5986:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "5986:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5974:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "5974:6:20"
																},
																"nativeSrc": "5974:37:20",
																"nodeType": "YulFunctionCall",
																"src": "5974:37:20"
															},
															"nativeSrc": "5974:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "5974:37:20"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5899:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5952:5:20",
														"nodeType": "YulTypedName",
														"src": "5952:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5959:3:20",
														"nodeType": "YulTypedName",
														"src": "5959:3:20",
														"type": ""
													}
												],
												"src": "5899:118:20"
											},
											{
												"body": {
													"nativeSrc": "6097:40:20",
													"nodeType": "YulBlock",
													"src": "6097:40:20",
													"statements": [
														{
															"nativeSrc": "6108:22:20",
															"nodeType": "YulAssignment",
															"src": "6108:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6124:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "6124:5:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6118:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "6118:5:20"
																},
																"nativeSrc": "6118:12:20",
																"nodeType": "YulFunctionCall",
																"src": "6118:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6108:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6108:6:20"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6023:114:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6080:5:20",
														"nodeType": "YulTypedName",
														"src": "6080:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6090:6:20",
														"nodeType": "YulTypedName",
														"src": "6090:6:20",
														"type": ""
													}
												],
												"src": "6023:114:20"
											},
											{
												"body": {
													"nativeSrc": "6254:73:20",
													"nodeType": "YulBlock",
													"src": "6254:73:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6271:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6271:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6276:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6276:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6264:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6264:6:20"
																},
																"nativeSrc": "6264:19:20",
																"nodeType": "YulFunctionCall",
																"src": "6264:19:20"
															},
															"nativeSrc": "6264:19:20",
															"nodeType": "YulExpressionStatement",
															"src": "6264:19:20"
														},
														{
															"nativeSrc": "6292:29:20",
															"nodeType": "YulAssignment",
															"src": "6292:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6311:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6311:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6316:4:20",
																		"nodeType": "YulLiteral",
																		"src": "6316:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6307:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6307:3:20"
																},
																"nativeSrc": "6307:14:20",
																"nodeType": "YulFunctionCall",
																"src": "6307:14:20"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6292:11:20",
																	"nodeType": "YulIdentifier",
																	"src": "6292:11:20"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6143:184:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6226:3:20",
														"nodeType": "YulTypedName",
														"src": "6226:3:20",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6231:6:20",
														"nodeType": "YulTypedName",
														"src": "6231:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6242:11:20",
														"nodeType": "YulTypedName",
														"src": "6242:11:20",
														"type": ""
													}
												],
												"src": "6143:184:20"
											},
											{
												"body": {
													"nativeSrc": "6405:60:20",
													"nodeType": "YulBlock",
													"src": "6405:60:20",
													"statements": [
														{
															"nativeSrc": "6415:11:20",
															"nodeType": "YulAssignment",
															"src": "6415:11:20",
															"value": {
																"name": "ptr",
																"nativeSrc": "6423:3:20",
																"nodeType": "YulIdentifier",
																"src": "6423:3:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6415:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "6415:4:20"
																}
															]
														},
														{
															"nativeSrc": "6436:22:20",
															"nodeType": "YulAssignment",
															"src": "6436:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6448:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6448:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6453:4:20",
																		"nodeType": "YulLiteral",
																		"src": "6453:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6444:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6444:3:20"
																},
																"nativeSrc": "6444:14:20",
																"nodeType": "YulFunctionCall",
																"src": "6444:14:20"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6436:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "6436:4:20"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6333:132:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6392:3:20",
														"nodeType": "YulTypedName",
														"src": "6392:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6400:4:20",
														"nodeType": "YulTypedName",
														"src": "6400:4:20",
														"type": ""
													}
												],
												"src": "6333:132:20"
											},
											{
												"body": {
													"nativeSrc": "6526:53:20",
													"nodeType": "YulBlock",
													"src": "6526:53:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6543:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6543:3:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6566:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "6566:5:20"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6548:17:20",
																			"nodeType": "YulIdentifier",
																			"src": "6548:17:20"
																		},
																		"nativeSrc": "6548:24:20",
																		"nodeType": "YulFunctionCall",
																		"src": "6548:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6536:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "6536:6:20"
																},
																"nativeSrc": "6536:37:20",
																"nodeType": "YulFunctionCall",
																"src": "6536:37:20"
															},
															"nativeSrc": "6536:37:20",
															"nodeType": "YulExpressionStatement",
															"src": "6536:37:20"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "6471:108:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6514:5:20",
														"nodeType": "YulTypedName",
														"src": "6514:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6521:3:20",
														"nodeType": "YulTypedName",
														"src": "6521:3:20",
														"type": ""
													}
												],
												"src": "6471:108:20"
											},
											{
												"body": {
													"nativeSrc": "6665:99:20",
													"nodeType": "YulBlock",
													"src": "6665:99:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6709:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "6709:6:20"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6717:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6717:3:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "6675:33:20",
																	"nodeType": "YulIdentifier",
																	"src": "6675:33:20"
																},
																"nativeSrc": "6675:46:20",
																"nodeType": "YulFunctionCall",
																"src": "6675:46:20"
															},
															"nativeSrc": "6675:46:20",
															"nodeType": "YulExpressionStatement",
															"src": "6675:46:20"
														},
														{
															"nativeSrc": "6730:28:20",
															"nodeType": "YulAssignment",
															"src": "6730:28:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6748:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6748:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6753:4:20",
																		"nodeType": "YulLiteral",
																		"src": "6753:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6744:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6744:3:20"
																},
																"nativeSrc": "6744:14:20",
																"nodeType": "YulFunctionCall",
																"src": "6744:14:20"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "6730:10:20",
																	"nodeType": "YulIdentifier",
																	"src": "6730:10:20"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "6585:179:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6638:6:20",
														"nodeType": "YulTypedName",
														"src": "6638:6:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6646:3:20",
														"nodeType": "YulTypedName",
														"src": "6646:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6654:10:20",
														"nodeType": "YulTypedName",
														"src": "6654:10:20",
														"type": ""
													}
												],
												"src": "6585:179:20"
											},
											{
												"body": {
													"nativeSrc": "6845:38:20",
													"nodeType": "YulBlock",
													"src": "6845:38:20",
													"statements": [
														{
															"nativeSrc": "6855:22:20",
															"nodeType": "YulAssignment",
															"src": "6855:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6867:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "6867:3:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6872:4:20",
																		"nodeType": "YulLiteral",
																		"src": "6872:4:20",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6863:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "6863:3:20"
																},
																"nativeSrc": "6863:14:20",
																"nodeType": "YulFunctionCall",
																"src": "6863:14:20"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "6855:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "6855:4:20"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6770:113:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6832:3:20",
														"nodeType": "YulTypedName",
														"src": "6832:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "6840:4:20",
														"nodeType": "YulTypedName",
														"src": "6840:4:20",
														"type": ""
													}
												],
												"src": "6770:113:20"
											},
											{
												"body": {
													"nativeSrc": "7043:608:20",
													"nodeType": "YulBlock",
													"src": "7043:608:20",
													"statements": [
														{
															"nativeSrc": "7053:68:20",
															"nodeType": "YulVariableDeclaration",
															"src": "7053:68:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7115:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "7115:5:20"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7067:47:20",
																	"nodeType": "YulIdentifier",
																	"src": "7067:47:20"
																},
																"nativeSrc": "7067:54:20",
																"nodeType": "YulFunctionCall",
																"src": "7067:54:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7057:6:20",
																	"nodeType": "YulTypedName",
																	"src": "7057:6:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7130:93:20",
															"nodeType": "YulAssignment",
															"src": "7130:93:20",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7211:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "7211:3:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7216:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7216:6:20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7137:73:20",
																	"nodeType": "YulIdentifier",
																	"src": "7137:73:20"
																},
																"nativeSrc": "7137:86:20",
																"nodeType": "YulFunctionCall",
																"src": "7137:86:20"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7130:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7130:3:20"
																}
															]
														},
														{
															"nativeSrc": "7232:71:20",
															"nodeType": "YulVariableDeclaration",
															"src": "7232:71:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7297:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "7297:5:20"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7247:49:20",
																	"nodeType": "YulIdentifier",
																	"src": "7247:49:20"
																},
																"nativeSrc": "7247:56:20",
																"nodeType": "YulFunctionCall",
																"src": "7247:56:20"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7236:7:20",
																	"nodeType": "YulTypedName",
																	"src": "7236:7:20",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7312:21:20",
															"nodeType": "YulVariableDeclaration",
															"src": "7312:21:20",
															"value": {
																"name": "baseRef",
																"nativeSrc": "7326:7:20",
																"nodeType": "YulIdentifier",
																"src": "7326:7:20"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7316:6:20",
																	"nodeType": "YulTypedName",
																	"src": "7316:6:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7402:224:20",
																"nodeType": "YulBlock",
																"src": "7402:224:20",
																"statements": [
																	{
																		"nativeSrc": "7416:34:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7416:34:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7443:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "7443:6:20"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7437:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "7437:5:20"
																			},
																			"nativeSrc": "7437:13:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7437:13:20"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "7420:13:20",
																				"nodeType": "YulTypedName",
																				"src": "7420:13:20",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7463:70:20",
																		"nodeType": "YulAssignment",
																		"src": "7463:70:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "7514:13:20",
																					"nodeType": "YulIdentifier",
																					"src": "7514:13:20"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7529:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "7529:3:20"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "7470:43:20",
																				"nodeType": "YulIdentifier",
																				"src": "7470:43:20"
																			},
																			"nativeSrc": "7470:63:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7470:63:20"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7463:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "7463:3:20"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7546:70:20",
																		"nodeType": "YulAssignment",
																		"src": "7546:70:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7609:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "7609:6:20"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "7556:52:20",
																				"nodeType": "YulIdentifier",
																				"src": "7556:52:20"
																			},
																			"nativeSrc": "7556:60:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7556:60:20"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7546:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "7546:6:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7364:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "7364:1:20"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7367:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "7367:6:20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7361:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "7361:2:20"
																},
																"nativeSrc": "7361:13:20",
																"nodeType": "YulFunctionCall",
																"src": "7361:13:20"
															},
															"nativeSrc": "7342:284:20",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7375:18:20",
																"nodeType": "YulBlock",
																"src": "7375:18:20",
																"statements": [
																	{
																		"nativeSrc": "7377:14:20",
																		"nodeType": "YulAssignment",
																		"src": "7377:14:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7386:1:20",
																					"nodeType": "YulIdentifier",
																					"src": "7386:1:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7389:1:20",
																					"nodeType": "YulLiteral",
																					"src": "7389:1:20",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7382:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "7382:3:20"
																			},
																			"nativeSrc": "7382:9:20",
																			"nodeType": "YulFunctionCall",
																			"src": "7382:9:20"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7377:1:20",
																				"nodeType": "YulIdentifier",
																				"src": "7377:1:20"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7346:14:20",
																"nodeType": "YulBlock",
																"src": "7346:14:20",
																"statements": [
																	{
																		"nativeSrc": "7348:10:20",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7348:10:20",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7357:1:20",
																			"nodeType": "YulLiteral",
																			"src": "7357:1:20",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "7352:1:20",
																				"nodeType": "YulTypedName",
																				"src": "7352:1:20",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7342:284:20"
														},
														{
															"nativeSrc": "7635:10:20",
															"nodeType": "YulAssignment",
															"src": "7635:10:20",
															"value": {
																"name": "pos",
																"nativeSrc": "7642:3:20",
																"nodeType": "YulIdentifier",
																"src": "7642:3:20"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7635:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "7635:3:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6919:732:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7022:5:20",
														"nodeType": "YulTypedName",
														"src": "7022:5:20",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7029:3:20",
														"nodeType": "YulTypedName",
														"src": "7029:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7038:3:20",
														"nodeType": "YulTypedName",
														"src": "7038:3:20",
														"type": ""
													}
												],
												"src": "6919:732:20"
											},
											{
												"body": {
													"nativeSrc": "8011:861:20",
													"nodeType": "YulBlock",
													"src": "8011:861:20",
													"statements": [
														{
															"nativeSrc": "8021:27:20",
															"nodeType": "YulAssignment",
															"src": "8021:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8033:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "8033:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8044:3:20",
																		"nodeType": "YulLiteral",
																		"src": "8044:3:20",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8029:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "8029:3:20"
																},
																"nativeSrc": "8029:19:20",
																"nodeType": "YulFunctionCall",
																"src": "8029:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8021:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8021:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8100:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8100:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8113:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8113:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8124:1:20",
																				"nodeType": "YulLiteral",
																				"src": "8124:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8109:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8109:3:20"
																		},
																		"nativeSrc": "8109:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8109:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
																	"nativeSrc": "8058:41:20",
																	"nodeType": "YulIdentifier",
																	"src": "8058:41:20"
																},
																"nativeSrc": "8058:69:20",
																"nodeType": "YulFunctionCall",
																"src": "8058:69:20"
															},
															"nativeSrc": "8058:69:20",
															"nodeType": "YulExpressionStatement",
															"src": "8058:69:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8148:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8148:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8159:2:20",
																				"nodeType": "YulLiteral",
																				"src": "8159:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8144:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8144:3:20"
																		},
																		"nativeSrc": "8144:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8144:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8168:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "8168:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8174:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8174:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8164:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8164:3:20"
																		},
																		"nativeSrc": "8164:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8164:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8137:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8137:6:20"
																},
																"nativeSrc": "8137:48:20",
																"nodeType": "YulFunctionCall",
																"src": "8137:48:20"
															},
															"nativeSrc": "8137:48:20",
															"nodeType": "YulExpressionStatement",
															"src": "8137:48:20"
														},
														{
															"nativeSrc": "8194:86:20",
															"nodeType": "YulAssignment",
															"src": "8194:86:20",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8266:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8266:6:20"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8275:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "8275:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8202:63:20",
																	"nodeType": "YulIdentifier",
																	"src": "8202:63:20"
																},
																"nativeSrc": "8202:78:20",
																"nodeType": "YulFunctionCall",
																"src": "8202:78:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8194:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8194:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8301:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8301:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8312:2:20",
																				"nodeType": "YulLiteral",
																				"src": "8312:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8297:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8297:3:20"
																		},
																		"nativeSrc": "8297:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8297:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8321:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "8321:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8327:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8327:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8317:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8317:3:20"
																		},
																		"nativeSrc": "8317:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8317:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8290:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8290:6:20"
																},
																"nativeSrc": "8290:48:20",
																"nodeType": "YulFunctionCall",
																"src": "8290:48:20"
															},
															"nativeSrc": "8290:48:20",
															"nodeType": "YulExpressionStatement",
															"src": "8290:48:20"
														},
														{
															"nativeSrc": "8347:86:20",
															"nodeType": "YulAssignment",
															"src": "8347:86:20",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8419:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8419:6:20"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8428:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "8428:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8355:63:20",
																	"nodeType": "YulIdentifier",
																	"src": "8355:63:20"
																},
																"nativeSrc": "8355:78:20",
																"nodeType": "YulFunctionCall",
																"src": "8355:78:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8347:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8347:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8487:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8487:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8500:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8500:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8511:2:20",
																				"nodeType": "YulLiteral",
																				"src": "8511:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8496:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8496:3:20"
																		},
																		"nativeSrc": "8496:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8496:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8443:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "8443:43:20"
																},
																"nativeSrc": "8443:72:20",
																"nodeType": "YulFunctionCall",
																"src": "8443:72:20"
															},
															"nativeSrc": "8443:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "8443:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "8569:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8569:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8582:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8582:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:3:20",
																				"nodeType": "YulLiteral",
																				"src": "8593:3:20",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8578:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8578:3:20"
																		},
																		"nativeSrc": "8578:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8578:19:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8525:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "8525:43:20"
																},
																"nativeSrc": "8525:73:20",
																"nodeType": "YulFunctionCall",
																"src": "8525:73:20"
															},
															"nativeSrc": "8525:73:20",
															"nodeType": "YulExpressionStatement",
															"src": "8525:73:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "8652:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8652:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8665:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8665:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8676:3:20",
																				"nodeType": "YulLiteral",
																				"src": "8676:3:20",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8661:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8661:3:20"
																		},
																		"nativeSrc": "8661:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8661:19:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8608:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "8608:43:20"
																},
																"nativeSrc": "8608:73:20",
																"nodeType": "YulFunctionCall",
																"src": "8608:73:20"
															},
															"nativeSrc": "8608:73:20",
															"nodeType": "YulExpressionStatement",
															"src": "8608:73:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8702:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8702:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8713:3:20",
																				"nodeType": "YulLiteral",
																				"src": "8713:3:20",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8698:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8698:3:20"
																		},
																		"nativeSrc": "8698:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8698:19:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8723:4:20",
																				"nodeType": "YulIdentifier",
																				"src": "8723:4:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8729:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8729:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8719:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8719:3:20"
																		},
																		"nativeSrc": "8719:20:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8719:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8691:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "8691:6:20"
																},
																"nativeSrc": "8691:49:20",
																"nodeType": "YulFunctionCall",
																"src": "8691:49:20"
															},
															"nativeSrc": "8691:49:20",
															"nodeType": "YulExpressionStatement",
															"src": "8691:49:20"
														},
														{
															"nativeSrc": "8749:116:20",
															"nodeType": "YulAssignment",
															"src": "8749:116:20",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "8851:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "8851:6:20"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8860:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "8860:4:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8757:93:20",
																	"nodeType": "YulIdentifier",
																	"src": "8757:93:20"
																},
																"nativeSrc": "8757:108:20",
																"nodeType": "YulFunctionCall",
																"src": "8757:108:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8749:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "8749:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7657:1215:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7935:9:20",
														"nodeType": "YulTypedName",
														"src": "7935:9:20",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "7947:6:20",
														"nodeType": "YulTypedName",
														"src": "7947:6:20",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7955:6:20",
														"nodeType": "YulTypedName",
														"src": "7955:6:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7963:6:20",
														"nodeType": "YulTypedName",
														"src": "7963:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7971:6:20",
														"nodeType": "YulTypedName",
														"src": "7971:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7979:6:20",
														"nodeType": "YulTypedName",
														"src": "7979:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7987:6:20",
														"nodeType": "YulTypedName",
														"src": "7987:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7995:6:20",
														"nodeType": "YulTypedName",
														"src": "7995:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8006:4:20",
														"nodeType": "YulTypedName",
														"src": "8006:4:20",
														"type": ""
													}
												],
												"src": "7657:1215:20"
											},
											{
												"body": {
													"nativeSrc": "8944:263:20",
													"nodeType": "YulBlock",
													"src": "8944:263:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "8990:83:20",
																"nodeType": "YulBlock",
																"src": "8990:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8992:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "8992:77:20"
																			},
																			"nativeSrc": "8992:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "8992:79:20"
																		},
																		"nativeSrc": "8992:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "8992:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8965:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "8965:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8974:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "8974:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8961:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "8961:3:20"
																		},
																		"nativeSrc": "8961:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "8961:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8986:2:20",
																		"nodeType": "YulLiteral",
																		"src": "8986:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8957:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "8957:3:20"
																},
																"nativeSrc": "8957:32:20",
																"nodeType": "YulFunctionCall",
																"src": "8957:32:20"
															},
															"nativeSrc": "8954:119:20",
															"nodeType": "YulIf",
															"src": "8954:119:20"
														},
														{
															"nativeSrc": "9083:117:20",
															"nodeType": "YulBlock",
															"src": "9083:117:20",
															"statements": [
																{
																	"nativeSrc": "9098:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9098:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9112:1:20",
																		"nodeType": "YulLiteral",
																		"src": "9112:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9102:6:20",
																			"nodeType": "YulTypedName",
																			"src": "9102:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9127:63:20",
																	"nodeType": "YulAssignment",
																	"src": "9127:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9162:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "9162:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9173:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "9173:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9158:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "9158:3:20"
																				},
																				"nativeSrc": "9158:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "9158:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9182:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "9182:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9137:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "9137:20:20"
																		},
																		"nativeSrc": "9137:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9137:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9127:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "9127:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "8878:329:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8914:9:20",
														"nodeType": "YulTypedName",
														"src": "8914:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8925:7:20",
														"nodeType": "YulTypedName",
														"src": "8925:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8937:6:20",
														"nodeType": "YulTypedName",
														"src": "8937:6:20",
														"type": ""
													}
												],
												"src": "8878:329:20"
											},
											{
												"body": {
													"nativeSrc": "9254:77:20",
													"nodeType": "YulBlock",
													"src": "9254:77:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "9309:16:20",
																"nodeType": "YulBlock",
																"src": "9309:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9318:1:20",
																					"nodeType": "YulLiteral",
																					"src": "9318:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9321:1:20",
																					"nodeType": "YulLiteral",
																					"src": "9321:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9311:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "9311:6:20"
																			},
																			"nativeSrc": "9311:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "9311:12:20"
																		},
																		"nativeSrc": "9311:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "9311:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9277:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "9277:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9300:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "9300:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "9284:15:20",
																					"nodeType": "YulIdentifier",
																					"src": "9284:15:20"
																				},
																				"nativeSrc": "9284:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "9284:22:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9274:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "9274:2:20"
																		},
																		"nativeSrc": "9274:33:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9274:33:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9267:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9267:6:20"
																},
																"nativeSrc": "9267:41:20",
																"nodeType": "YulFunctionCall",
																"src": "9267:41:20"
															},
															"nativeSrc": "9264:61:20",
															"nodeType": "YulIf",
															"src": "9264:61:20"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "9213:118:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9247:5:20",
														"nodeType": "YulTypedName",
														"src": "9247:5:20",
														"type": ""
													}
												],
												"src": "9213:118:20"
											},
											{
												"body": {
													"nativeSrc": "9387:85:20",
													"nodeType": "YulBlock",
													"src": "9387:85:20",
													"statements": [
														{
															"nativeSrc": "9397:29:20",
															"nodeType": "YulAssignment",
															"src": "9397:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9419:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9419:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9406:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "9406:12:20"
																},
																"nativeSrc": "9406:20:20",
																"nodeType": "YulFunctionCall",
																"src": "9406:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9397:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "9397:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9460:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "9460:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "9435:24:20",
																	"nodeType": "YulIdentifier",
																	"src": "9435:24:20"
																},
																"nativeSrc": "9435:31:20",
																"nodeType": "YulFunctionCall",
																"src": "9435:31:20"
															},
															"nativeSrc": "9435:31:20",
															"nodeType": "YulExpressionStatement",
															"src": "9435:31:20"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "9337:135:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9365:6:20",
														"nodeType": "YulTypedName",
														"src": "9365:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9373:3:20",
														"nodeType": "YulTypedName",
														"src": "9373:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9381:5:20",
														"nodeType": "YulTypedName",
														"src": "9381:5:20",
														"type": ""
													}
												],
												"src": "9337:135:20"
											},
											{
												"body": {
													"nativeSrc": "9521:79:20",
													"nodeType": "YulBlock",
													"src": "9521:79:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "9578:16:20",
																"nodeType": "YulBlock",
																"src": "9578:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9587:1:20",
																					"nodeType": "YulLiteral",
																					"src": "9587:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9590:1:20",
																					"nodeType": "YulLiteral",
																					"src": "9590:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9580:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "9580:6:20"
																			},
																			"nativeSrc": "9580:12:20",
																			"nodeType": "YulFunctionCall",
																			"src": "9580:12:20"
																		},
																		"nativeSrc": "9580:12:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "9580:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9544:5:20",
																				"nodeType": "YulIdentifier",
																				"src": "9544:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9569:5:20",
																						"nodeType": "YulIdentifier",
																						"src": "9569:5:20"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "9551:17:20",
																					"nodeType": "YulIdentifier",
																					"src": "9551:17:20"
																				},
																				"nativeSrc": "9551:24:20",
																				"nodeType": "YulFunctionCall",
																				"src": "9551:24:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9541:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "9541:2:20"
																		},
																		"nativeSrc": "9541:35:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9541:35:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9534:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "9534:6:20"
																},
																"nativeSrc": "9534:43:20",
																"nodeType": "YulFunctionCall",
																"src": "9534:43:20"
															},
															"nativeSrc": "9531:63:20",
															"nodeType": "YulIf",
															"src": "9531:63:20"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "9478:122:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9514:5:20",
														"nodeType": "YulTypedName",
														"src": "9514:5:20",
														"type": ""
													}
												],
												"src": "9478:122:20"
											},
											{
												"body": {
													"nativeSrc": "9658:87:20",
													"nodeType": "YulBlock",
													"src": "9658:87:20",
													"statements": [
														{
															"nativeSrc": "9668:29:20",
															"nodeType": "YulAssignment",
															"src": "9668:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9690:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "9690:6:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9677:12:20",
																	"nodeType": "YulIdentifier",
																	"src": "9677:12:20"
																},
																"nativeSrc": "9677:20:20",
																"nodeType": "YulFunctionCall",
																"src": "9677:20:20"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9668:5:20",
																	"nodeType": "YulIdentifier",
																	"src": "9668:5:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9733:5:20",
																		"nodeType": "YulIdentifier",
																		"src": "9733:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "9706:26:20",
																	"nodeType": "YulIdentifier",
																	"src": "9706:26:20"
																},
																"nativeSrc": "9706:33:20",
																"nodeType": "YulFunctionCall",
																"src": "9706:33:20"
															},
															"nativeSrc": "9706:33:20",
															"nodeType": "YulExpressionStatement",
															"src": "9706:33:20"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "9606:139:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9636:6:20",
														"nodeType": "YulTypedName",
														"src": "9636:6:20",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9644:3:20",
														"nodeType": "YulTypedName",
														"src": "9644:3:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9652:5:20",
														"nodeType": "YulTypedName",
														"src": "9652:5:20",
														"type": ""
													}
												],
												"src": "9606:139:20"
											},
											{
												"body": {
													"nativeSrc": "9917:1033:20",
													"nodeType": "YulBlock",
													"src": "9917:1033:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "9964:83:20",
																"nodeType": "YulBlock",
																"src": "9964:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9966:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "9966:77:20"
																			},
																			"nativeSrc": "9966:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "9966:79:20"
																		},
																		"nativeSrc": "9966:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "9966:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9938:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "9938:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9947:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "9947:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9934:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "9934:3:20"
																		},
																		"nativeSrc": "9934:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "9934:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9959:3:20",
																		"nodeType": "YulLiteral",
																		"src": "9959:3:20",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9930:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "9930:3:20"
																},
																"nativeSrc": "9930:33:20",
																"nodeType": "YulFunctionCall",
																"src": "9930:33:20"
															},
															"nativeSrc": "9927:120:20",
															"nodeType": "YulIf",
															"src": "9927:120:20"
														},
														{
															"nativeSrc": "10057:117:20",
															"nodeType": "YulBlock",
															"src": "10057:117:20",
															"statements": [
																{
																	"nativeSrc": "10072:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10072:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10086:1:20",
																		"nodeType": "YulLiteral",
																		"src": "10086:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10076:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10076:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10101:63:20",
																	"nodeType": "YulAssignment",
																	"src": "10101:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10136:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10136:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10147:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10147:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10132:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10132:3:20"
																				},
																				"nativeSrc": "10132:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10132:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10156:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10156:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10111:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "10111:20:20"
																		},
																		"nativeSrc": "10111:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10111:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10101:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10101:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10184:118:20",
															"nodeType": "YulBlock",
															"src": "10184:118:20",
															"statements": [
																{
																	"nativeSrc": "10199:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10199:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10213:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10213:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10203:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10203:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10229:63:20",
																	"nodeType": "YulAssignment",
																	"src": "10229:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10264:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10264:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10275:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10275:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10260:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10260:3:20"
																				},
																				"nativeSrc": "10260:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10260:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10284:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10284:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10239:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "10239:20:20"
																		},
																		"nativeSrc": "10239:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10239:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10229:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10229:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10312:118:20",
															"nodeType": "YulBlock",
															"src": "10312:118:20",
															"statements": [
																{
																	"nativeSrc": "10327:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10327:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10341:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10341:2:20",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10331:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10331:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10357:63:20",
																	"nodeType": "YulAssignment",
																	"src": "10357:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10392:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10392:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10403:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10403:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10388:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10388:3:20"
																				},
																				"nativeSrc": "10388:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10388:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10412:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10412:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10367:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "10367:20:20"
																		},
																		"nativeSrc": "10367:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10367:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10357:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10357:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10440:118:20",
															"nodeType": "YulBlock",
															"src": "10440:118:20",
															"statements": [
																{
																	"nativeSrc": "10455:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10455:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10469:2:20",
																		"nodeType": "YulLiteral",
																		"src": "10469:2:20",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10459:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10459:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10485:63:20",
																	"nodeType": "YulAssignment",
																	"src": "10485:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10520:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10520:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10531:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10531:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10516:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10516:3:20"
																				},
																				"nativeSrc": "10516:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10516:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10540:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10540:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10495:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "10495:20:20"
																		},
																		"nativeSrc": "10495:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10495:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10485:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10485:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10568:117:20",
															"nodeType": "YulBlock",
															"src": "10568:117:20",
															"statements": [
																{
																	"nativeSrc": "10583:17:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10583:17:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10597:3:20",
																		"nodeType": "YulLiteral",
																		"src": "10597:3:20",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10587:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10587:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10614:61:20",
																	"nodeType": "YulAssignment",
																	"src": "10614:61:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10647:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10647:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10658:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10658:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10643:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10643:3:20"
																				},
																				"nativeSrc": "10643:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10643:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10667:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10667:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "10624:18:20",
																			"nodeType": "YulIdentifier",
																			"src": "10624:18:20"
																		},
																		"nativeSrc": "10624:51:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10624:51:20"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "10614:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10614:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10695:119:20",
															"nodeType": "YulBlock",
															"src": "10695:119:20",
															"statements": [
																{
																	"nativeSrc": "10710:17:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10710:17:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10724:3:20",
																		"nodeType": "YulLiteral",
																		"src": "10724:3:20",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10714:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10714:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10741:63:20",
																	"nodeType": "YulAssignment",
																	"src": "10741:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10776:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10776:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10787:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10787:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10772:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10772:3:20"
																				},
																				"nativeSrc": "10772:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10772:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10796:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10796:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "10751:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "10751:20:20"
																		},
																		"nativeSrc": "10751:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10751:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "10741:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10741:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10824:119:20",
															"nodeType": "YulBlock",
															"src": "10824:119:20",
															"statements": [
																{
																	"nativeSrc": "10839:17:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10839:17:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10853:3:20",
																		"nodeType": "YulLiteral",
																		"src": "10853:3:20",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10843:6:20",
																			"nodeType": "YulTypedName",
																			"src": "10843:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10870:63:20",
																	"nodeType": "YulAssignment",
																	"src": "10870:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10905:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "10905:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10916:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "10916:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10901:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "10901:3:20"
																				},
																				"nativeSrc": "10901:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "10901:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10925:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "10925:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "10880:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "10880:20:20"
																		},
																		"nativeSrc": "10880:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "10880:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "10870:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "10870:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "9751:1199:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9839:9:20",
														"nodeType": "YulTypedName",
														"src": "9839:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9850:7:20",
														"nodeType": "YulTypedName",
														"src": "9850:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9862:6:20",
														"nodeType": "YulTypedName",
														"src": "9862:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9870:6:20",
														"nodeType": "YulTypedName",
														"src": "9870:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9878:6:20",
														"nodeType": "YulTypedName",
														"src": "9878:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9886:6:20",
														"nodeType": "YulTypedName",
														"src": "9886:6:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9894:6:20",
														"nodeType": "YulTypedName",
														"src": "9894:6:20",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9902:6:20",
														"nodeType": "YulTypedName",
														"src": "9902:6:20",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "9910:6:20",
														"nodeType": "YulTypedName",
														"src": "9910:6:20",
														"type": ""
													}
												],
												"src": "9751:1199:20"
											},
											{
												"body": {
													"nativeSrc": "11039:391:20",
													"nodeType": "YulBlock",
													"src": "11039:391:20",
													"statements": [
														{
															"body": {
																"nativeSrc": "11085:83:20",
																"nodeType": "YulBlock",
																"src": "11085:83:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11087:77:20",
																				"nodeType": "YulIdentifier",
																				"src": "11087:77:20"
																			},
																			"nativeSrc": "11087:79:20",
																			"nodeType": "YulFunctionCall",
																			"src": "11087:79:20"
																		},
																		"nativeSrc": "11087:79:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "11087:79:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11060:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "11060:7:20"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11069:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "11069:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11056:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "11056:3:20"
																		},
																		"nativeSrc": "11056:23:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11056:23:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11081:2:20",
																		"nodeType": "YulLiteral",
																		"src": "11081:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11052:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11052:3:20"
																},
																"nativeSrc": "11052:32:20",
																"nodeType": "YulFunctionCall",
																"src": "11052:32:20"
															},
															"nativeSrc": "11049:119:20",
															"nodeType": "YulIf",
															"src": "11049:119:20"
														},
														{
															"nativeSrc": "11178:117:20",
															"nodeType": "YulBlock",
															"src": "11178:117:20",
															"statements": [
																{
																	"nativeSrc": "11193:15:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11193:15:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11207:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11207:1:20",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11197:6:20",
																			"nodeType": "YulTypedName",
																			"src": "11197:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11222:63:20",
																	"nodeType": "YulAssignment",
																	"src": "11222:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11257:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "11257:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11268:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "11268:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11253:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "11253:3:20"
																				},
																				"nativeSrc": "11253:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "11253:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11277:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "11277:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11232:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "11232:20:20"
																		},
																		"nativeSrc": "11232:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11232:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11222:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "11222:6:20"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11305:118:20",
															"nodeType": "YulBlock",
															"src": "11305:118:20",
															"statements": [
																{
																	"nativeSrc": "11320:16:20",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11320:16:20",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11334:2:20",
																		"nodeType": "YulLiteral",
																		"src": "11334:2:20",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11324:6:20",
																			"nodeType": "YulTypedName",
																			"src": "11324:6:20",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11350:63:20",
																	"nodeType": "YulAssignment",
																	"src": "11350:63:20",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11385:9:20",
																						"nodeType": "YulIdentifier",
																						"src": "11385:9:20"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11396:6:20",
																						"nodeType": "YulIdentifier",
																						"src": "11396:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11381:3:20",
																					"nodeType": "YulIdentifier",
																					"src": "11381:3:20"
																				},
																				"nativeSrc": "11381:22:20",
																				"nodeType": "YulFunctionCall",
																				"src": "11381:22:20"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11405:7:20",
																				"nodeType": "YulIdentifier",
																				"src": "11405:7:20"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11360:20:20",
																			"nodeType": "YulIdentifier",
																			"src": "11360:20:20"
																		},
																		"nativeSrc": "11360:53:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11360:53:20"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11350:6:20",
																			"nodeType": "YulIdentifier",
																			"src": "11350:6:20"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "10956:474:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11001:9:20",
														"nodeType": "YulTypedName",
														"src": "11001:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11012:7:20",
														"nodeType": "YulTypedName",
														"src": "11012:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11024:6:20",
														"nodeType": "YulTypedName",
														"src": "11024:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11032:6:20",
														"nodeType": "YulTypedName",
														"src": "11032:6:20",
														"type": ""
													}
												],
												"src": "10956:474:20"
											},
											{
												"body": {
													"nativeSrc": "11464:152:20",
													"nodeType": "YulBlock",
													"src": "11464:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11481:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11481:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11484:77:20",
																		"nodeType": "YulLiteral",
																		"src": "11484:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11474:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11474:6:20"
																},
																"nativeSrc": "11474:88:20",
																"nodeType": "YulFunctionCall",
																"src": "11474:88:20"
															},
															"nativeSrc": "11474:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "11474:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11578:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11578:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11581:4:20",
																		"nodeType": "YulLiteral",
																		"src": "11581:4:20",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11571:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11571:6:20"
																},
																"nativeSrc": "11571:15:20",
																"nodeType": "YulFunctionCall",
																"src": "11571:15:20"
															},
															"nativeSrc": "11571:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "11571:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11602:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11602:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11605:4:20",
																		"nodeType": "YulLiteral",
																		"src": "11605:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11595:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11595:6:20"
																},
																"nativeSrc": "11595:15:20",
																"nodeType": "YulFunctionCall",
																"src": "11595:15:20"
															},
															"nativeSrc": "11595:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "11595:15:20"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "11436:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "11436:180:20"
											},
											{
												"body": {
													"nativeSrc": "11673:269:20",
													"nodeType": "YulBlock",
													"src": "11673:269:20",
													"statements": [
														{
															"nativeSrc": "11683:22:20",
															"nodeType": "YulAssignment",
															"src": "11683:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11697:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "11697:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11703:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11703:1:20",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11693:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11693:3:20"
																},
																"nativeSrc": "11693:12:20",
																"nodeType": "YulFunctionCall",
																"src": "11693:12:20"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11683:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11683:6:20"
																}
															]
														},
														{
															"nativeSrc": "11714:38:20",
															"nodeType": "YulVariableDeclaration",
															"src": "11714:38:20",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11744:4:20",
																		"nodeType": "YulIdentifier",
																		"src": "11744:4:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11750:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11750:1:20",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11740:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "11740:3:20"
																},
																"nativeSrc": "11740:12:20",
																"nodeType": "YulFunctionCall",
																"src": "11740:12:20"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11718:18:20",
																	"nodeType": "YulTypedName",
																	"src": "11718:18:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11791:51:20",
																"nodeType": "YulBlock",
																"src": "11791:51:20",
																"statements": [
																	{
																		"nativeSrc": "11805:27:20",
																		"nodeType": "YulAssignment",
																		"src": "11805:27:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11819:6:20",
																					"nodeType": "YulIdentifier",
																					"src": "11819:6:20"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11827:4:20",
																					"nodeType": "YulLiteral",
																					"src": "11827:4:20",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11815:3:20",
																				"nodeType": "YulIdentifier",
																				"src": "11815:3:20"
																			},
																			"nativeSrc": "11815:17:20",
																			"nodeType": "YulFunctionCall",
																			"src": "11815:17:20"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11805:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "11805:6:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11771:18:20",
																		"nodeType": "YulIdentifier",
																		"src": "11771:18:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11764:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11764:6:20"
																},
																"nativeSrc": "11764:26:20",
																"nodeType": "YulFunctionCall",
																"src": "11764:26:20"
															},
															"nativeSrc": "11761:81:20",
															"nodeType": "YulIf",
															"src": "11761:81:20"
														},
														{
															"body": {
																"nativeSrc": "11894:42:20",
																"nodeType": "YulBlock",
																"src": "11894:42:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11908:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "11908:16:20"
																			},
																			"nativeSrc": "11908:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "11908:18:20"
																		},
																		"nativeSrc": "11908:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "11908:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11858:18:20",
																		"nodeType": "YulIdentifier",
																		"src": "11858:18:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11881:6:20",
																				"nodeType": "YulIdentifier",
																				"src": "11881:6:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11889:2:20",
																				"nodeType": "YulLiteral",
																				"src": "11889:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11878:2:20",
																			"nodeType": "YulIdentifier",
																			"src": "11878:2:20"
																		},
																		"nativeSrc": "11878:14:20",
																		"nodeType": "YulFunctionCall",
																		"src": "11878:14:20"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11855:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "11855:2:20"
																},
																"nativeSrc": "11855:38:20",
																"nodeType": "YulFunctionCall",
																"src": "11855:38:20"
															},
															"nativeSrc": "11852:84:20",
															"nodeType": "YulIf",
															"src": "11852:84:20"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11622:320:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11657:4:20",
														"nodeType": "YulTypedName",
														"src": "11657:4:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11666:6:20",
														"nodeType": "YulTypedName",
														"src": "11666:6:20",
														"type": ""
													}
												],
												"src": "11622:320:20"
											},
											{
												"body": {
													"nativeSrc": "11976:152:20",
													"nodeType": "YulBlock",
													"src": "11976:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11993:1:20",
																		"nodeType": "YulLiteral",
																		"src": "11993:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11996:77:20",
																		"nodeType": "YulLiteral",
																		"src": "11996:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11986:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "11986:6:20"
																},
																"nativeSrc": "11986:88:20",
																"nodeType": "YulFunctionCall",
																"src": "11986:88:20"
															},
															"nativeSrc": "11986:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "11986:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12090:1:20",
																		"nodeType": "YulLiteral",
																		"src": "12090:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12093:4:20",
																		"nodeType": "YulLiteral",
																		"src": "12093:4:20",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12083:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "12083:6:20"
																},
																"nativeSrc": "12083:15:20",
																"nodeType": "YulFunctionCall",
																"src": "12083:15:20"
															},
															"nativeSrc": "12083:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "12083:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12114:1:20",
																		"nodeType": "YulLiteral",
																		"src": "12114:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12117:4:20",
																		"nodeType": "YulLiteral",
																		"src": "12117:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12107:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "12107:6:20"
																},
																"nativeSrc": "12107:15:20",
																"nodeType": "YulFunctionCall",
																"src": "12107:15:20"
															},
															"nativeSrc": "12107:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "12107:15:20"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "11948:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "11948:180:20"
											},
											{
												"body": {
													"nativeSrc": "12232:124:20",
													"nodeType": "YulBlock",
													"src": "12232:124:20",
													"statements": [
														{
															"nativeSrc": "12242:26:20",
															"nodeType": "YulAssignment",
															"src": "12242:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12254:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "12254:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12265:2:20",
																		"nodeType": "YulLiteral",
																		"src": "12265:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12250:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12250:3:20"
																},
																"nativeSrc": "12250:18:20",
																"nodeType": "YulFunctionCall",
																"src": "12250:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12242:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "12242:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12322:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "12322:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12335:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "12335:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12346:1:20",
																				"nodeType": "YulLiteral",
																				"src": "12346:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12331:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12331:3:20"
																		},
																		"nativeSrc": "12331:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12331:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12278:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "12278:43:20"
																},
																"nativeSrc": "12278:71:20",
																"nodeType": "YulFunctionCall",
																"src": "12278:71:20"
															},
															"nativeSrc": "12278:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "12278:71:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "12134:222:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12204:9:20",
														"nodeType": "YulTypedName",
														"src": "12204:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12216:6:20",
														"nodeType": "YulTypedName",
														"src": "12216:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12227:4:20",
														"nodeType": "YulTypedName",
														"src": "12227:4:20",
														"type": ""
													}
												],
												"src": "12134:222:20"
											},
											{
												"body": {
													"nativeSrc": "12488:206:20",
													"nodeType": "YulBlock",
													"src": "12488:206:20",
													"statements": [
														{
															"nativeSrc": "12498:26:20",
															"nodeType": "YulAssignment",
															"src": "12498:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12510:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "12510:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12521:2:20",
																		"nodeType": "YulLiteral",
																		"src": "12521:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12506:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12506:3:20"
																},
																"nativeSrc": "12506:18:20",
																"nodeType": "YulFunctionCall",
																"src": "12506:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12498:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "12498:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12578:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "12578:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12591:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "12591:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12602:1:20",
																				"nodeType": "YulLiteral",
																				"src": "12602:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12587:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12587:3:20"
																		},
																		"nativeSrc": "12587:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12587:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12534:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "12534:43:20"
																},
																"nativeSrc": "12534:71:20",
																"nodeType": "YulFunctionCall",
																"src": "12534:71:20"
															},
															"nativeSrc": "12534:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "12534:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12659:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "12659:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12672:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "12672:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12683:2:20",
																				"nodeType": "YulLiteral",
																				"src": "12683:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12668:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "12668:3:20"
																		},
																		"nativeSrc": "12668:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "12668:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12615:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "12615:43:20"
																},
																"nativeSrc": "12615:72:20",
																"nodeType": "YulFunctionCall",
																"src": "12615:72:20"
															},
															"nativeSrc": "12615:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "12615:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12362:332:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12452:9:20",
														"nodeType": "YulTypedName",
														"src": "12452:9:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12464:6:20",
														"nodeType": "YulTypedName",
														"src": "12464:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12472:6:20",
														"nodeType": "YulTypedName",
														"src": "12472:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12483:4:20",
														"nodeType": "YulTypedName",
														"src": "12483:4:20",
														"type": ""
													}
												],
												"src": "12362:332:20"
											},
											{
												"body": {
													"nativeSrc": "12938:537:20",
													"nodeType": "YulBlock",
													"src": "12938:537:20",
													"statements": [
														{
															"nativeSrc": "12948:27:20",
															"nodeType": "YulAssignment",
															"src": "12948:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12960:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "12960:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12971:3:20",
																		"nodeType": "YulLiteral",
																		"src": "12971:3:20",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12956:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "12956:3:20"
																},
																"nativeSrc": "12956:19:20",
																"nodeType": "YulFunctionCall",
																"src": "12956:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12948:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "12948:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13029:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "13029:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13042:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13042:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13053:1:20",
																				"nodeType": "YulLiteral",
																				"src": "13053:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13038:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13038:3:20"
																		},
																		"nativeSrc": "13038:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13038:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "12985:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "12985:43:20"
																},
																"nativeSrc": "12985:71:20",
																"nodeType": "YulFunctionCall",
																"src": "12985:71:20"
															},
															"nativeSrc": "12985:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "12985:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13110:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "13110:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13123:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13123:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13134:2:20",
																				"nodeType": "YulLiteral",
																				"src": "13134:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13119:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13119:3:20"
																		},
																		"nativeSrc": "13119:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13119:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13066:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "13066:43:20"
																},
																"nativeSrc": "13066:72:20",
																"nodeType": "YulFunctionCall",
																"src": "13066:72:20"
															},
															"nativeSrc": "13066:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "13066:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13192:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "13192:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13205:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13205:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13216:2:20",
																				"nodeType": "YulLiteral",
																				"src": "13216:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13201:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13201:3:20"
																		},
																		"nativeSrc": "13201:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13201:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13148:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "13148:43:20"
																},
																"nativeSrc": "13148:72:20",
																"nodeType": "YulFunctionCall",
																"src": "13148:72:20"
															},
															"nativeSrc": "13148:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "13148:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "13274:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "13274:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13287:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13287:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13298:2:20",
																				"nodeType": "YulLiteral",
																				"src": "13298:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13283:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13283:3:20"
																		},
																		"nativeSrc": "13283:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13283:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13230:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "13230:43:20"
																},
																"nativeSrc": "13230:72:20",
																"nodeType": "YulFunctionCall",
																"src": "13230:72:20"
															},
															"nativeSrc": "13230:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "13230:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "13356:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "13356:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13369:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13369:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13380:3:20",
																				"nodeType": "YulLiteral",
																				"src": "13380:3:20",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13365:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13365:3:20"
																		},
																		"nativeSrc": "13365:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13365:19:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13312:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "13312:43:20"
																},
																"nativeSrc": "13312:73:20",
																"nodeType": "YulFunctionCall",
																"src": "13312:73:20"
															},
															"nativeSrc": "13312:73:20",
															"nodeType": "YulExpressionStatement",
															"src": "13312:73:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "13439:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "13439:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13452:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13452:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13463:3:20",
																				"nodeType": "YulLiteral",
																				"src": "13463:3:20",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13448:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13448:3:20"
																		},
																		"nativeSrc": "13448:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13448:19:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13395:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "13395:43:20"
																},
																"nativeSrc": "13395:73:20",
																"nodeType": "YulFunctionCall",
																"src": "13395:73:20"
															},
															"nativeSrc": "13395:73:20",
															"nodeType": "YulExpressionStatement",
															"src": "13395:73:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12700:775:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12870:9:20",
														"nodeType": "YulTypedName",
														"src": "12870:9:20",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "12882:6:20",
														"nodeType": "YulTypedName",
														"src": "12882:6:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12890:6:20",
														"nodeType": "YulTypedName",
														"src": "12890:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12898:6:20",
														"nodeType": "YulTypedName",
														"src": "12898:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12906:6:20",
														"nodeType": "YulTypedName",
														"src": "12906:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12914:6:20",
														"nodeType": "YulTypedName",
														"src": "12914:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12922:6:20",
														"nodeType": "YulTypedName",
														"src": "12922:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12933:4:20",
														"nodeType": "YulTypedName",
														"src": "12933:4:20",
														"type": ""
													}
												],
												"src": "12700:775:20"
											},
											{
												"body": {
													"nativeSrc": "13607:206:20",
													"nodeType": "YulBlock",
													"src": "13607:206:20",
													"statements": [
														{
															"nativeSrc": "13617:26:20",
															"nodeType": "YulAssignment",
															"src": "13617:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13629:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "13629:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13640:2:20",
																		"nodeType": "YulLiteral",
																		"src": "13640:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13625:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "13625:3:20"
																},
																"nativeSrc": "13625:18:20",
																"nodeType": "YulFunctionCall",
																"src": "13625:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13617:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "13617:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13697:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "13697:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13710:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13710:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13721:1:20",
																				"nodeType": "YulLiteral",
																				"src": "13721:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13706:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13706:3:20"
																		},
																		"nativeSrc": "13706:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13706:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13653:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "13653:43:20"
																},
																"nativeSrc": "13653:71:20",
																"nodeType": "YulFunctionCall",
																"src": "13653:71:20"
															},
															"nativeSrc": "13653:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "13653:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13778:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "13778:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13791:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "13791:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13802:2:20",
																				"nodeType": "YulLiteral",
																				"src": "13802:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13787:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "13787:3:20"
																		},
																		"nativeSrc": "13787:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "13787:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13734:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "13734:43:20"
																},
																"nativeSrc": "13734:72:20",
																"nodeType": "YulFunctionCall",
																"src": "13734:72:20"
															},
															"nativeSrc": "13734:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "13734:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "13481:332:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13571:9:20",
														"nodeType": "YulTypedName",
														"src": "13571:9:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13583:6:20",
														"nodeType": "YulTypedName",
														"src": "13583:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13591:6:20",
														"nodeType": "YulTypedName",
														"src": "13591:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13602:4:20",
														"nodeType": "YulTypedName",
														"src": "13602:4:20",
														"type": ""
													}
												],
												"src": "13481:332:20"
											},
											{
												"body": {
													"nativeSrc": "13973:288:20",
													"nodeType": "YulBlock",
													"src": "13973:288:20",
													"statements": [
														{
															"nativeSrc": "13983:26:20",
															"nodeType": "YulAssignment",
															"src": "13983:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13995:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "13995:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14006:2:20",
																		"nodeType": "YulLiteral",
																		"src": "14006:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13991:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "13991:3:20"
																},
																"nativeSrc": "13991:18:20",
																"nodeType": "YulFunctionCall",
																"src": "13991:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13983:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "13983:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14063:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "14063:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14076:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "14076:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14087:1:20",
																				"nodeType": "YulLiteral",
																				"src": "14087:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14072:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "14072:3:20"
																		},
																		"nativeSrc": "14072:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14072:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14019:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "14019:43:20"
																},
																"nativeSrc": "14019:71:20",
																"nodeType": "YulFunctionCall",
																"src": "14019:71:20"
															},
															"nativeSrc": "14019:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "14019:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14144:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "14144:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14157:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "14157:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14168:2:20",
																				"nodeType": "YulLiteral",
																				"src": "14168:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14153:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "14153:3:20"
																		},
																		"nativeSrc": "14153:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14153:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14100:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "14100:43:20"
																},
																"nativeSrc": "14100:72:20",
																"nodeType": "YulFunctionCall",
																"src": "14100:72:20"
															},
															"nativeSrc": "14100:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "14100:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14226:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "14226:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14239:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "14239:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14250:2:20",
																				"nodeType": "YulLiteral",
																				"src": "14250:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14235:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "14235:3:20"
																		},
																		"nativeSrc": "14235:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14235:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14182:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "14182:43:20"
																},
																"nativeSrc": "14182:72:20",
																"nodeType": "YulFunctionCall",
																"src": "14182:72:20"
															},
															"nativeSrc": "14182:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "14182:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13819:442:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13929:9:20",
														"nodeType": "YulTypedName",
														"src": "13929:9:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13941:6:20",
														"nodeType": "YulTypedName",
														"src": "13941:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13949:6:20",
														"nodeType": "YulTypedName",
														"src": "13949:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13957:6:20",
														"nodeType": "YulTypedName",
														"src": "13957:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13968:4:20",
														"nodeType": "YulTypedName",
														"src": "13968:4:20",
														"type": ""
													}
												],
												"src": "13819:442:20"
											},
											{
												"body": {
													"nativeSrc": "14295:152:20",
													"nodeType": "YulBlock",
													"src": "14295:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14312:1:20",
																		"nodeType": "YulLiteral",
																		"src": "14312:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14315:77:20",
																		"nodeType": "YulLiteral",
																		"src": "14315:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14305:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "14305:6:20"
																},
																"nativeSrc": "14305:88:20",
																"nodeType": "YulFunctionCall",
																"src": "14305:88:20"
															},
															"nativeSrc": "14305:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "14305:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14409:1:20",
																		"nodeType": "YulLiteral",
																		"src": "14409:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14412:4:20",
																		"nodeType": "YulLiteral",
																		"src": "14412:4:20",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14402:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "14402:6:20"
																},
																"nativeSrc": "14402:15:20",
																"nodeType": "YulFunctionCall",
																"src": "14402:15:20"
															},
															"nativeSrc": "14402:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "14402:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14433:1:20",
																		"nodeType": "YulLiteral",
																		"src": "14433:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14436:4:20",
																		"nodeType": "YulLiteral",
																		"src": "14436:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14426:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "14426:6:20"
																},
																"nativeSrc": "14426:15:20",
																"nodeType": "YulFunctionCall",
																"src": "14426:15:20"
															},
															"nativeSrc": "14426:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "14426:15:20"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14267:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "14267:180:20"
											},
											{
												"body": {
													"nativeSrc": "14497:147:20",
													"nodeType": "YulBlock",
													"src": "14497:147:20",
													"statements": [
														{
															"nativeSrc": "14507:25:20",
															"nodeType": "YulAssignment",
															"src": "14507:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14530:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "14530:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14512:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "14512:17:20"
																},
																"nativeSrc": "14512:20:20",
																"nodeType": "YulFunctionCall",
																"src": "14512:20:20"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14507:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "14507:1:20"
																}
															]
														},
														{
															"nativeSrc": "14541:25:20",
															"nodeType": "YulAssignment",
															"src": "14541:25:20",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14564:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "14564:1:20"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14546:17:20",
																	"nodeType": "YulIdentifier",
																	"src": "14546:17:20"
																},
																"nativeSrc": "14546:20:20",
																"nodeType": "YulFunctionCall",
																"src": "14546:20:20"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14541:1:20",
																	"nodeType": "YulIdentifier",
																	"src": "14541:1:20"
																}
															]
														},
														{
															"nativeSrc": "14575:16:20",
															"nodeType": "YulAssignment",
															"src": "14575:16:20",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14586:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "14586:1:20"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14589:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "14589:1:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14582:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "14582:3:20"
																},
																"nativeSrc": "14582:9:20",
																"nodeType": "YulFunctionCall",
																"src": "14582:9:20"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14575:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "14575:3:20"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14615:22:20",
																"nodeType": "YulBlock",
																"src": "14615:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14617:16:20",
																				"nodeType": "YulIdentifier",
																				"src": "14617:16:20"
																			},
																			"nativeSrc": "14617:18:20",
																			"nodeType": "YulFunctionCall",
																			"src": "14617:18:20"
																		},
																		"nativeSrc": "14617:18:20",
																		"nodeType": "YulExpressionStatement",
																		"src": "14617:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14607:1:20",
																		"nodeType": "YulIdentifier",
																		"src": "14607:1:20"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14610:3:20",
																		"nodeType": "YulIdentifier",
																		"src": "14610:3:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14604:2:20",
																	"nodeType": "YulIdentifier",
																	"src": "14604:2:20"
																},
																"nativeSrc": "14604:10:20",
																"nodeType": "YulFunctionCall",
																"src": "14604:10:20"
															},
															"nativeSrc": "14601:36:20",
															"nodeType": "YulIf",
															"src": "14601:36:20"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14453:191:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14484:1:20",
														"nodeType": "YulTypedName",
														"src": "14484:1:20",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14487:1:20",
														"nodeType": "YulTypedName",
														"src": "14487:1:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14493:3:20",
														"nodeType": "YulTypedName",
														"src": "14493:3:20",
														"type": ""
													}
												],
												"src": "14453:191:20"
											},
											{
												"body": {
													"nativeSrc": "14860:454:20",
													"nodeType": "YulBlock",
													"src": "14860:454:20",
													"statements": [
														{
															"nativeSrc": "14870:27:20",
															"nodeType": "YulAssignment",
															"src": "14870:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14882:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "14882:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14893:3:20",
																		"nodeType": "YulLiteral",
																		"src": "14893:3:20",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14878:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "14878:3:20"
																},
																"nativeSrc": "14878:19:20",
																"nodeType": "YulFunctionCall",
																"src": "14878:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14870:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "14870:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14951:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "14951:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14964:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "14964:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14975:1:20",
																				"nodeType": "YulLiteral",
																				"src": "14975:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14960:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "14960:3:20"
																		},
																		"nativeSrc": "14960:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "14960:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14907:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "14907:43:20"
																},
																"nativeSrc": "14907:71:20",
																"nodeType": "YulFunctionCall",
																"src": "14907:71:20"
															},
															"nativeSrc": "14907:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "14907:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15032:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "15032:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15045:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15045:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15056:2:20",
																				"nodeType": "YulLiteral",
																				"src": "15056:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15041:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15041:3:20"
																		},
																		"nativeSrc": "15041:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15041:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14988:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "14988:43:20"
																},
																"nativeSrc": "14988:72:20",
																"nodeType": "YulFunctionCall",
																"src": "14988:72:20"
															},
															"nativeSrc": "14988:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "14988:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15114:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "15114:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15127:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15127:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15138:2:20",
																				"nodeType": "YulLiteral",
																				"src": "15138:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15123:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15123:3:20"
																		},
																		"nativeSrc": "15123:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15123:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "15070:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "15070:43:20"
																},
																"nativeSrc": "15070:72:20",
																"nodeType": "YulFunctionCall",
																"src": "15070:72:20"
															},
															"nativeSrc": "15070:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "15070:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "15196:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "15196:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15209:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15209:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15220:2:20",
																				"nodeType": "YulLiteral",
																				"src": "15220:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15205:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15205:3:20"
																		},
																		"nativeSrc": "15205:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15205:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15152:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "15152:43:20"
																},
																"nativeSrc": "15152:72:20",
																"nodeType": "YulFunctionCall",
																"src": "15152:72:20"
															},
															"nativeSrc": "15152:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "15152:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "15278:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "15278:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15291:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15291:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15302:3:20",
																				"nodeType": "YulLiteral",
																				"src": "15302:3:20",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15287:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15287:3:20"
																		},
																		"nativeSrc": "15287:19:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15287:19:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15234:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "15234:43:20"
																},
																"nativeSrc": "15234:73:20",
																"nodeType": "YulFunctionCall",
																"src": "15234:73:20"
															},
															"nativeSrc": "15234:73:20",
															"nodeType": "YulExpressionStatement",
															"src": "15234:73:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "14650:664:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14800:9:20",
														"nodeType": "YulTypedName",
														"src": "14800:9:20",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "14812:6:20",
														"nodeType": "YulTypedName",
														"src": "14812:6:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14820:6:20",
														"nodeType": "YulTypedName",
														"src": "14820:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14828:6:20",
														"nodeType": "YulTypedName",
														"src": "14828:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14836:6:20",
														"nodeType": "YulTypedName",
														"src": "14836:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14844:6:20",
														"nodeType": "YulTypedName",
														"src": "14844:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14855:4:20",
														"nodeType": "YulTypedName",
														"src": "14855:4:20",
														"type": ""
													}
												],
												"src": "14650:664:20"
											},
											{
												"body": {
													"nativeSrc": "15498:367:20",
													"nodeType": "YulBlock",
													"src": "15498:367:20",
													"statements": [
														{
															"nativeSrc": "15508:27:20",
															"nodeType": "YulAssignment",
															"src": "15508:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15520:9:20",
																		"nodeType": "YulIdentifier",
																		"src": "15520:9:20"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15531:3:20",
																		"nodeType": "YulLiteral",
																		"src": "15531:3:20",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15516:3:20",
																	"nodeType": "YulIdentifier",
																	"src": "15516:3:20"
																},
																"nativeSrc": "15516:19:20",
																"nodeType": "YulFunctionCall",
																"src": "15516:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15508:4:20",
																	"nodeType": "YulIdentifier",
																	"src": "15508:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15589:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "15589:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15602:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15602:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15613:1:20",
																				"nodeType": "YulLiteral",
																				"src": "15613:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15598:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15598:3:20"
																		},
																		"nativeSrc": "15598:17:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15598:17:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "15545:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "15545:43:20"
																},
																"nativeSrc": "15545:71:20",
																"nodeType": "YulFunctionCall",
																"src": "15545:71:20"
															},
															"nativeSrc": "15545:71:20",
															"nodeType": "YulExpressionStatement",
															"src": "15545:71:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15666:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "15666:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15679:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15679:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15690:2:20",
																				"nodeType": "YulLiteral",
																				"src": "15690:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15675:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15675:3:20"
																		},
																		"nativeSrc": "15675:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15675:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "15626:39:20",
																	"nodeType": "YulIdentifier",
																	"src": "15626:39:20"
																},
																"nativeSrc": "15626:68:20",
																"nodeType": "YulFunctionCall",
																"src": "15626:68:20"
															},
															"nativeSrc": "15626:68:20",
															"nodeType": "YulExpressionStatement",
															"src": "15626:68:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15748:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "15748:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15761:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15761:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15772:2:20",
																				"nodeType": "YulLiteral",
																				"src": "15772:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15757:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15757:3:20"
																		},
																		"nativeSrc": "15757:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15757:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "15704:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "15704:43:20"
																},
																"nativeSrc": "15704:72:20",
																"nodeType": "YulFunctionCall",
																"src": "15704:72:20"
															},
															"nativeSrc": "15704:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "15704:72:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "15830:6:20",
																		"nodeType": "YulIdentifier",
																		"src": "15830:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15843:9:20",
																				"nodeType": "YulIdentifier",
																				"src": "15843:9:20"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15854:2:20",
																				"nodeType": "YulLiteral",
																				"src": "15854:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15839:3:20",
																			"nodeType": "YulIdentifier",
																			"src": "15839:3:20"
																		},
																		"nativeSrc": "15839:18:20",
																		"nodeType": "YulFunctionCall",
																		"src": "15839:18:20"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "15786:43:20",
																	"nodeType": "YulIdentifier",
																	"src": "15786:43:20"
																},
																"nativeSrc": "15786:72:20",
																"nodeType": "YulFunctionCall",
																"src": "15786:72:20"
															},
															"nativeSrc": "15786:72:20",
															"nodeType": "YulExpressionStatement",
															"src": "15786:72:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "15320:545:20",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15446:9:20",
														"nodeType": "YulTypedName",
														"src": "15446:9:20",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15458:6:20",
														"nodeType": "YulTypedName",
														"src": "15458:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15466:6:20",
														"nodeType": "YulTypedName",
														"src": "15466:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15474:6:20",
														"nodeType": "YulTypedName",
														"src": "15474:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15482:6:20",
														"nodeType": "YulTypedName",
														"src": "15482:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15493:4:20",
														"nodeType": "YulTypedName",
														"src": "15493:4:20",
														"type": ""
													}
												],
												"src": "15320:545:20"
											},
											{
												"body": {
													"nativeSrc": "15899:152:20",
													"nodeType": "YulBlock",
													"src": "15899:152:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15916:1:20",
																		"nodeType": "YulLiteral",
																		"src": "15916:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15919:77:20",
																		"nodeType": "YulLiteral",
																		"src": "15919:77:20",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15909:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "15909:6:20"
																},
																"nativeSrc": "15909:88:20",
																"nodeType": "YulFunctionCall",
																"src": "15909:88:20"
															},
															"nativeSrc": "15909:88:20",
															"nodeType": "YulExpressionStatement",
															"src": "15909:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16013:1:20",
																		"nodeType": "YulLiteral",
																		"src": "16013:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16016:4:20",
																		"nodeType": "YulLiteral",
																		"src": "16016:4:20",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16006:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "16006:6:20"
																},
																"nativeSrc": "16006:15:20",
																"nodeType": "YulFunctionCall",
																"src": "16006:15:20"
															},
															"nativeSrc": "16006:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "16006:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16037:1:20",
																		"nodeType": "YulLiteral",
																		"src": "16037:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16040:4:20",
																		"nodeType": "YulLiteral",
																		"src": "16040:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16030:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "16030:6:20"
																},
																"nativeSrc": "16030:15:20",
																"nodeType": "YulFunctionCall",
																"src": "16030:15:20"
															},
															"nativeSrc": "16030:15:20",
															"nodeType": "YulExpressionStatement",
															"src": "16030:15:20"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "15871:180:20",
												"nodeType": "YulFunctionDefinition",
												"src": "15871:180:20"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 20,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"2445": [
									{
										"length": 32,
										"start": 2661
									}
								],
								"2447": [
									{
										"length": 32,
										"start": 2620
									}
								],
								"2449": [
									{
										"length": 32,
										"start": 2534
									}
								],
								"2451": [
									{
										"length": 32,
										"start": 4218
									}
								],
								"2453": [
									{
										"length": 32,
										"start": 4251
									}
								],
								"2456": [
									{
										"length": 32,
										"start": 2792
									}
								],
								"2459": [
									{
										"length": 32,
										"start": 2851
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e8575f3560e01c80637ecebe001161008a578063a0712d6811610064578063a0712d6814610266578063a9059cbb14610282578063d505accf146102b2578063dd62ed3e146102ce576100e8565b80637ecebe00146101f457806384b0196e1461022457806395d89b4114610248576100e8565b806323b872dd116100c657806323b872dd14610158578063313ce567146101885780633644e515146101a657806370a08231146101c4576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f80fd5b6100f46102fe565b604051610101919061156b565b60405180910390f35b610124600480360381019061011f919061161c565b61038e565b6040516101319190611674565b60405180910390f35b6101426103b0565b60405161014f919061169c565b60405180910390f35b610172600480360381019061016d91906116b5565b6103b9565b60405161017f9190611674565b60405180910390f35b6101906103e7565b60405161019d9190611720565b60405180910390f35b6101ae6103ef565b6040516101bb9190611751565b60405180910390f35b6101de60048036038101906101d9919061176a565b6103fd565b6040516101eb919061169c565b60405180910390f35b61020e6004803603810190610209919061176a565b610442565b60405161021b919061169c565b60405180910390f35b61022c610453565b60405161023f9796959493929190611895565b60405180910390f35b6102506104f8565b60405161025d919061156b565b60405180910390f35b610280600480360381019061027b9190611917565b610588565b005b61029c6004803603810190610297919061161c565b61065f565b6040516102a99190611674565b60405180910390f35b6102cc60048036038101906102c79190611996565b610681565b005b6102e860048036038101906102e39190611a33565b6107c6565b6040516102f5919061169c565b60405180910390f35b60606003805461030d90611a9e565b80601f016020809104026020016040519081016040528092919081815260200182805461033990611a9e565b80156103845780601f1061035b57610100808354040283529160200191610384565b820191905f5260205f20905b81548152906001019060200180831161036757829003601f168201915b5050505050905090565b5f80610398610848565b90506103a581858561084f565b600191505092915050565b5f600254905090565b5f806103c3610848565b90506103d0858285610861565b6103db8585856108f3565b60019150509392505050565b5f6012905090565b5f6103f86109e3565b905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f61044c82610a99565b9050919050565b5f6060805f805f6060610464610adf565b61046c610b1a565b46305f801b5f67ffffffffffffffff81111561048b5761048a611ace565b5b6040519080825280602002602001820160405280156104b95781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b60606004805461050790611a9e565b80601f016020809104026020016040519081016040528092919081815260200182805461053390611a9e565b801561057e5780601f106105555761010080835404028352916020019161057e565b820191905f5260205f20905b81548152906001019060200180831161056157829003601f168201915b5050505050905090565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461061957336040517f245aecd30000000000000000000000000000000000000000000000000000000081526004016106109190611afb565b60405180910390fd5b6106233382610b55565b7f5f7666687319b40936f33c188908d86aea154abd3f4127b4fa0a3f04f303c7da8142604051610654929190611b14565b60405180910390a150565b5f80610669610848565b90506106768185856108f3565b600191505092915050565b834211156106c657836040517f627913020000000000000000000000000000000000000000000000000000000081526004016106bd919061169c565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106f48c610bd4565b8960405160200161070a96959493929190611b3b565b6040516020818303038152906040528051906020012090505f61072c82610c27565b90505f61073b82878787610c40565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107af57808a6040517f4b800e460000000000000000000000000000000000000000000000000000000081526004016107a6929190611b9a565b60405180910390fd5b6107ba8a8a8a61084f565b50505050505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b61085c8383836001610c6e565b505050565b5f61086c84846107c6565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108ed57818110156108de578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016108d593929190611bc1565b60405180910390fd5b6108ec84848484035f610c6e565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610963575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161095a9190611afb565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109d3575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109ca9190611afb565b60405180910390fd5b6109de838383610e3d565b505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610a5e57507f000000000000000000000000000000000000000000000000000000000000000046145b15610a8b577f00000000000000000000000000000000000000000000000000000000000000009050610a96565b610a93611056565b90505b90565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060610b1560057f00000000000000000000000000000000000000000000000000000000000000006110eb90919063ffffffff16565b905090565b6060610b5060067f00000000000000000000000000000000000000000000000000000000000000006110eb90919063ffffffff16565b905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bc5575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610bbc9190611afb565b60405180910390fd5b610bd05f8383610e3d565b5050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190600101919050559050919050565b5f610c39610c336109e3565b83611198565b9050919050565b5f805f80610c50888888886111d8565b925092509250610c6082826112bf565b829350505050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610cde575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610cd59190611afb565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d4e575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d459190611afb565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610e37578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e2e919061169c565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e8d578060025f828254610e819190611c23565b92505081905550610f5b565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610f16578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f0d93929190611bc1565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fa2578060025f8282540392505081905550610fec565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611049919061169c565b60405180910390a3505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000046306040516020016110d0959493929190611c56565b60405160208183030381529060405280519060200120905090565b606060ff5f1b83146111075761110083611421565b9050611192565b81805461111390611a9e565b80601f016020809104026020016040519081016040528092919081815260200182805461113f90611a9e565b801561118a5780601f106111615761010080835404028352916020019161118a565b820191905f5260205f20905b81548152906001019060200180831161116d57829003601f168201915b505050505090505b92915050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c1115611214575f6003859250925092506112b5565b5f6001888888886040515f81526020016040526040516112379493929190611ca7565b6020604051602081039080840390855afa158015611257573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112a8575f60015f801b935093509350506112b5565b805f805f1b935093509350505b9450945094915050565b5f60038111156112d2576112d1611cea565b5b8260038111156112e5576112e4611cea565b5b031561141d57600160038111156112ff576112fe611cea565b5b82600381111561131257611311611cea565b5b03611349576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561135d5761135c611cea565b5b8260038111156113705761136f611cea565b5b036113b457805f1c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016113ab919061169c565b60405180910390fd5b6003808111156113c7576113c6611cea565b5b8260038111156113da576113d9611cea565b5b0361141c57806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016114139190611751565b60405180910390fd5b5b5050565b60605f61142d83611493565b90505f602067ffffffffffffffff81111561144b5761144a611ace565b5b6040519080825280601f01601f19166020018201604052801561147d5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f8060ff835f1c169050601f8111156114d8576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156115185780820151818401526020810190506114fd565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61153d826114e1565b61154781856114eb565b93506115578185602086016114fb565b61156081611523565b840191505092915050565b5f6020820190508181035f8301526115838184611533565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115b88261158f565b9050919050565b6115c8816115ae565b81146115d2575f80fd5b50565b5f813590506115e3816115bf565b92915050565b5f819050919050565b6115fb816115e9565b8114611605575f80fd5b50565b5f81359050611616816115f2565b92915050565b5f80604083850312156116325761163161158b565b5b5f61163f858286016115d5565b925050602061165085828601611608565b9150509250929050565b5f8115159050919050565b61166e8161165a565b82525050565b5f6020820190506116875f830184611665565b92915050565b611696816115e9565b82525050565b5f6020820190506116af5f83018461168d565b92915050565b5f805f606084860312156116cc576116cb61158b565b5b5f6116d9868287016115d5565b93505060206116ea868287016115d5565b92505060406116fb86828701611608565b9150509250925092565b5f60ff82169050919050565b61171a81611705565b82525050565b5f6020820190506117335f830184611711565b92915050565b5f819050919050565b61174b81611739565b82525050565b5f6020820190506117645f830184611742565b92915050565b5f6020828403121561177f5761177e61158b565b5b5f61178c848285016115d5565b91505092915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6117c981611795565b82525050565b6117d8816115ae565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611810816115e9565b82525050565b5f6118218383611807565b60208301905092915050565b5f602082019050919050565b5f611843826117de565b61184d81856117e8565b9350611858836117f8565b805f5b8381101561188857815161186f8882611816565b975061187a8361182d565b92505060018101905061185b565b5085935050505092915050565b5f60e0820190506118a85f83018a6117c0565b81810360208301526118ba8189611533565b905081810360408301526118ce8188611533565b90506118dd606083018761168d565b6118ea60808301866117cf565b6118f760a0830185611742565b81810360c08301526119098184611839565b905098975050505050505050565b5f6020828403121561192c5761192b61158b565b5b5f61193984828501611608565b91505092915050565b61194b81611705565b8114611955575f80fd5b50565b5f8135905061196681611942565b92915050565b61197581611739565b811461197f575f80fd5b50565b5f813590506119908161196c565b92915050565b5f805f805f805f60e0888a0312156119b1576119b061158b565b5b5f6119be8a828b016115d5565b97505060206119cf8a828b016115d5565b96505060406119e08a828b01611608565b95505060606119f18a828b01611608565b9450506080611a028a828b01611958565b93505060a0611a138a828b01611982565b92505060c0611a248a828b01611982565b91505092959891949750929550565b5f8060408385031215611a4957611a4861158b565b5b5f611a56858286016115d5565b9250506020611a67858286016115d5565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ab557607f821691505b602082108103611ac857611ac7611a71565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f602082019050611b0e5f8301846117cf565b92915050565b5f604082019050611b275f83018561168d565b611b34602083018461168d565b9392505050565b5f60c082019050611b4e5f830189611742565b611b5b60208301886117cf565b611b6860408301876117cf565b611b75606083018661168d565b611b82608083018561168d565b611b8f60a083018461168d565b979650505050505050565b5f604082019050611bad5f8301856117cf565b611bba60208301846117cf565b9392505050565b5f606082019050611bd45f8301866117cf565b611be1602083018561168d565b611bee604083018461168d565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c2d826115e9565b9150611c38836115e9565b9250828201905080821115611c5057611c4f611bf6565b5b92915050565b5f60a082019050611c695f830188611742565b611c766020830187611742565b611c836040830186611742565b611c90606083018561168d565b611c9d60808301846117cf565b9695505050505050565b5f608082019050611cba5f830187611742565b611cc76020830186611711565b611cd46040830185611742565b611ce16060830184611742565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea2646970667358221220c95646f450bb7adc94c0613beedc8068fe2cd2afd9c27e2a7dfb98f8ed47340464736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xA0712D68 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2CE JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x248 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C4 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x16B5 JUMP JUMPDEST PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x1674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x1720 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x176A JUMP JUMPDEST PUSH2 0x442 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH2 0x453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH2 0x588 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1674 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH2 0x681 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x30D SWAP1 PUSH2 0x1A9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x339 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x384 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x384 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x367 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x398 PUSH2 0x848 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A5 DUP2 DUP6 DUP6 PUSH2 0x84F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3C3 PUSH2 0x848 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D0 DUP6 DUP3 DUP6 PUSH2 0x861 JUMP JUMPDEST PUSH2 0x3DB DUP6 DUP6 DUP6 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3F8 PUSH2 0x9E3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x44C DUP3 PUSH2 0xA99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x464 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x46C PUSH2 0xB1A JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x48B JUMPI PUSH2 0x48A PUSH2 0x1ACE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4B9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x507 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x533 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x57E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x555 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x57E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x561 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x619 JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x245AECD300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x610 SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x623 CALLER DUP3 PUSH2 0xB55 JUMP JUMPDEST PUSH32 0x5F7666687319B40936F33C188908D86AEA154ABD3F4127B4FA0A3F04F303C7DA DUP2 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x654 SWAP3 SWAP2 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x669 PUSH2 0x848 JUMP JUMPDEST SWAP1 POP PUSH2 0x676 DUP2 DUP6 DUP6 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x6C6 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BD SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x6F4 DUP13 PUSH2 0xBD4 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x70A SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x72C DUP3 PUSH2 0xC27 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x73B DUP3 DUP8 DUP8 DUP8 PUSH2 0xC40 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7AF JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A6 SWAP3 SWAP2 SWAP1 PUSH2 0x1B9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7BA DUP11 DUP11 DUP11 PUSH2 0x84F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x85C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC6E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x86C DUP5 DUP5 PUSH2 0x7C6 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x8ED JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8DE JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8EC DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xC6E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x963 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95A SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9D3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CA SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DE DUP4 DUP4 DUP4 PUSH2 0xE3D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xA5E JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xA8B JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xA96 JUMP JUMPDEST PUSH2 0xA93 PUSH2 0x1056 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB15 PUSH1 0x5 PUSH32 0x0 PUSH2 0x10EB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB50 PUSH1 0x6 PUSH32 0x0 PUSH2 0x10EB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBC SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBD0 PUSH0 DUP4 DUP4 PUSH2 0xE3D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC39 PUSH2 0xC33 PUSH2 0x9E3 JUMP JUMPDEST DUP4 PUSH2 0x1198 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xC50 DUP9 DUP9 DUP9 DUP9 PUSH2 0x11D8 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xC60 DUP3 DUP3 PUSH2 0x12BF JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCDE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD4E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD45 SWAP2 SWAP1 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xE37 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE2E SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE81 SWAP2 SWAP1 PUSH2 0x1C23 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF5B JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF16 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFA2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xFEC JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1049 SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10D0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x1107 JUMPI PUSH2 0x1100 DUP4 PUSH2 0x1421 JUMP JUMPDEST SWAP1 POP PUSH2 0x1192 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1113 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x113F SWAP1 PUSH2 0x1A9E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x118A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1161 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x118A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x116D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x1214 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x12B5 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1237 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CA7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1257 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A8 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x12B5 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12D2 JUMPI PUSH2 0x12D1 PUSH2 0x1CEA JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12E5 JUMPI PUSH2 0x12E4 PUSH2 0x1CEA JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x141D JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12FF JUMPI PUSH2 0x12FE PUSH2 0x1CEA JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1312 JUMPI PUSH2 0x1311 PUSH2 0x1CEA JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1349 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x135D JUMPI PUSH2 0x135C PUSH2 0x1CEA JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1370 JUMPI PUSH2 0x136F PUSH2 0x1CEA JUMP JUMPDEST JUMPDEST SUB PUSH2 0x13B4 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AB SWAP2 SWAP1 PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x13C7 JUMPI PUSH2 0x13C6 PUSH2 0x1CEA JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13DA JUMPI PUSH2 0x13D9 PUSH2 0x1CEA JUMP JUMPDEST JUMPDEST SUB PUSH2 0x141C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1413 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x142D DUP4 PUSH2 0x1493 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x144B JUMPI PUSH2 0x144A PUSH2 0x1ACE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x147D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x14D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1518 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14FD JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x153D DUP3 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0x1547 DUP2 DUP6 PUSH2 0x14EB JUMP JUMPDEST SWAP4 POP PUSH2 0x1557 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14FB JUMP JUMPDEST PUSH2 0x1560 DUP2 PUSH2 0x1523 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1583 DUP2 DUP5 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15B8 DUP3 PUSH2 0x158F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C8 DUP2 PUSH2 0x15AE JUMP JUMPDEST DUP2 EQ PUSH2 0x15D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15E3 DUP2 PUSH2 0x15BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15FB DUP2 PUSH2 0x15E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1605 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1616 DUP2 PUSH2 0x15F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1632 JUMPI PUSH2 0x1631 PUSH2 0x158B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x163F DUP6 DUP3 DUP7 ADD PUSH2 0x15D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1650 DUP6 DUP3 DUP7 ADD PUSH2 0x1608 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x166E DUP2 PUSH2 0x165A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1687 PUSH0 DUP4 ADD DUP5 PUSH2 0x1665 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1696 DUP2 PUSH2 0x15E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16AF PUSH0 DUP4 ADD DUP5 PUSH2 0x168D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16CC JUMPI PUSH2 0x16CB PUSH2 0x158B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D9 DUP7 DUP3 DUP8 ADD PUSH2 0x15D5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16EA DUP7 DUP3 DUP8 ADD PUSH2 0x15D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16FB DUP7 DUP3 DUP8 ADD PUSH2 0x1608 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x171A DUP2 PUSH2 0x1705 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1733 PUSH0 DUP4 ADD DUP5 PUSH2 0x1711 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x174B DUP2 PUSH2 0x1739 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1764 PUSH0 DUP4 ADD DUP5 PUSH2 0x1742 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x177F JUMPI PUSH2 0x177E PUSH2 0x158B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x178C DUP5 DUP3 DUP6 ADD PUSH2 0x15D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C9 DUP2 PUSH2 0x1795 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x17D8 DUP2 PUSH2 0x15AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1810 DUP2 PUSH2 0x15E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1821 DUP4 DUP4 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1843 DUP3 PUSH2 0x17DE JUMP JUMPDEST PUSH2 0x184D DUP2 DUP6 PUSH2 0x17E8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1858 DUP4 PUSH2 0x17F8 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1888 JUMPI DUP2 MLOAD PUSH2 0x186F DUP9 DUP3 PUSH2 0x1816 JUMP JUMPDEST SWAP8 POP PUSH2 0x187A DUP4 PUSH2 0x182D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x185B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x18A8 PUSH0 DUP4 ADD DUP11 PUSH2 0x17C0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x18BA DUP2 DUP10 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x18CE DUP2 DUP9 PUSH2 0x1533 JUMP JUMPDEST SWAP1 POP PUSH2 0x18DD PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x18EA PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x18F7 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1742 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1909 DUP2 DUP5 PUSH2 0x1839 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x192C JUMPI PUSH2 0x192B PUSH2 0x158B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1939 DUP5 DUP3 DUP6 ADD PUSH2 0x1608 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x194B DUP2 PUSH2 0x1705 JUMP JUMPDEST DUP2 EQ PUSH2 0x1955 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1966 DUP2 PUSH2 0x1942 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1975 DUP2 PUSH2 0x1739 JUMP JUMPDEST DUP2 EQ PUSH2 0x197F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1990 DUP2 PUSH2 0x196C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x19B1 JUMPI PUSH2 0x19B0 PUSH2 0x158B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19BE DUP11 DUP3 DUP12 ADD PUSH2 0x15D5 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x19CF DUP11 DUP3 DUP12 ADD PUSH2 0x15D5 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x19E0 DUP11 DUP3 DUP12 ADD PUSH2 0x1608 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x19F1 DUP11 DUP3 DUP12 ADD PUSH2 0x1608 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1A02 DUP11 DUP3 DUP12 ADD PUSH2 0x1958 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1A13 DUP11 DUP3 DUP12 ADD PUSH2 0x1982 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1A24 DUP11 DUP3 DUP12 ADD PUSH2 0x1982 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A49 JUMPI PUSH2 0x1A48 PUSH2 0x158B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A56 DUP6 DUP3 DUP7 ADD PUSH2 0x15D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A67 DUP6 DUP3 DUP7 ADD PUSH2 0x15D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1AB5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AC8 JUMPI PUSH2 0x1AC7 PUSH2 0x1A71 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B0E PUSH0 DUP4 ADD DUP5 PUSH2 0x17CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B27 PUSH0 DUP4 ADD DUP6 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x1B34 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x168D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1B4E PUSH0 DUP4 ADD DUP10 PUSH2 0x1742 JUMP JUMPDEST PUSH2 0x1B5B PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x1B68 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x1B75 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x1B82 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x1B8F PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x168D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BAD PUSH0 DUP4 ADD DUP6 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x1BBA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17CF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1BD4 PUSH0 DUP4 ADD DUP7 PUSH2 0x17CF JUMP JUMPDEST PUSH2 0x1BE1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x1BEE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x168D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C2D DUP3 PUSH2 0x15E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C38 DUP4 PUSH2 0x15E9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C50 JUMPI PUSH2 0x1C4F PUSH2 0x1BF6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1C69 PUSH0 DUP4 ADD DUP9 PUSH2 0x1742 JUMP JUMPDEST PUSH2 0x1C76 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1742 JUMP JUMPDEST PUSH2 0x1C83 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1742 JUMP JUMPDEST PUSH2 0x1C90 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x168D JUMP JUMPDEST PUSH2 0x1C9D PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x17CF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1CBA PUSH0 DUP4 ADD DUP8 PUSH2 0x1742 JUMP JUMPDEST PUSH2 0x1CC7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x1CD4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1742 JUMP JUMPDEST PUSH2 0x1CE1 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1742 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 JUMP CHAINID DELEGATECALL POP 0xBB PUSH27 0xDC94C0613BEEDC8068FE2CD2AFD9C27E2A7DFB98F8ED4734046473 PUSH16 0x6C634300081500330000000000000000 ",
							"sourceMap": "423:746:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2656:112:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2406:143:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:16;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2276:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1021:145:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3610:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1680:672:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;2656:112:5:-;2715:7;2741:20;:18;:20::i;:::-;2734:27;;2656:112;:::o;3299:116:3:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2406:143:5:-;2497:7;2523:19;2536:5;2523:12;:19::i;:::-;2516:26;;2406:143;;;:::o;5144:557:16:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;2276:93:3:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;1021:145:0:-;933:5;;;;;;;;;;;919:19;;:10;:19;;;915:79;;971:10;962:20;;;;;;;;;;;:::i;:::-;;;;;;;;915:79;1079:26:::1;1085:10;1097:7;1079:5;:26::i;:::-;1121:37;1133:7;1142:15;1121:37;;;;;;;:::i;:::-;;;;;;;;1021:145:::0;:::o;3610:178:3:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1680:672:5:-;1901:8;1883:15;:26;1879:97;;;1956:8;1932:33;;;;;;;;;;;:::i;:::-;;;;;;;;1879:97;1986:18;1022:95;2045:5;2052:7;2061:5;2068:16;2078:5;2068:9;:16::i;:::-;2086:8;2017:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2007:89;;;;;;1986:110;;2107:12;2122:28;2139:10;2122:16;:28::i;:::-;2107:43;;2161:14;2178:28;2192:4;2198:1;2201;2204;2178:13;:28::i;:::-;2161:45;;2230:5;2220:15;;:6;:15;;;2216:88;;2279:6;2287:5;2258:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2216:88;2314:31;2323:5;2330:7;2339:5;2314:8;:31::i;:::-;1869:483;;;1680:672;;;;;;;:::o;3846:140:3:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;8989:128:3:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3845:262:16:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;538:107:10:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6021:126:16:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;7721:208:3:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;759:395:10:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;4917:176:16:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6803:260:15:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;9949:432:3:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;4113:179:16:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3385:267:12:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;3353:401:17:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:15:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;2078:405:12:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;2555:245::-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;7:99:20:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:149::-;5659:7;5699:66;5692:5;5688:78;5677:89;;5623:149;;;:::o;5778:115::-;5863:23;5880:5;5863:23;:::i;:::-;5858:3;5851:36;5778:115;;:::o;5899:118::-;5986:24;6004:5;5986:24;:::i;:::-;5981:3;5974:37;5899:118;;:::o;6023:114::-;6090:6;6124:5;6118:12;6108:22;;6023:114;;;:::o;6143:184::-;6242:11;6276:6;6271:3;6264:19;6316:4;6311:3;6307:14;6292:29;;6143:184;;;;:::o;6333:132::-;6400:4;6423:3;6415:11;;6453:4;6448:3;6444:14;6436:22;;6333:132;;;:::o;6471:108::-;6548:24;6566:5;6548:24;:::i;:::-;6543:3;6536:37;6471:108;;:::o;6585:179::-;6654:10;6675:46;6717:3;6709:6;6675:46;:::i;:::-;6753:4;6748:3;6744:14;6730:28;;6585:179;;;;:::o;6770:113::-;6840:4;6872;6867:3;6863:14;6855:22;;6770:113;;;:::o;6919:732::-;7038:3;7067:54;7115:5;7067:54;:::i;:::-;7137:86;7216:6;7211:3;7137:86;:::i;:::-;7130:93;;7247:56;7297:5;7247:56;:::i;:::-;7326:7;7357:1;7342:284;7367:6;7364:1;7361:13;7342:284;;;7443:6;7437:13;7470:63;7529:3;7514:13;7470:63;:::i;:::-;7463:70;;7556:60;7609:6;7556:60;:::i;:::-;7546:70;;7402:224;7389:1;7386;7382:9;7377:14;;7342:284;;;7346:14;7642:3;7635:10;;7043:608;;;6919:732;;;;:::o;7657:1215::-;8006:4;8044:3;8033:9;8029:19;8021:27;;8058:69;8124:1;8113:9;8109:17;8100:6;8058:69;:::i;:::-;8174:9;8168:4;8164:20;8159:2;8148:9;8144:18;8137:48;8202:78;8275:4;8266:6;8202:78;:::i;:::-;8194:86;;8327:9;8321:4;8317:20;8312:2;8301:9;8297:18;8290:48;8355:78;8428:4;8419:6;8355:78;:::i;:::-;8347:86;;8443:72;8511:2;8500:9;8496:18;8487:6;8443:72;:::i;:::-;8525:73;8593:3;8582:9;8578:19;8569:6;8525:73;:::i;:::-;8608;8676:3;8665:9;8661:19;8652:6;8608:73;:::i;:::-;8729:9;8723:4;8719:20;8713:3;8702:9;8698:19;8691:49;8757:108;8860:4;8851:6;8757:108;:::i;:::-;8749:116;;7657:1215;;;;;;;;;;:::o;8878:329::-;8937:6;8986:2;8974:9;8965:7;8961:23;8957:32;8954:119;;;8992:79;;:::i;:::-;8954:119;9112:1;9137:53;9182:7;9173:6;9162:9;9158:22;9137:53;:::i;:::-;9127:63;;9083:117;8878:329;;;;:::o;9213:118::-;9284:22;9300:5;9284:22;:::i;:::-;9277:5;9274:33;9264:61;;9321:1;9318;9311:12;9264:61;9213:118;:::o;9337:135::-;9381:5;9419:6;9406:20;9397:29;;9435:31;9460:5;9435:31;:::i;:::-;9337:135;;;;:::o;9478:122::-;9551:24;9569:5;9551:24;:::i;:::-;9544:5;9541:35;9531:63;;9590:1;9587;9580:12;9531:63;9478:122;:::o;9606:139::-;9652:5;9690:6;9677:20;9668:29;;9706:33;9733:5;9706:33;:::i;:::-;9606:139;;;;:::o;9751:1199::-;9862:6;9870;9878;9886;9894;9902;9910;9959:3;9947:9;9938:7;9934:23;9930:33;9927:120;;;9966:79;;:::i;:::-;9927:120;10086:1;10111:53;10156:7;10147:6;10136:9;10132:22;10111:53;:::i;:::-;10101:63;;10057:117;10213:2;10239:53;10284:7;10275:6;10264:9;10260:22;10239:53;:::i;:::-;10229:63;;10184:118;10341:2;10367:53;10412:7;10403:6;10392:9;10388:22;10367:53;:::i;:::-;10357:63;;10312:118;10469:2;10495:53;10540:7;10531:6;10520:9;10516:22;10495:53;:::i;:::-;10485:63;;10440:118;10597:3;10624:51;10667:7;10658:6;10647:9;10643:22;10624:51;:::i;:::-;10614:61;;10568:117;10724:3;10751:53;10796:7;10787:6;10776:9;10772:22;10751:53;:::i;:::-;10741:63;;10695:119;10853:3;10880:53;10925:7;10916:6;10905:9;10901:22;10880:53;:::i;:::-;10870:63;;10824:119;9751:1199;;;;;;;;;;:::o;10956:474::-;11024:6;11032;11081:2;11069:9;11060:7;11056:23;11052:32;11049:119;;;11087:79;;:::i;:::-;11049:119;11207:1;11232:53;11277:7;11268:6;11257:9;11253:22;11232:53;:::i;:::-;11222:63;;11178:117;11334:2;11360:53;11405:7;11396:6;11385:9;11381:22;11360:53;:::i;:::-;11350:63;;11305:118;10956:474;;;;;:::o;11436:180::-;11484:77;11481:1;11474:88;11581:4;11578:1;11571:15;11605:4;11602:1;11595:15;11622:320;11666:6;11703:1;11697:4;11693:12;11683:22;;11750:1;11744:4;11740:12;11771:18;11761:81;;11827:4;11819:6;11815:17;11805:27;;11761:81;11889:2;11881:6;11878:14;11858:18;11855:38;11852:84;;11908:18;;:::i;:::-;11852:84;11673:269;11622:320;;;:::o;11948:180::-;11996:77;11993:1;11986:88;12093:4;12090:1;12083:15;12117:4;12114:1;12107:15;12134:222;12227:4;12265:2;12254:9;12250:18;12242:26;;12278:71;12346:1;12335:9;12331:17;12322:6;12278:71;:::i;:::-;12134:222;;;;:::o;12362:332::-;12483:4;12521:2;12510:9;12506:18;12498:26;;12534:71;12602:1;12591:9;12587:17;12578:6;12534:71;:::i;:::-;12615:72;12683:2;12672:9;12668:18;12659:6;12615:72;:::i;:::-;12362:332;;;;;:::o;12700:775::-;12933:4;12971:3;12960:9;12956:19;12948:27;;12985:71;13053:1;13042:9;13038:17;13029:6;12985:71;:::i;:::-;13066:72;13134:2;13123:9;13119:18;13110:6;13066:72;:::i;:::-;13148;13216:2;13205:9;13201:18;13192:6;13148:72;:::i;:::-;13230;13298:2;13287:9;13283:18;13274:6;13230:72;:::i;:::-;13312:73;13380:3;13369:9;13365:19;13356:6;13312:73;:::i;:::-;13395;13463:3;13452:9;13448:19;13439:6;13395:73;:::i;:::-;12700:775;;;;;;;;;:::o;13481:332::-;13602:4;13640:2;13629:9;13625:18;13617:26;;13653:71;13721:1;13710:9;13706:17;13697:6;13653:71;:::i;:::-;13734:72;13802:2;13791:9;13787:18;13778:6;13734:72;:::i;:::-;13481:332;;;;;:::o;13819:442::-;13968:4;14006:2;13995:9;13991:18;13983:26;;14019:71;14087:1;14076:9;14072:17;14063:6;14019:71;:::i;:::-;14100:72;14168:2;14157:9;14153:18;14144:6;14100:72;:::i;:::-;14182;14250:2;14239:9;14235:18;14226:6;14182:72;:::i;:::-;13819:442;;;;;;:::o;14267:180::-;14315:77;14312:1;14305:88;14412:4;14409:1;14402:15;14436:4;14433:1;14426:15;14453:191;14493:3;14512:20;14530:1;14512:20;:::i;:::-;14507:25;;14546:20;14564:1;14546:20;:::i;:::-;14541:25;;14589:1;14586;14582:9;14575:16;;14610:3;14607:1;14604:10;14601:36;;;14617:18;;:::i;:::-;14601:36;14453:191;;;;:::o;14650:664::-;14855:4;14893:3;14882:9;14878:19;14870:27;;14907:71;14975:1;14964:9;14960:17;14951:6;14907:71;:::i;:::-;14988:72;15056:2;15045:9;15041:18;15032:6;14988:72;:::i;:::-;15070;15138:2;15127:9;15123:18;15114:6;15070:72;:::i;:::-;15152;15220:2;15209:9;15205:18;15196:6;15152:72;:::i;:::-;15234:73;15302:3;15291:9;15287:19;15278:6;15234:73;:::i;:::-;14650:664;;;;;;;;:::o;15320:545::-;15493:4;15531:3;15520:9;15516:19;15508:27;;15545:71;15613:1;15602:9;15598:17;15589:6;15545:71;:::i;:::-;15626:68;15690:2;15679:9;15675:18;15666:6;15626:68;:::i;:::-;15704:72;15772:2;15761:9;15757:18;15748:6;15704:72;:::i;:::-;15786;15854:2;15843:9;15839:18;15830:6;15786:72;:::i;:::-;15320:545;;;;;;;:::o;15871:180::-;15919:77;15916:1;15909:88;16016:4;16013:1;16006:15;16040:4;16037:1;16030:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1500200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"decimals()": "383",
								"eip712Domain()": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"nonces(address)": "2894",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "160"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 644,
									"end": 875,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 644,
									"end": 875,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 644,
									"end": 875,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 644,
									"end": 875,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 644,
									"end": 875,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 644,
									"end": 875,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 644,
									"end": 875,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 644,
									"end": 875,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 644,
									"end": 875,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 644,
									"end": 875,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 644,
									"end": 875,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "PUSH",
									"source": 5,
									"value": "476172656E205465737420546F6B656E00000000000000000000000000000000"
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1613,
									"end": 1617,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "PUSH",
									"source": 16,
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "476172656E205465737420546F6B656E00000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 3,
									"value": "4754540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "12"
								},
								{
									"begin": 3432,
									"end": 3445,
									"name": "PUSH",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 3401,
									"end": 3405,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 3401,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "tag",
									"source": 16,
									"value": "12"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "PUSH",
									"source": 16,
									"value": "120"
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 3501,
									"end": 3517,
									"name": "PUSH",
									"source": 16,
									"value": "6"
								},
								{
									"begin": 3467,
									"end": 3474,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 3467,
									"end": 3518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "tag",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "PUSH",
									"source": 16,
									"value": "140"
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3558,
									"end": 3562,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3607,
									"end": 3614,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "PUSH",
									"source": 16,
									"value": "100"
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3644,
									"end": 3657,
									"name": "CHAINID",
									"source": 16
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "PUSH",
									"source": 16,
									"value": "A0"
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 3692,
									"end": 3715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "tag",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3747,
									"end": 3751,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 16,
									"value": "C0"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1574,
									"end": 1626,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1917,
									"end": 1924,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 742,
									"end": 752,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 734,
									"end": 739,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 734,
									"end": 739,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 752,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 734,
									"end": 752,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 734,
									"end": 752,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 734,
									"end": 752,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 734,
									"end": 752,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 734,
									"end": 752,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 734,
									"end": 752,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 734,
									"end": 752,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 734,
									"end": 752,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 734,
									"end": 752,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 734,
									"end": 752,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 734,
									"end": 752,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 734,
									"end": 752,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 734,
									"end": 752,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 734,
									"end": 752,
									"modifierDepth": 2,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 734,
									"end": 752,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 734,
									"end": 752,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 734,
									"end": 752,
									"modifierDepth": 2,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 812,
									"end": 867,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 818,
									"end": 828,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 854,
									"end": 864,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 854,
									"end": 862,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 854,
									"end": 862,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 854,
									"end": 862,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 854,
									"end": 864,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 854,
									"end": 864,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 854,
									"end": 864,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 854,
									"end": 864,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 854,
									"end": 864,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 846,
									"end": 865,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 846,
									"end": 865,
									"modifierDepth": 2,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 840,
									"end": 842,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 840,
									"end": 865,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 840,
									"end": 865,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 840,
									"end": 865,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 840,
									"end": 865,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 840,
									"end": 865,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 840,
									"end": 865,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 840,
									"end": 865,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 830,
									"end": 836,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "186A0"
								},
								{
									"begin": 830,
									"end": 866,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 830,
									"end": 866,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 830,
									"end": 866,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 830,
									"end": 866,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 830,
									"end": 866,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 830,
									"end": 866,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 830,
									"end": 866,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 812,
									"end": 817,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 812,
									"end": 817,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 812,
									"end": 817,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 812,
									"end": 867,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 812,
									"end": 867,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 812,
									"end": 867,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 812,
									"end": 867,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 812,
									"end": 867,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3010,
									"end": 3021,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3059,
									"end": 3061,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3048,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 3056,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3037,
									"end": 3061,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 3098,
									"end": 3103,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3084,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3176,
									"end": 3181,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 3161,
									"end": 3166,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3135,
									"end": 3167,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3135,
									"end": 3173,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3135,
									"end": 3173,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 3135,
									"end": 3181,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1390,
									"end": 1456,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 3219,
									"end": 3236,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3219,
									"end": 3236,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3195,
									"end": 3237,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3195,
									"end": 3237,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2914,
									"end": 3254,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "tag",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4168,
									"end": 4175,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2079,
									"end": 2174,
									"name": "PUSH",
									"source": 16,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "PUSH",
									"source": 16,
									"value": "100"
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 4255,
									"end": 4268,
									"name": "CHAINID",
									"source": 16
								},
								{
									"begin": 4278,
									"end": 4282,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP6",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 4204,
									"end": 4284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "tag",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4113,
									"end": 4292,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3075,
									"end": 3077,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3068,
									"end": 3077,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3002,
									"end": 3084,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3002,
									"end": 3084,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 3,
									"value": "45"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1773,
									"end": 1784,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1822,
									"end": 1825,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1854,
									"end": 1856,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1840,
									"end": 1844,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1840,
									"end": 1851,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1840,
									"end": 1856,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1893,
									"end": 1896,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 12,
									"value": "305A27A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1879,
									"end": 1897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1974,
									"end": 1978,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1974,
									"end": 1985,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1965,
									"end": 1969,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 1957,
									"end": 1970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1949,
									"end": 1971,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1949,
									"end": 1971,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1949,
									"end": 1985,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1941,
									"end": 1986,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1941,
									"end": 1986,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1708,
									"end": 1994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3203,
									"end": 3223,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3311,
									"end": 3321,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3301,
									"end": 3321,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3301,
									"end": 3321,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3135,
									"end": 3337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "57"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 3,
									"value": "59"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "62"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "63"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "65"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 20,
									"value": "66"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 20,
									"value": "67"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 20,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 20,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 20,
									"value": "68"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 20,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 20,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 20,
									"value": "69"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 20,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 20
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "108"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 20,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 20,
									"value": "108"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 20
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "109"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "110"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "68"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 20,
									"value": "110"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 20,
									"value": "109"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 20,
									"value": "70"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 20
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 20,
									"value": "71"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 20
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 20,
									"value": "72"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 20
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 20,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "115"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 20,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "72"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 20,
									"value": "115"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "116"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "72"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 20,
									"value": "116"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 20
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 20
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 20
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 20
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 20,
									"value": "74"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 20,
									"value": "75"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 20,
									"value": "76"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "120"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "121"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "122"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "74"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 20,
									"value": "122"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "75"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 20,
									"value": "121"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "74"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 20,
									"value": "120"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 20,
									"value": "77"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 20,
									"value": "78"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "125"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "76"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 20,
									"value": "125"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "126"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "127"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "77"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 20,
									"value": "127"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 20
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 20,
									"value": "126"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 20,
									"value": "79"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "130"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "79"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 20,
									"value": "130"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "131"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "78"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 20,
									"value": "131"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 20,
									"value": "81"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 20,
									"value": "133"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "135"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "136"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 20,
									"value": "136"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "133"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 20,
									"value": "135"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 20,
									"value": "82"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "138"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "139"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "70"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 20,
									"value": "139"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "140"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "71"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 20,
									"value": "140"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "141"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 20,
									"value": "141"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "142"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "143"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "71"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 20,
									"value": "143"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "81"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 20,
									"value": "142"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 20,
									"value": "138"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 20,
									"value": "83"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 20
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 20,
									"value": "84"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "146"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 20
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 20,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "83"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 20,
									"value": "146"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 20
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 20,
									"value": "85"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "148"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "84"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 20,
									"value": "148"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 20,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 20
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 20,
									"value": "9"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "150"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "66"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 20,
									"value": "150"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 20,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "151"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "152"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "67"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 20,
									"value": "152"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 20,
									"value": "151"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "153"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 20
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "69"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 20,
									"value": "153"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "154"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "82"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 20,
									"value": "154"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "156"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "157"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 20
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 20,
									"value": "157"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "158"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "85"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 20,
									"value": "158"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "155"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 20,
									"value": "156"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 20
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "159"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "70"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 20,
									"value": "159"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 20,
									"value": "160"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "162"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 20
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 20
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "160"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 20,
									"value": "162"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "163"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 20
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "164"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 20
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "84"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 20,
									"value": "164"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 20,
									"value": "163"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 20,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 20
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 20
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 20
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 20,
									"value": "155"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "tag",
									"source": 20,
									"value": "86"
								},
								{
									"begin": 5234,
									"end": 5414,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5282,
									"end": 5359,
									"name": "PUSH",
									"source": 20,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5279,
									"end": 5280,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5360,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 5379,
									"end": 5383,
									"name": "PUSH",
									"source": 20,
									"value": "11"
								},
								{
									"begin": 5376,
									"end": 5377,
									"name": "PUSH",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 5369,
									"end": 5384,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 5403,
									"end": 5407,
									"name": "PUSH",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 5400,
									"end": 5401,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 5393,
									"end": 5408,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "tag",
									"source": 20,
									"value": "87"
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5462,
									"end": 5470,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 5509,
									"end": 5514,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 5506,
									"end": 5507,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 5502,
									"end": 5515,
									"name": "SHR",
									"source": 20
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 5481,
									"end": 5515,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 5420,
									"end": 5522,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5420,
									"end": 5522,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "tag",
									"source": 20,
									"value": "88"
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5589,
									"end": 5594,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 5596,
									"end": 5600,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 5620,
									"end": 5626,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 5611,
									"end": 5626,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5644,
									"end": 5649,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 5635,
									"end": 5649,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 20,
									"value": "168"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5679,
									"end": 5680,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 5669,
									"end": 5677,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 5666,
									"end": 5681,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "170"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 5774,
									"end": 5778,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 5769,
									"end": 5772,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 5765,
									"end": 5779,
									"name": "DIV",
									"source": 20
								},
								{
									"begin": 5759,
									"end": 5763,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 5756,
									"end": 5780,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "171"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "172"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "86"
								},
								{
									"begin": 5783,
									"end": 5801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "tag",
									"source": 20,
									"value": "172"
								},
								{
									"begin": 5783,
									"end": 5801,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "tag",
									"source": 20,
									"value": "171"
								},
								{
									"begin": 5753,
									"end": 5803,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5833,
									"end": 5834,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 5823,
									"end": 5831,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 5819,
									"end": 5835,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "173"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 6248,
									"end": 6252,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 6241,
									"end": 6246,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 6237,
									"end": 6253,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 6228,
									"end": 6253,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "tag",
									"source": 20,
									"value": "173"
								},
								{
									"begin": 5816,
									"end": 6267,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 6292,
									"end": 6296,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 6280,
									"end": 6303,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "174"
								},
								{
									"begin": 6351,
									"end": 6359,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "87"
								},
								{
									"begin": 6328,
									"end": 6360,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "tag",
									"source": 20,
									"value": "174"
								},
								{
									"begin": 6328,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "SWAP5",
									"source": 20
								},
								{
									"begin": 6316,
									"end": 6360,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "168"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "tag",
									"source": 20,
									"value": "170"
								},
								{
									"begin": 5658,
									"end": 6370,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 20
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP5",
									"source": 20
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5528,
									"end": 6376,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 5528,
									"end": 6376,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 20,
									"value": "89"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6436,
									"end": 6441,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 6627,
									"end": 6635,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "176"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 6648,
									"end": 6649,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 6639,
									"end": 6649,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "175"
								},
								{
									"begin": 6650,
									"end": 6655,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "tag",
									"source": 20,
									"value": "176"
								},
								{
									"begin": 6617,
									"end": 6657,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6676,
									"end": 6680,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "177"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 6693,
									"end": 6694,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 6684,
									"end": 6694,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "175"
								},
								{
									"begin": 6695,
									"end": 6700,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "tag",
									"source": 20,
									"value": "177"
								},
								{
									"begin": 6666,
									"end": 6702,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6762,
									"end": 6766,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 6810,
									"end": 6811,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "179"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 6846,
									"end": 6847,
									"name": "PUSH",
									"source": 20,
									"value": "2"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "180"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "178"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "tag",
									"source": 20,
									"value": "179"
								},
								{
									"begin": 6805,
									"end": 6832,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6823,
									"end": 6824,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 6814,
									"end": 6824,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "175"
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "tag",
									"source": 20,
									"value": "180"
								},
								{
									"begin": 6841,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6886,
									"end": 6889,
									"name": "PUSH",
									"source": 20,
									"value": "FF"
								},
								{
									"begin": 6876,
									"end": 6884,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 6873,
									"end": 6890,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "181"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "182"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "86"
								},
								{
									"begin": 6893,
									"end": 6911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "tag",
									"source": 20,
									"value": "182"
								},
								{
									"begin": 6893,
									"end": 6911,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "tag",
									"source": 20,
									"value": "181"
								},
								{
									"begin": 6870,
									"end": 6913,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6942,
									"end": 6950,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 6939,
									"end": 6940,
									"name": "PUSH",
									"source": 20,
									"value": "2"
								},
								{
									"begin": 6935,
									"end": 6951,
									"name": "EXP",
									"source": 20
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 6926,
									"end": 6951,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6977,
									"end": 6980,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 6970,
									"end": 6975,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 6967,
									"end": 6981,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "183"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "184"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "86"
								},
								{
									"begin": 6984,
									"end": 7002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "tag",
									"source": 20,
									"value": "184"
								},
								{
									"begin": 6984,
									"end": 7002,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "tag",
									"source": 20,
									"value": "183"
								},
								{
									"begin": 6964,
									"end": 7004,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "175"
								},
								{
									"begin": 7017,
									"end": 7022,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "tag",
									"source": 20,
									"value": "178"
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6755,
									"end": 7032,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7141,
									"end": 7143,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 7131,
									"end": 7139,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 7128,
									"end": 7144,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 7122,
									"end": 7125,
									"name": "PUSH",
									"source": 20,
									"value": "133"
								},
								{
									"begin": 7116,
									"end": 7120,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 7113,
									"end": 7126,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 7109,
									"end": 7145,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 7091,
									"end": 7093,
									"name": "PUSH",
									"source": 20,
									"value": "4E"
								},
								{
									"begin": 7081,
									"end": 7089,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7078,
									"end": 7094,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 7073,
									"end": 7075,
									"name": "PUSH",
									"source": 20,
									"value": "B"
								},
								{
									"begin": 7067,
									"end": 7071,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7064,
									"end": 7076,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 7060,
									"end": 7095,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 7044,
									"end": 7155,
									"name": "OR",
									"source": 20
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "185"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 7197,
									"end": 7205,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 7191,
									"end": 7195,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 7187,
									"end": 7206,
									"name": "EXP",
									"source": 20
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 7178,
									"end": 7206,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7232,
									"end": 7235,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 7225,
									"end": 7230,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 7222,
									"end": 7236,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "186"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "187"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "86"
								},
								{
									"begin": 7239,
									"end": 7257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "tag",
									"source": 20,
									"value": "187"
								},
								{
									"begin": 7239,
									"end": 7257,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "tag",
									"source": 20,
									"value": "186"
								},
								{
									"begin": 7219,
									"end": 7259,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "175"
								},
								{
									"begin": 7272,
									"end": 7277,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "tag",
									"source": 20,
									"value": "185"
								},
								{
									"begin": 7041,
									"end": 7287,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "188"
								},
								{
									"begin": 7350,
									"end": 7353,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7340,
									"end": 7348,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7334,
									"end": 7338,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7331,
									"end": 7332,
									"name": "PUSH",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "88"
								},
								{
									"begin": 7312,
									"end": 7354,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "tag",
									"source": 20,
									"value": "188"
								},
								{
									"begin": 7312,
									"end": 7354,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 7297,
									"end": 7354,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 7381,
									"end": 7384,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7377,
									"end": 7391,
									"name": "DIV",
									"source": 20
								},
								{
									"begin": 7370,
									"end": 7375,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 7367,
									"end": 7392,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "189"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "190"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "86"
								},
								{
									"begin": 7395,
									"end": 7413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "tag",
									"source": 20,
									"value": "190"
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "tag",
									"source": 20,
									"value": "189"
								},
								{
									"begin": 7364,
									"end": 7415,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7444,
									"end": 7448,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 7437,
									"end": 7442,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 7433,
									"end": 7449,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 7424,
									"end": 7449,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "tag",
									"source": 20,
									"value": "175"
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP4",
									"source": 20
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6382,
									"end": 7455,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 6382,
									"end": 7455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "tag",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7521,
									"end": 7526,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 7545,
									"end": 7568,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "192"
								},
								{
									"begin": 7563,
									"end": 7567,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 7545,
									"end": 7568,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "74"
								},
								{
									"begin": 7545,
									"end": 7568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7545,
									"end": 7568,
									"name": "tag",
									"source": 20,
									"value": "192"
								},
								{
									"begin": 7545,
									"end": 7568,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7537,
									"end": 7568,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 7537,
									"end": 7568,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7589,
									"end": 7616,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "193"
								},
								{
									"begin": 7607,
									"end": 7615,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 7589,
									"end": 7616,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "74"
								},
								{
									"begin": 7589,
									"end": 7616,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7589,
									"end": 7616,
									"name": "tag",
									"source": 20,
									"value": "193"
								},
								{
									"begin": 7589,
									"end": 7616,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7577,
									"end": 7616,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 7577,
									"end": 7616,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7635,
									"end": 7739,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "194"
								},
								{
									"begin": 7672,
									"end": 7738,
									"name": "PUSH",
									"source": 20,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7662,
									"end": 7670,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7656,
									"end": 7660,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 7635,
									"end": 7739,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "89"
								},
								{
									"begin": 7635,
									"end": 7739,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7635,
									"end": 7739,
									"name": "tag",
									"source": 20,
									"value": "194"
								},
								{
									"begin": 7635,
									"end": 7739,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7626,
									"end": 7739,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 7626,
									"end": 7739,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7461,
									"end": 7746,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7461,
									"end": 7746,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "tag",
									"source": 20,
									"value": "26"
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7792,
									"end": 7799,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 7815,
									"end": 7835,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "196"
								},
								{
									"begin": 7833,
									"end": 7834,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 7815,
									"end": 7835,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "74"
								},
								{
									"begin": 7815,
									"end": 7835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7815,
									"end": 7835,
									"name": "tag",
									"source": 20,
									"value": "196"
								},
								{
									"begin": 7815,
									"end": 7835,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7810,
									"end": 7835,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 7810,
									"end": 7835,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7849,
									"end": 7869,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "197"
								},
								{
									"begin": 7867,
									"end": 7868,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 7849,
									"end": 7869,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "74"
								},
								{
									"begin": 7849,
									"end": 7869,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7849,
									"end": 7869,
									"name": "tag",
									"source": 20,
									"value": "197"
								},
								{
									"begin": 7849,
									"end": 7869,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7844,
									"end": 7869,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 7844,
									"end": 7869,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7904,
									"end": 7905,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 7897,
									"end": 7906,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 7926,
									"end": 7956,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "198"
								},
								{
									"begin": 7944,
									"end": 7955,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 7926,
									"end": 7956,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "74"
								},
								{
									"begin": 7926,
									"end": 7956,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 7926,
									"end": 7956,
									"name": "tag",
									"source": 20,
									"value": "198"
								},
								{
									"begin": 7926,
									"end": 7956,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7915,
									"end": 7956,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 7915,
									"end": 7956,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8105,
									"end": 8106,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 8096,
									"end": 8103,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 8092,
									"end": 8107,
									"name": "DIV",
									"source": 20
								},
								{
									"begin": 8089,
									"end": 8090,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 8086,
									"end": 8108,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 8066,
									"end": 8067,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 8059,
									"end": 8068,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 8039,
									"end": 8122,
									"name": "OR",
									"source": 20
								},
								{
									"begin": 8016,
									"end": 8155,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "199"
								},
								{
									"begin": 8016,
									"end": 8155,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 8135,
									"end": 8153,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "200"
								},
								{
									"begin": 8135,
									"end": 8153,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "86"
								},
								{
									"begin": 8135,
									"end": 8153,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8135,
									"end": 8153,
									"name": "tag",
									"source": 20,
									"value": "200"
								},
								{
									"begin": 8135,
									"end": 8153,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8016,
									"end": 8155,
									"name": "tag",
									"source": 20,
									"value": "199"
								},
								{
									"begin": 8016,
									"end": 8155,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 7800,
									"end": 8162,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7752,
									"end": 8162,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 7752,
									"end": 8162,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8168,
									"end": 8245,
									"name": "tag",
									"source": 20,
									"value": "90"
								},
								{
									"begin": 8168,
									"end": 8245,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8205,
									"end": 8212,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 8234,
									"end": 8239,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 8223,
									"end": 8239,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8223,
									"end": 8239,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8168,
									"end": 8245,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 8168,
									"end": 8245,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8168,
									"end": 8245,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8168,
									"end": 8245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8251,
									"end": 8369,
									"name": "tag",
									"source": 20,
									"value": "91"
								},
								{
									"begin": 8251,
									"end": 8369,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8338,
									"end": 8362,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "203"
								},
								{
									"begin": 8356,
									"end": 8361,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 8338,
									"end": 8362,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "90"
								},
								{
									"begin": 8338,
									"end": 8362,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8338,
									"end": 8362,
									"name": "tag",
									"source": 20,
									"value": "203"
								},
								{
									"begin": 8338,
									"end": 8362,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8333,
									"end": 8336,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 8326,
									"end": 8363,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 8251,
									"end": 8369,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8251,
									"end": 8369,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8251,
									"end": 8369,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8375,
									"end": 8493,
									"name": "tag",
									"source": 20,
									"value": "92"
								},
								{
									"begin": 8375,
									"end": 8493,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8462,
									"end": 8486,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "205"
								},
								{
									"begin": 8480,
									"end": 8485,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 8462,
									"end": 8486,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "74"
								},
								{
									"begin": 8462,
									"end": 8486,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8462,
									"end": 8486,
									"name": "tag",
									"source": 20,
									"value": "205"
								},
								{
									"begin": 8462,
									"end": 8486,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8457,
									"end": 8460,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 8450,
									"end": 8487,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 8375,
									"end": 8493,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8375,
									"end": 8493,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8375,
									"end": 8493,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8499,
									"end": 8625,
									"name": "tag",
									"source": 20,
									"value": "93"
								},
								{
									"begin": 8499,
									"end": 8625,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8536,
									"end": 8543,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 8576,
									"end": 8618,
									"name": "PUSH",
									"source": 20,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8569,
									"end": 8574,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 8565,
									"end": 8619,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 8554,
									"end": 8619,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8554,
									"end": 8619,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8499,
									"end": 8625,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 8499,
									"end": 8625,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8499,
									"end": 8625,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8499,
									"end": 8625,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8631,
									"end": 8727,
									"name": "tag",
									"source": 20,
									"value": "94"
								},
								{
									"begin": 8631,
									"end": 8727,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8668,
									"end": 8675,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 8697,
									"end": 8721,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "208"
								},
								{
									"begin": 8715,
									"end": 8720,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 8697,
									"end": 8721,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "93"
								},
								{
									"begin": 8697,
									"end": 8721,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8697,
									"end": 8721,
									"name": "tag",
									"source": 20,
									"value": "208"
								},
								{
									"begin": 8697,
									"end": 8721,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8686,
									"end": 8721,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8686,
									"end": 8721,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8631,
									"end": 8727,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 8631,
									"end": 8727,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 8631,
									"end": 8727,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8631,
									"end": 8727,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8733,
									"end": 8851,
									"name": "tag",
									"source": 20,
									"value": "95"
								},
								{
									"begin": 8733,
									"end": 8851,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8820,
									"end": 8844,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "210"
								},
								{
									"begin": 8838,
									"end": 8843,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 8820,
									"end": 8844,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "94"
								},
								{
									"begin": 8820,
									"end": 8844,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8820,
									"end": 8844,
									"name": "tag",
									"source": 20,
									"value": "210"
								},
								{
									"begin": 8820,
									"end": 8844,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8815,
									"end": 8818,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 8808,
									"end": 8845,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 8733,
									"end": 8851,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8733,
									"end": 8851,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8733,
									"end": 8851,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 8857,
									"end": 9521,
									"name": "tag",
									"source": 20,
									"value": "39"
								},
								{
									"begin": 8857,
									"end": 9521,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 9062,
									"end": 9066,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 9100,
									"end": 9103,
									"name": "PUSH",
									"source": 20,
									"value": "A0"
								},
								{
									"begin": 9089,
									"end": 9098,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 9085,
									"end": 9104,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 9077,
									"end": 9104,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 9077,
									"end": 9104,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 9114,
									"end": 9185,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "212"
								},
								{
									"begin": 9182,
									"end": 9183,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 9171,
									"end": 9180,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 9167,
									"end": 9184,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 9158,
									"end": 9164,
									"name": "DUP9",
									"source": 20
								},
								{
									"begin": 9114,
									"end": 9185,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "91"
								},
								{
									"begin": 9114,
									"end": 9185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 9114,
									"end": 9185,
									"name": "tag",
									"source": 20,
									"value": "212"
								},
								{
									"begin": 9114,
									"end": 9185,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 9195,
									"end": 9267,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "213"
								},
								{
									"begin": 9263,
									"end": 9265,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 9252,
									"end": 9261,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 9248,
									"end": 9266,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 9239,
									"end": 9245,
									"name": "DUP8",
									"source": 20
								},
								{
									"begin": 9195,
									"end": 9267,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "91"
								},
								{
									"begin": 9195,
									"end": 9267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 9195,
									"end": 9267,
									"name": "tag",
									"source": 20,
									"value": "213"
								},
								{
									"begin": 9195,
									"end": 9267,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 9277,
									"end": 9349,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "214"
								},
								{
									"begin": 9345,
									"end": 9347,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 9334,
									"end": 9343,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 9330,
									"end": 9348,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 9321,
									"end": 9327,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 9277,
									"end": 9349,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "91"
								},
								{
									"begin": 9277,
									"end": 9349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 9277,
									"end": 9349,
									"name": "tag",
									"source": 20,
									"value": "214"
								},
								{
									"begin": 9277,
									"end": 9349,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 9359,
									"end": 9431,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "215"
								},
								{
									"begin": 9427,
									"end": 9429,
									"name": "PUSH",
									"source": 20,
									"value": "60"
								},
								{
									"begin": 9416,
									"end": 9425,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 9412,
									"end": 9430,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 9403,
									"end": 9409,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 9359,
									"end": 9431,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "92"
								},
								{
									"begin": 9359,
									"end": 9431,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 9359,
									"end": 9431,
									"name": "tag",
									"source": 20,
									"value": "215"
								},
								{
									"begin": 9359,
									"end": 9431,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 9441,
									"end": 9514,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "216"
								},
								{
									"begin": 9509,
									"end": 9512,
									"name": "PUSH",
									"source": 20,
									"value": "80"
								},
								{
									"begin": 9498,
									"end": 9507,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 9494,
									"end": 9513,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 9485,
									"end": 9491,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 9441,
									"end": 9514,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "95"
								},
								{
									"begin": 9441,
									"end": 9514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 9441,
									"end": 9514,
									"name": "tag",
									"source": 20,
									"value": "216"
								},
								{
									"begin": 9441,
									"end": 9514,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 8857,
									"end": 9521,
									"name": "SWAP7",
									"source": 20
								},
								{
									"begin": 8857,
									"end": 9521,
									"name": "SWAP6",
									"source": 20
								},
								{
									"begin": 8857,
									"end": 9521,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8857,
									"end": 9521,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8857,
									"end": 9521,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8857,
									"end": 9521,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8857,
									"end": 9521,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8857,
									"end": 9521,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 8857,
									"end": 9521,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 9527,
									"end": 9749,
									"name": "tag",
									"source": 20,
									"value": "44"
								},
								{
									"begin": 9527,
									"end": 9749,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 9620,
									"end": 9624,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 9658,
									"end": 9660,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 9647,
									"end": 9656,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 9643,
									"end": 9661,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 9635,
									"end": 9661,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 9635,
									"end": 9661,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 9671,
									"end": 9742,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "218"
								},
								{
									"begin": 9739,
									"end": 9740,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 9728,
									"end": 9737,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 9724,
									"end": 9741,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 9715,
									"end": 9721,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 9671,
									"end": 9742,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "95"
								},
								{
									"begin": 9671,
									"end": 9742,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 9671,
									"end": 9742,
									"name": "tag",
									"source": 20,
									"value": "218"
								},
								{
									"begin": 9671,
									"end": 9742,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 9527,
									"end": 9749,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 9527,
									"end": 9749,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 9527,
									"end": 9749,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 9527,
									"end": 9749,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 9527,
									"end": 9749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 9755,
									"end": 9924,
									"name": "tag",
									"source": 20,
									"value": "96"
								},
								{
									"begin": 9755,
									"end": 9924,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 9839,
									"end": 9850,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 9873,
									"end": 9879,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 9868,
									"end": 9871,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 9861,
									"end": 9880,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 9913,
									"end": 9917,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 9908,
									"end": 9911,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 9904,
									"end": 9918,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 9889,
									"end": 9918,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 9889,
									"end": 9918,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 9755,
									"end": 9924,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 9755,
									"end": 9924,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 9755,
									"end": 9924,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 9755,
									"end": 9924,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 9755,
									"end": 9924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 9930,
									"end": 10176,
									"name": "tag",
									"source": 20,
									"value": "97"
								},
								{
									"begin": 9930,
									"end": 10176,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10011,
									"end": 10012,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 10021,
									"end": 10134,
									"name": "tag",
									"source": 20,
									"value": "221"
								},
								{
									"begin": 10021,
									"end": 10134,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10035,
									"end": 10041,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 10032,
									"end": 10033,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 10029,
									"end": 10042,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 10021,
									"end": 10134,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 10021,
									"end": 10134,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "223"
								},
								{
									"begin": 10021,
									"end": 10134,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 10120,
									"end": 10121,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 10115,
									"end": 10118,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 10111,
									"end": 10122,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 10105,
									"end": 10123,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 10101,
									"end": 10102,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 10096,
									"end": 10099,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 10092,
									"end": 10103,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 10085,
									"end": 10124,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 10057,
									"end": 10059,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 10054,
									"end": 10055,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 10050,
									"end": 10060,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 10045,
									"end": 10060,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 10045,
									"end": 10060,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10021,
									"end": 10134,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "221"
								},
								{
									"begin": 10021,
									"end": 10134,
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10021,
									"end": 10134,
									"name": "tag",
									"source": 20,
									"value": "223"
								},
								{
									"begin": 10021,
									"end": 10134,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10168,
									"end": 10169,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 10159,
									"end": 10165,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 10154,
									"end": 10157,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 10150,
									"end": 10166,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 10143,
									"end": 10170,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 9992,
									"end": 10176,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 9930,
									"end": 10176,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 9930,
									"end": 10176,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 9930,
									"end": 10176,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 9930,
									"end": 10176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10182,
									"end": 10284,
									"name": "tag",
									"source": 20,
									"value": "98"
								},
								{
									"begin": 10182,
									"end": 10284,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10223,
									"end": 10229,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 10274,
									"end": 10276,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 10270,
									"end": 10277,
									"name": "NOT",
									"source": 20
								},
								{
									"begin": 10265,
									"end": 10267,
									"name": "PUSH",
									"source": 20,
									"value": "1F"
								},
								{
									"begin": 10258,
									"end": 10263,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 10254,
									"end": 10268,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 10250,
									"end": 10278,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 10240,
									"end": 10278,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 10240,
									"end": 10278,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10182,
									"end": 10284,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 10182,
									"end": 10284,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 10182,
									"end": 10284,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10182,
									"end": 10284,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10290,
									"end": 10667,
									"name": "tag",
									"source": 20,
									"value": "99"
								},
								{
									"begin": 10290,
									"end": 10667,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10378,
									"end": 10381,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 10406,
									"end": 10445,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "226"
								},
								{
									"begin": 10439,
									"end": 10444,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 10406,
									"end": 10445,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "66"
								},
								{
									"begin": 10406,
									"end": 10445,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10406,
									"end": 10445,
									"name": "tag",
									"source": 20,
									"value": "226"
								},
								{
									"begin": 10406,
									"end": 10445,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10461,
									"end": 10532,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "227"
								},
								{
									"begin": 10525,
									"end": 10531,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 10520,
									"end": 10523,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 10461,
									"end": 10532,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "96"
								},
								{
									"begin": 10461,
									"end": 10532,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10461,
									"end": 10532,
									"name": "tag",
									"source": 20,
									"value": "227"
								},
								{
									"begin": 10461,
									"end": 10532,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10454,
									"end": 10532,
									"name": "SWAP4",
									"source": 20
								},
								{
									"begin": 10454,
									"end": 10532,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10541,
									"end": 10606,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "228"
								},
								{
									"begin": 10599,
									"end": 10605,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 10594,
									"end": 10597,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 10587,
									"end": 10591,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 10580,
									"end": 10585,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 10576,
									"end": 10592,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 10541,
									"end": 10606,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "97"
								},
								{
									"begin": 10541,
									"end": 10606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10541,
									"end": 10606,
									"name": "tag",
									"source": 20,
									"value": "228"
								},
								{
									"begin": 10541,
									"end": 10606,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10631,
									"end": 10660,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "229"
								},
								{
									"begin": 10653,
									"end": 10659,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 10631,
									"end": 10660,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "98"
								},
								{
									"begin": 10631,
									"end": 10660,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10631,
									"end": 10660,
									"name": "tag",
									"source": 20,
									"value": "229"
								},
								{
									"begin": 10631,
									"end": 10660,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10626,
									"end": 10629,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 10622,
									"end": 10661,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 10615,
									"end": 10661,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 10615,
									"end": 10661,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10382,
									"end": 10667,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10290,
									"end": 10667,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 10290,
									"end": 10667,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 10290,
									"end": 10667,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10290,
									"end": 10667,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10290,
									"end": 10667,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10673,
									"end": 10986,
									"name": "tag",
									"source": 20,
									"value": "50"
								},
								{
									"begin": 10673,
									"end": 10986,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10786,
									"end": 10790,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 10824,
									"end": 10826,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 10813,
									"end": 10822,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 10809,
									"end": 10827,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 10801,
									"end": 10827,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 10801,
									"end": 10827,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10873,
									"end": 10882,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 10867,
									"end": 10871,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 10863,
									"end": 10883,
									"name": "SUB",
									"source": 20
								},
								{
									"begin": 10859,
									"end": 10860,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 10848,
									"end": 10857,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 10844,
									"end": 10861,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 10837,
									"end": 10884,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 10901,
									"end": 10979,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "231"
								},
								{
									"begin": 10974,
									"end": 10978,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 10965,
									"end": 10971,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 10901,
									"end": 10979,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "99"
								},
								{
									"begin": 10901,
									"end": 10979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10901,
									"end": 10979,
									"name": "tag",
									"source": 20,
									"value": "231"
								},
								{
									"begin": 10901,
									"end": 10979,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 10893,
									"end": 10979,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 10893,
									"end": 10979,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10673,
									"end": 10986,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 10673,
									"end": 10986,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 10673,
									"end": 10986,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10673,
									"end": 10986,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10673,
									"end": 10986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 10992,
									"end": 11090,
									"name": "tag",
									"source": 20,
									"value": "100"
								},
								{
									"begin": 10992,
									"end": 11090,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11043,
									"end": 11049,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 11077,
									"end": 11082,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 11071,
									"end": 11083,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 11061,
									"end": 11083,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 11061,
									"end": 11083,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10992,
									"end": 11090,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 10992,
									"end": 11090,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 10992,
									"end": 11090,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 10992,
									"end": 11090,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 11096,
									"end": 11212,
									"name": "tag",
									"source": 20,
									"value": "101"
								},
								{
									"begin": 11096,
									"end": 11212,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11147,
									"end": 11151,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 11170,
									"end": 11173,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 11162,
									"end": 11173,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 11162,
									"end": 11173,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11200,
									"end": 11204,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 11195,
									"end": 11198,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 11191,
									"end": 11205,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 11183,
									"end": 11205,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 11183,
									"end": 11205,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11096,
									"end": 11212,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 11096,
									"end": 11212,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 11096,
									"end": 11212,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11096,
									"end": 11212,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 11218,
									"end": 11372,
									"name": "tag",
									"source": 20,
									"value": "102"
								},
								{
									"begin": 11218,
									"end": 11372,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11261,
									"end": 11272,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 11297,
									"end": 11326,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "235"
								},
								{
									"begin": 11321,
									"end": 11324,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 11315,
									"end": 11325,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 11297,
									"end": 11326,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "90"
								},
								{
									"begin": 11297,
									"end": 11326,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 11297,
									"end": 11326,
									"name": "tag",
									"source": 20,
									"value": "235"
								},
								{
									"begin": 11297,
									"end": 11326,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11360,
									"end": 11365,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 11336,
									"end": 11365,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 11336,
									"end": 11365,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11273,
									"end": 11372,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11218,
									"end": 11372,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 11218,
									"end": 11372,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 11218,
									"end": 11372,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11218,
									"end": 11372,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 11378,
									"end": 11972,
									"name": "tag",
									"source": 20,
									"value": "52"
								},
								{
									"begin": 11378,
									"end": 11972,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11462,
									"end": 11467,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 11493,
									"end": 11531,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "237"
								},
								{
									"begin": 11525,
									"end": 11530,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 11493,
									"end": 11531,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "100"
								},
								{
									"begin": 11493,
									"end": 11531,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 11493,
									"end": 11531,
									"name": "tag",
									"source": 20,
									"value": "237"
								},
								{
									"begin": 11493,
									"end": 11531,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11556,
									"end": 11561,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 11583,
									"end": 11623,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "238"
								},
								{
									"begin": 11617,
									"end": 11622,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 11583,
									"end": 11623,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "101"
								},
								{
									"begin": 11583,
									"end": 11623,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 11583,
									"end": 11623,
									"name": "tag",
									"source": 20,
									"value": "238"
								},
								{
									"begin": 11583,
									"end": 11623,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11571,
									"end": 11623,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 11571,
									"end": 11623,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11642,
									"end": 11677,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "239"
								},
								{
									"begin": 11668,
									"end": 11676,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 11642,
									"end": 11677,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "102"
								},
								{
									"begin": 11642,
									"end": 11677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 11642,
									"end": 11677,
									"name": "tag",
									"source": 20,
									"value": "239"
								},
								{
									"begin": 11642,
									"end": 11677,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11633,
									"end": 11677,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 11633,
									"end": 11677,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11701,
									"end": 11703,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 11693,
									"end": 11699,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 11690,
									"end": 11704,
									"name": "LT",
									"source": 20
								},
								{
									"begin": 11687,
									"end": 11965,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 11687,
									"end": 11965,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "240"
								},
								{
									"begin": 11687,
									"end": 11965,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 11772,
									"end": 11941,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "241"
								},
								{
									"begin": 11857,
									"end": 11923,
									"name": "PUSH",
									"source": 20,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11827,
									"end": 11833,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 11823,
									"end": 11825,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 11819,
									"end": 11834,
									"name": "SUB",
									"source": 20
								},
								{
									"begin": 11816,
									"end": 11817,
									"name": "PUSH",
									"source": 20,
									"value": "8"
								},
								{
									"begin": 11812,
									"end": 11835,
									"name": "MUL",
									"source": 20
								},
								{
									"begin": 11772,
									"end": 11941,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "72"
								},
								{
									"begin": 11772,
									"end": 11941,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 11772,
									"end": 11941,
									"name": "tag",
									"source": 20,
									"value": "241"
								},
								{
									"begin": 11772,
									"end": 11941,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11749,
									"end": 11754,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 11728,
									"end": 11955,
									"name": "AND",
									"source": 20
								},
								{
									"begin": 11719,
									"end": 11955,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 11719,
									"end": 11955,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11687,
									"end": 11965,
									"name": "tag",
									"source": 20,
									"value": "240"
								},
								{
									"begin": 11687,
									"end": 11965,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11468,
									"end": 11972,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11468,
									"end": 11972,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11378,
									"end": 11972,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 11378,
									"end": 11972,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 11378,
									"end": 11972,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11378,
									"end": 11972,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 11978,
									"end": 12169,
									"name": "tag",
									"source": 20,
									"value": "57"
								},
								{
									"begin": 11978,
									"end": 12169,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 12018,
									"end": 12021,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 12037,
									"end": 12057,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "243"
								},
								{
									"begin": 12055,
									"end": 12056,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 12037,
									"end": 12057,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "74"
								},
								{
									"begin": 12037,
									"end": 12057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 12037,
									"end": 12057,
									"name": "tag",
									"source": 20,
									"value": "243"
								},
								{
									"begin": 12037,
									"end": 12057,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 12032,
									"end": 12057,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 12032,
									"end": 12057,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12071,
									"end": 12091,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "244"
								},
								{
									"begin": 12089,
									"end": 12090,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 12071,
									"end": 12091,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "74"
								},
								{
									"begin": 12071,
									"end": 12091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 12071,
									"end": 12091,
									"name": "tag",
									"source": 20,
									"value": "244"
								},
								{
									"begin": 12071,
									"end": 12091,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 12066,
									"end": 12091,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 12066,
									"end": 12091,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12114,
									"end": 12115,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 12111,
									"end": 12112,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 12107,
									"end": 12116,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 12100,
									"end": 12116,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 12100,
									"end": 12116,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12135,
									"end": 12138,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 12132,
									"end": 12133,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 12129,
									"end": 12139,
									"name": "GT",
									"source": 20
								},
								{
									"begin": 12126,
									"end": 12162,
									"name": "ISZERO",
									"source": 20
								},
								{
									"begin": 12126,
									"end": 12162,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "245"
								},
								{
									"begin": 12126,
									"end": 12162,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": 12142,
									"end": 12160,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "246"
								},
								{
									"begin": 12142,
									"end": 12160,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "86"
								},
								{
									"begin": 12142,
									"end": 12160,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 12142,
									"end": 12160,
									"name": "tag",
									"source": 20,
									"value": "246"
								},
								{
									"begin": 12142,
									"end": 12160,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 12126,
									"end": 12162,
									"name": "tag",
									"source": 20,
									"value": "245"
								},
								{
									"begin": 12126,
									"end": 12162,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 11978,
									"end": 12169,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 11978,
									"end": 12169,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 11978,
									"end": 12169,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11978,
									"end": 12169,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 11978,
									"end": 12169,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 12175,
									"end": 12617,
									"name": "tag",
									"source": 20,
									"value": "61"
								},
								{
									"begin": 12175,
									"end": 12617,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 12324,
									"end": 12328,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 12362,
									"end": 12364,
									"name": "PUSH",
									"source": 20,
									"value": "60"
								},
								{
									"begin": 12351,
									"end": 12360,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 12347,
									"end": 12365,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 12339,
									"end": 12365,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 12339,
									"end": 12365,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12375,
									"end": 12446,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "248"
								},
								{
									"begin": 12443,
									"end": 12444,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 12432,
									"end": 12441,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 12428,
									"end": 12445,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 12419,
									"end": 12425,
									"name": "DUP7",
									"source": 20
								},
								{
									"begin": 12375,
									"end": 12446,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "95"
								},
								{
									"begin": 12375,
									"end": 12446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 12375,
									"end": 12446,
									"name": "tag",
									"source": 20,
									"value": "248"
								},
								{
									"begin": 12375,
									"end": 12446,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 12456,
									"end": 12528,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "249"
								},
								{
									"begin": 12524,
									"end": 12526,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 12513,
									"end": 12522,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 12509,
									"end": 12527,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 12500,
									"end": 12506,
									"name": "DUP6",
									"source": 20
								},
								{
									"begin": 12456,
									"end": 12528,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "92"
								},
								{
									"begin": 12456,
									"end": 12528,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 12456,
									"end": 12528,
									"name": "tag",
									"source": 20,
									"value": "249"
								},
								{
									"begin": 12456,
									"end": 12528,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 12538,
									"end": 12610,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "250"
								},
								{
									"begin": 12606,
									"end": 12608,
									"name": "PUSH",
									"source": 20,
									"value": "40"
								},
								{
									"begin": 12595,
									"end": 12604,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 12591,
									"end": 12609,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 12582,
									"end": 12588,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 12538,
									"end": 12610,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "92"
								},
								{
									"begin": 12538,
									"end": 12610,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 12538,
									"end": 12610,
									"name": "tag",
									"source": 20,
									"value": "250"
								},
								{
									"begin": 12538,
									"end": 12610,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 12175,
									"end": 12617,
									"name": "SWAP5",
									"source": 20
								},
								{
									"begin": 12175,
									"end": 12617,
									"name": "SWAP4",
									"source": 20
								},
								{
									"begin": 12175,
									"end": 12617,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12175,
									"end": 12617,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12175,
									"end": 12617,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12175,
									"end": 12617,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12175,
									"end": 12617,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 12623,
									"end": 12845,
									"name": "tag",
									"source": 20,
									"value": "65"
								},
								{
									"begin": 12623,
									"end": 12845,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 12716,
									"end": 12720,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 12754,
									"end": 12756,
									"name": "PUSH",
									"source": 20,
									"value": "20"
								},
								{
									"begin": 12743,
									"end": 12752,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 12739,
									"end": 12757,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 12731,
									"end": 12757,
									"name": "SWAP1",
									"source": 20
								},
								{
									"begin": 12731,
									"end": 12757,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12767,
									"end": 12838,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "252"
								},
								{
									"begin": 12835,
									"end": 12836,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 12824,
									"end": 12833,
									"name": "DUP4",
									"source": 20
								},
								{
									"begin": 12820,
									"end": 12837,
									"name": "ADD",
									"source": 20
								},
								{
									"begin": 12811,
									"end": 12817,
									"name": "DUP5",
									"source": 20
								},
								{
									"begin": 12767,
									"end": 12838,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "92"
								},
								{
									"begin": 12767,
									"end": 12838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 12767,
									"end": 12838,
									"name": "tag",
									"source": 20,
									"value": "252"
								},
								{
									"begin": 12767,
									"end": 12838,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 12623,
									"end": 12845,
									"name": "SWAP3",
									"source": 20
								},
								{
									"begin": 12623,
									"end": 12845,
									"name": "SWAP2",
									"source": 20
								},
								{
									"begin": 12623,
									"end": 12845,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12623,
									"end": 12845,
									"name": "POP",
									"source": 20
								},
								{
									"begin": 12623,
									"end": 12845,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 20
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2459"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2456"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2453"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2451"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2449"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2447"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2445"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 1169,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c95646f450bb7adc94c0613beedc8068fe2cd2afd9c27e2a7dfb98f8ed47340464736f6c63430008150033",
									".code": [
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "D505ACCF"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "84B0196E"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "3644E515"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 1169,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2656,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2656,
											"end": 2768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "58"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP8",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 16,
											"value": "58"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1021,
											"end": 1166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1021,
											"end": 1166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1680,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1680,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2722,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2741,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2741,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2741,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2734,
											"end": 2761,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2536,
											"end": 2541,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2523,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2523,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2523,
											"end": 2542,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2523,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2516,
											"end": 2542,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2406,
											"end": 2549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5242,
											"end": 5255,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5287,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 5301,
											"end": 5322,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5336,
											"end": 5351,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5390,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5404,
											"end": 5416,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5457,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "108"
										},
										{
											"begin": 5533,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "109"
										},
										{
											"begin": 5533,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "tag",
											"source": 16,
											"value": "108"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "110"
										},
										{
											"begin": 5560,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "111"
										},
										{
											"begin": 5560,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "tag",
											"source": 16,
											"value": "110"
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5590,
											"end": 5603,
											"name": "CHAINID",
											"source": 16
										},
										{
											"begin": 5625,
											"end": 5629,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 5652,
											"end": 5653,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5654,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5654,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 5682,
											"end": 5683,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "112"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "113"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 5668,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 16,
											"value": "113"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 16,
											"value": "112"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "115"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "CALLDATACOPY",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 16,
											"value": "115"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "PUSH",
											"source": 16,
											"value": "F00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 933,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 933,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 933,
											"end": 938,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 933,
											"end": 938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 933,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 933,
											"end": 938,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 933,
											"end": 938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 933,
											"end": 938,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 933,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 933,
											"end": 938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 919,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 919,
											"end": 938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 919,
											"end": 929,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 919,
											"end": 938,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 919,
											"end": 938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 919,
											"end": 938,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 915,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 971,
											"end": 981,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 962,
											"end": 982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 982,
											"name": "PUSH",
											"source": 0,
											"value": "245AECD300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 962,
											"end": 982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 962,
											"end": 982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 962,
											"end": 982,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 962,
											"end": 982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 962,
											"end": 982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 962,
											"end": 982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 962,
											"end": 982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 962,
											"end": 982,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 962,
											"end": 982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 962,
											"end": 982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 962,
											"end": 982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 962,
											"end": 982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 962,
											"end": 982,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 962,
											"end": 982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 962,
											"end": 982,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 915,
											"end": 994,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 915,
											"end": 994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1085,
											"end": 1095,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1104,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1079,
											"end": 1105,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1079,
											"end": 1105,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1079,
											"end": 1105,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5F7666687319B40936F33C188908D86AEA154ABD3F4127B4FA0A3F04F303C7DA"
										},
										{
											"begin": 1133,
											"end": 1140,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1157,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1158,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1121,
											"end": 1158,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1158,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1158,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1121,
											"end": 1158,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1158,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1121,
											"end": 1158,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1158,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1158,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1158,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1158,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1158,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1158,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1909,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1883,
											"end": 1898,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1883,
											"end": 1909,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1956,
											"end": 1964,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "6279130200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1932,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1965,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1879,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1986,
											"end": 2004,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1117,
											"name": "PUSH",
											"source": 5,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 2045,
											"end": 2050,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2059,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2066,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2078,
											"end": 2083,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2068,
											"end": 2084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2084,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2068,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2094,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2017,
											"end": 2095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2017,
											"end": 2095,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2096,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1986,
											"end": 2096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1986,
											"end": 2096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2107,
											"end": 2119,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2139,
											"end": 2149,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2122,
											"end": 2150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2122,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2107,
											"end": 2150,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2107,
											"end": 2150,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2175,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2192,
											"end": 2196,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2201,
											"end": 2202,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2205,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2178,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2206,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2178,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2206,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2230,
											"end": 2235,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2235,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2292,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 5,
											"value": "4B800E4600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2258,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2293,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2216,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2323,
											"end": 2328,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2330,
											"end": 2337,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2339,
											"end": 2344,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2314,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2314,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 2352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "tag",
											"source": 16,
											"value": "102"
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3898,
											"end": 3905,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3949,
											"name": "PUSHIMMUTABLE",
											"source": 16,
											"value": "2449"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3929,
											"end": 3933,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3921,
											"end": 3949,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "169"
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3970,
											"end": 3984,
											"name": "PUSHIMMUTABLE",
											"source": 16,
											"value": "2447"
										},
										{
											"begin": 3953,
											"end": 3966,
											"name": "CHAINID",
											"source": 16
										},
										{
											"begin": 3953,
											"end": 3984,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "tag",
											"source": 16,
											"value": "169"
										},
										{
											"begin": 3921,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4007,
											"end": 4029,
											"name": "PUSHIMMUTABLE",
											"source": 16,
											"value": "2445"
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "168"
										},
										{
											"begin": 4000,
											"end": 4029,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "tag",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 3917,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 4067,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "173"
										},
										{
											"begin": 4067,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "tag",
											"source": 16,
											"value": "172"
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4060,
											"end": 4090,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4060,
											"end": 4090,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "tag",
											"source": 16,
											"value": "168"
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3845,
											"end": 4107,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3845,
											"end": 4107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 538,
											"end": 645,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 538,
											"end": 645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 598,
											"end": 605,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 631,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 637,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 638,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 624,
											"end": 638,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 617,
											"end": 638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 617,
											"end": 638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 538,
											"end": 645,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 538,
											"end": 645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 538,
											"end": 645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 538,
											"end": 645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "tag",
											"source": 16,
											"value": "109"
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6067,
											"end": 6080,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 6126,
											"end": 6139,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 6099,
											"end": 6104,
											"name": "PUSHIMMUTABLE",
											"source": 16,
											"value": "2456"
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "177"
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6099,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "tag",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6092,
											"end": 6140,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6092,
											"end": 6140,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6021,
											"end": 6147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "tag",
											"source": 16,
											"value": "111"
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6522,
											"end": 6535,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "179"
										},
										{
											"begin": 6584,
											"end": 6600,
											"name": "PUSH",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 6554,
											"end": 6562,
											"name": "PUSHIMMUTABLE",
											"source": 16,
											"value": "2459"
										},
										{
											"begin": 6554,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "177"
										},
										{
											"begin": 6554,
											"end": 6583,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6554,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "tag",
											"source": 16,
											"value": "179"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6547,
											"end": 6601,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6547,
											"end": 6601,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6473,
											"end": 6608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 819,
											"end": 826,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1128,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1134,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1135,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1137,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1114,
											"end": 1137,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1114,
											"end": 1137,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 759,
											"end": 1154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 759,
											"end": 1154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "tag",
											"source": 16,
											"value": "142"
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4994,
											"end": 5001,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "186"
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "187"
										},
										{
											"begin": 5053,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "102"
										},
										{
											"begin": 5053,
											"end": 5073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "tag",
											"source": 16,
											"value": "187"
										},
										{
											"begin": 5053,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5075,
											"end": 5085,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5020,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "188"
										},
										{
											"begin": 5020,
											"end": 5086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "tag",
											"source": 16,
											"value": "186"
										},
										{
											"begin": 5020,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5013,
											"end": 5086,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5013,
											"end": 5086,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4917,
											"end": 5093,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4917,
											"end": 5093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "tag",
											"source": 15,
											"value": "144"
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6888,
											"end": 6895,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6908,
											"end": 6925,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6927,
											"end": 6945,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 6978,
											"end": 6982,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6984,
											"end": 6985,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6987,
											"end": 6988,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6990,
											"end": 6991,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6967,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 6967,
											"end": 6992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "tag",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 6967,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6907,
											"end": 6992,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 7014,
											"end": 7019,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7021,
											"end": 7029,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7002,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 7002,
											"end": 7030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "tag",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 7002,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7047,
											"end": 7056,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7040,
											"end": 7056,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6803,
											"end": 7063,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6803,
											"end": 7063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "tag",
											"source": 16,
											"value": "173"
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2174,
											"name": "PUSH",
											"source": 16,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 4226,
											"end": 4237,
											"name": "PUSHIMMUTABLE",
											"source": 16,
											"value": "2451"
										},
										{
											"begin": 4239,
											"end": 4253,
											"name": "PUSHIMMUTABLE",
											"source": 16,
											"value": "2453"
										},
										{
											"begin": 4255,
											"end": 4268,
											"name": "CHAINID",
											"source": 16
										},
										{
											"begin": 4278,
											"end": 4282,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 4204,
											"end": 4284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "tag",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4284,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4194,
											"end": 4285,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 4187,
											"end": 4285,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4187,
											"end": 4285,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4113,
											"end": 4292,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4113,
											"end": 4292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3479,
											"end": 3492,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3532,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3508,
											"end": 3554,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3577,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 3577,
											"end": 3592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3385,
											"end": 3652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "tag",
											"source": 17,
											"value": "188"
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3446,
											"end": 3460,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3559,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3585,
											"end": 3595,
											"name": "PUSH",
											"source": 17,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3580,
											"end": 3583,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3573,
											"end": 3596,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3632,
											"end": 3647,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3625,
											"end": 3629,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 3620,
											"end": 3623,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3616,
											"end": 3630,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3609,
											"end": 3648,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3684,
											"end": 3694,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3677,
											"end": 3681,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 3672,
											"end": 3675,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3668,
											"end": 3682,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3661,
											"end": 3695,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3733,
											"end": 3737,
											"name": "PUSH",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 3728,
											"end": 3731,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3718,
											"end": 3738,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3708,
											"end": 3738,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3708,
											"end": 3738,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3524,
											"end": 3748,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3353,
											"end": 3754,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3353,
											"end": 3754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5266,
											"end": 5273,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5287,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5289,
											"end": 5296,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6265,
											"name": "PUSH",
											"source": 15,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6194,
											"end": 6195,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6186,
											"end": 6196,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6186,
											"end": 6196,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 6186,
											"end": 6265,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6297,
											"end": 6298,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6331,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 6333,
											"end": 6334,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "tag",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6440,
											"end": 6454,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 6467,
											"end": 6471,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6473,
											"end": 6474,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6476,
											"end": 6477,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6479,
											"end": 6480,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 6457,
											"end": 6481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "tag",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "tag",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 6440,
											"end": 6481,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6440,
											"end": 6481,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6513,
											"end": 6514,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6495,
											"end": 6501,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6580,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 6590,
											"end": 6591,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6592,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6582,
											"end": 6592,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "tag",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6662,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6614,
											"end": 6663,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5140,
											"end": 6670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "tag",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7291,
											"end": 7311,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 7282,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7287,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "237"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 7282,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 15,
											"value": "237"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7387,
											"end": 7416,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 7378,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7378,
											"end": 7383,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 7378,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 15,
											"value": "F645EEDF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "tag",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7492,
											"end": 7527,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 7483,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7483,
											"end": 7488,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 7483,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7586,
											"end": 7594,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7578,
											"end": 7595,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7595,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 15,
											"value": "FCE698F700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 7550,
											"end": 7596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "tag",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7626,
											"end": 7656,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 7617,
											"end": 7656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 15,
											"value": "253"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7617,
											"end": 7622,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 7617,
											"end": 7656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 15,
											"value": "256"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 15,
											"value": "255"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7702,
											"end": 7710,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 15,
											"value": "D78BCE0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "46"
										},
										{
											"begin": 7679,
											"end": 7711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "tag",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "tag",
											"source": 15,
											"value": "257"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "tag",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7196,
											"end": 7728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2137,
											"end": 2150,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2162,
											"end": 2173,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 2187,
											"end": 2191,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2176,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 2176,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2313,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 2300,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2280,
											"end": 2314,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2280,
											"end": 2314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2405,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2397,
											"end": 2400,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2390,
											"end": 2406,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2442,
											"end": 2446,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2433,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2426,
											"end": 2440,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2419,
											"end": 2447,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2473,
											"end": 2476,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2078,
											"end": 2483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2623,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 2649,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2688,
											"end": 2692,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2679,
											"end": 2683,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2652,
											"end": 2685,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2685,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2652,
											"end": 2692,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2692,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2715,
											"end": 2717,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2706,
											"end": 2712,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2706,
											"end": 2717,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 12,
											"value": "B3512B0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2793,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 20,
											"value": "267"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 20,
											"value": "268"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 20,
											"value": "269"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 20,
											"value": "309"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "311"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "309"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 20,
											"value": "311"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 20,
											"value": "270"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 20,
											"value": "271"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "314"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "267"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 20,
											"value": "314"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "315"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "268"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 20,
											"value": "315"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "316"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "269"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 20,
											"value": "316"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "317"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "270"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 20,
											"value": "317"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 20,
											"value": "23"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "319"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "271"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 20,
											"value": "319"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 20,
											"value": "275"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 20,
											"value": "276"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "325"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "275"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 20,
											"value": "325"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 20,
											"value": "277"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "327"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "276"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 20,
											"value": "327"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "328"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 20,
											"value": "328"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "330"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "277"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 20,
											"value": "330"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 20,
											"value": "279"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 20,
											"value": "280"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "333"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "279"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 20,
											"value": "333"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "334"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 20,
											"value": "334"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 20,
											"value": "281"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "336"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "280"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 20,
											"value": "336"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 20,
											"value": "26"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "338"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "339"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 20,
											"value": "339"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 20,
											"value": "338"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "340"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 20,
											"value": "340"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "341"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "281"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 20,
											"value": "341"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 20,
											"value": "282"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 20,
											"value": "283"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "344"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "282"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 20,
											"value": "344"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 20,
											"value": "29"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "346"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "283"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 20,
											"value": "346"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 20,
											"value": "284"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "348"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "279"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 20,
											"value": "348"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 20,
											"value": "33"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "350"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "284"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 20,
											"value": "350"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 20,
											"value": "36"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "352"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "353"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 20,
											"value": "353"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 20,
											"value": "352"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "354"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 20,
											"value": "354"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "355"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 20,
											"value": "355"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "356"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "281"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 20,
											"value": "356"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 20,
											"value": "285"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 20,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 20,
											"value": "286"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "285"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 20,
											"value": "359"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 20,
											"value": "42"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "361"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "286"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 20,
											"value": "361"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "tag",
											"source": 20,
											"value": "287"
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4924,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4853,
											"end": 4930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "tag",
											"source": 20,
											"value": "288"
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "364"
										},
										{
											"begin": 5041,
											"end": 5046,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "287"
										},
										{
											"begin": 5023,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "tag",
											"source": 20,
											"value": "364"
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5018,
											"end": 5021,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5011,
											"end": 5048,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4936,
											"end": 5054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "tag",
											"source": 20,
											"value": "46"
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5153,
											"end": 5157,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5189,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "366"
										},
										{
											"begin": 5272,
											"end": 5273,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5270,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5257,
											"end": 5274,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5248,
											"end": 5254,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "288"
										},
										{
											"begin": 5204,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "tag",
											"source": 20,
											"value": "366"
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5060,
											"end": 5282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "tag",
											"source": 20,
											"value": "49"
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5396,
											"end": 5398,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 5384,
											"end": 5393,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5375,
											"end": 5382,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5371,
											"end": 5394,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 5367,
											"end": 5399,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "369"
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 5402,
											"end": 5481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "tag",
											"source": 20,
											"value": "369"
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "tag",
											"source": 20,
											"value": "368"
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5522,
											"end": 5523,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "370"
										},
										{
											"begin": 5592,
											"end": 5599,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5583,
											"end": 5589,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5572,
											"end": 5581,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 5568,
											"end": 5590,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 5547,
											"end": 5600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "tag",
											"source": 20,
											"value": "370"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5537,
											"end": 5600,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5537,
											"end": 5600,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5493,
											"end": 5610,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5288,
											"end": 5617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "tag",
											"source": 20,
											"value": "289"
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5659,
											"end": 5666,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5765,
											"name": "PUSH",
											"source": 20,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5692,
											"end": 5697,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5688,
											"end": 5766,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 5677,
											"end": 5766,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5677,
											"end": 5766,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5623,
											"end": 5772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "tag",
											"source": 20,
											"value": "290"
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "373"
										},
										{
											"begin": 5880,
											"end": 5885,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "289"
										},
										{
											"begin": 5863,
											"end": 5886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "tag",
											"source": 20,
											"value": "373"
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5858,
											"end": 5861,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5851,
											"end": 5887,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5778,
											"end": 5893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "tag",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "375"
										},
										{
											"begin": 6004,
											"end": 6009,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "276"
										},
										{
											"begin": 5986,
											"end": 6010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "tag",
											"source": 20,
											"value": "375"
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5981,
											"end": 5984,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5974,
											"end": 6011,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5899,
											"end": 6017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "tag",
											"source": 20,
											"value": "292"
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6090,
											"end": 6096,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6124,
											"end": 6129,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6118,
											"end": 6130,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6108,
											"end": 6130,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6108,
											"end": 6130,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6023,
											"end": 6137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "tag",
											"source": 20,
											"value": "293"
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6242,
											"end": 6253,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6282,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6271,
											"end": 6274,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6264,
											"end": 6283,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6316,
											"end": 6320,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6311,
											"end": 6314,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6307,
											"end": 6321,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6292,
											"end": 6321,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6292,
											"end": 6321,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6143,
											"end": 6327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "tag",
											"source": 20,
											"value": "294"
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6400,
											"end": 6404,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6426,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6415,
											"end": 6426,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6415,
											"end": 6426,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6453,
											"end": 6457,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6448,
											"end": 6451,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6444,
											"end": 6458,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6436,
											"end": 6458,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6436,
											"end": 6458,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6333,
											"end": 6465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "tag",
											"source": 20,
											"value": "295"
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "380"
										},
										{
											"begin": 6566,
											"end": 6571,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "279"
										},
										{
											"begin": 6548,
											"end": 6572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "tag",
											"source": 20,
											"value": "380"
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6543,
											"end": 6546,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6536,
											"end": 6573,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6471,
											"end": 6579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "tag",
											"source": 20,
											"value": "296"
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6654,
											"end": 6664,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "382"
										},
										{
											"begin": 6717,
											"end": 6720,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6709,
											"end": 6715,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "295"
										},
										{
											"begin": 6675,
											"end": 6721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "tag",
											"source": 20,
											"value": "382"
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6753,
											"end": 6757,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6744,
											"end": 6758,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6730,
											"end": 6758,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6730,
											"end": 6758,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6585,
											"end": 6764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "tag",
											"source": 20,
											"value": "297"
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6840,
											"end": 6844,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6872,
											"end": 6876,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6867,
											"end": 6870,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6863,
											"end": 6877,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6855,
											"end": 6877,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6855,
											"end": 6877,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6770,
											"end": 6883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "tag",
											"source": 20,
											"value": "298"
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7038,
											"end": 7041,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "385"
										},
										{
											"begin": 7115,
											"end": 7120,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "292"
										},
										{
											"begin": 7067,
											"end": 7121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "tag",
											"source": 20,
											"value": "385"
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "386"
										},
										{
											"begin": 7216,
											"end": 7222,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7211,
											"end": 7214,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "293"
										},
										{
											"begin": 7137,
											"end": 7223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "tag",
											"source": 20,
											"value": "386"
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7130,
											"end": 7223,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 7130,
											"end": 7223,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "387"
										},
										{
											"begin": 7297,
											"end": 7302,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "294"
										},
										{
											"begin": 7247,
											"end": 7303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "tag",
											"source": 20,
											"value": "387"
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7326,
											"end": 7333,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 7357,
											"end": 7358,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "tag",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7367,
											"end": 7373,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7364,
											"end": 7365,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7361,
											"end": 7374,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "390"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 7443,
											"end": 7449,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7437,
											"end": 7450,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "391"
										},
										{
											"begin": 7529,
											"end": 7532,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 7514,
											"end": 7527,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "296"
										},
										{
											"begin": 7470,
											"end": 7533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "tag",
											"source": 20,
											"value": "391"
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7463,
											"end": 7533,
											"name": "SWAP8",
											"source": 20
										},
										{
											"begin": 7463,
											"end": 7533,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 7609,
											"end": 7615,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "297"
										},
										{
											"begin": 7556,
											"end": 7616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "tag",
											"source": 20,
											"value": "392"
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7546,
											"end": 7616,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 7546,
											"end": 7616,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7402,
											"end": 7626,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7389,
											"end": 7390,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 7386,
											"end": 7387,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 7382,
											"end": 7391,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 7377,
											"end": 7391,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 7377,
											"end": 7391,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "388"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "tag",
											"source": 20,
											"value": "390"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 7346,
											"end": 7360,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7642,
											"end": 7645,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 7635,
											"end": 7645,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 7635,
											"end": 7645,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6919,
											"end": 7651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "tag",
											"source": 20,
											"value": "59"
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8006,
											"end": 8010,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8044,
											"end": 8047,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 8033,
											"end": 8042,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8029,
											"end": 8048,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8021,
											"end": 8048,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8021,
											"end": 8048,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "394"
										},
										{
											"begin": 8124,
											"end": 8125,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8122,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8109,
											"end": 8126,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8100,
											"end": 8106,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "290"
										},
										{
											"begin": 8058,
											"end": 8127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "tag",
											"source": 20,
											"value": "394"
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8174,
											"end": 8183,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8168,
											"end": 8172,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8164,
											"end": 8184,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8159,
											"end": 8161,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 8148,
											"end": 8157,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8144,
											"end": 8162,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8137,
											"end": 8185,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "395"
										},
										{
											"begin": 8275,
											"end": 8279,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8266,
											"end": 8272,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "271"
										},
										{
											"begin": 8202,
											"end": 8280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "tag",
											"source": 20,
											"value": "395"
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8194,
											"end": 8280,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8194,
											"end": 8280,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8327,
											"end": 8336,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8321,
											"end": 8325,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8317,
											"end": 8337,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8312,
											"end": 8314,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 8301,
											"end": 8310,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8297,
											"end": 8315,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8290,
											"end": 8338,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "396"
										},
										{
											"begin": 8428,
											"end": 8432,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8419,
											"end": 8425,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "271"
										},
										{
											"begin": 8355,
											"end": 8433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "tag",
											"source": 20,
											"value": "396"
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8347,
											"end": 8433,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8347,
											"end": 8433,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "397"
										},
										{
											"begin": 8511,
											"end": 8513,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 8500,
											"end": 8509,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8496,
											"end": 8514,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8487,
											"end": 8493,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "284"
										},
										{
											"begin": 8443,
											"end": 8515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "tag",
											"source": 20,
											"value": "397"
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "398"
										},
										{
											"begin": 8593,
											"end": 8596,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 8582,
											"end": 8591,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8569,
											"end": 8575,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 8525,
											"end": 8598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "tag",
											"source": 20,
											"value": "398"
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "399"
										},
										{
											"begin": 8676,
											"end": 8679,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 8665,
											"end": 8674,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8661,
											"end": 8680,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8652,
											"end": 8658,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "288"
										},
										{
											"begin": 8608,
											"end": 8681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "tag",
											"source": 20,
											"value": "399"
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8729,
											"end": 8738,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8723,
											"end": 8727,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8719,
											"end": 8739,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8713,
											"end": 8716,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 8702,
											"end": 8711,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 8698,
											"end": 8717,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 8691,
											"end": 8740,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "400"
										},
										{
											"begin": 8860,
											"end": 8864,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 8851,
											"end": 8857,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "298"
										},
										{
											"begin": 8757,
											"end": 8865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "tag",
											"source": 20,
											"value": "400"
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8749,
											"end": 8865,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 8749,
											"end": 8865,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "SWAP9",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "SWAP8",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 7657,
											"end": 8872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8878,
											"end": 9207,
											"name": "tag",
											"source": 20,
											"value": "65"
										},
										{
											"begin": 8878,
											"end": 9207,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8937,
											"end": 8943,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 8986,
											"end": 8988,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 8974,
											"end": 8983,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 8965,
											"end": 8972,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 8961,
											"end": 8984,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 8957,
											"end": 8989,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 8954,
											"end": 9073,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 8954,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "402"
										},
										{
											"begin": 8954,
											"end": 9073,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 8992,
											"end": 9071,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "403"
										},
										{
											"begin": 8992,
											"end": 9071,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 8992,
											"end": 9071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 8992,
											"end": 9071,
											"name": "tag",
											"source": 20,
											"value": "403"
										},
										{
											"begin": 8992,
											"end": 9071,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 8954,
											"end": 9073,
											"name": "tag",
											"source": 20,
											"value": "402"
										},
										{
											"begin": 8954,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9112,
											"end": 9113,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9137,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "404"
										},
										{
											"begin": 9182,
											"end": 9189,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 9173,
											"end": 9179,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 9162,
											"end": 9171,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 9158,
											"end": 9180,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 9137,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "281"
										},
										{
											"begin": 9137,
											"end": 9190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9137,
											"end": 9190,
											"name": "tag",
											"source": 20,
											"value": "404"
										},
										{
											"begin": 9137,
											"end": 9190,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9127,
											"end": 9190,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9127,
											"end": 9190,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9083,
											"end": 9200,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8878,
											"end": 9207,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 8878,
											"end": 9207,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 8878,
											"end": 9207,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8878,
											"end": 9207,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 8878,
											"end": 9207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9213,
											"end": 9331,
											"name": "tag",
											"source": 20,
											"value": "299"
										},
										{
											"begin": 9213,
											"end": 9331,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9284,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "406"
										},
										{
											"begin": 9300,
											"end": 9305,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9284,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "285"
										},
										{
											"begin": 9284,
											"end": 9306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9284,
											"end": 9306,
											"name": "tag",
											"source": 20,
											"value": "406"
										},
										{
											"begin": 9284,
											"end": 9306,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9277,
											"end": 9282,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9274,
											"end": 9307,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 9264,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "407"
										},
										{
											"begin": 9264,
											"end": 9325,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9321,
											"end": 9322,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9318,
											"end": 9319,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9311,
											"end": 9323,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 9264,
											"end": 9325,
											"name": "tag",
											"source": 20,
											"value": "407"
										},
										{
											"begin": 9264,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9213,
											"end": 9331,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9213,
											"end": 9331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9337,
											"end": 9472,
											"name": "tag",
											"source": 20,
											"value": "300"
										},
										{
											"begin": 9337,
											"end": 9472,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9381,
											"end": 9386,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9419,
											"end": 9425,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9406,
											"end": 9426,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 9397,
											"end": 9426,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9397,
											"end": 9426,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9435,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "409"
										},
										{
											"begin": 9460,
											"end": 9465,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9435,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "299"
										},
										{
											"begin": 9435,
											"end": 9466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9435,
											"end": 9466,
											"name": "tag",
											"source": 20,
											"value": "409"
										},
										{
											"begin": 9435,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9337,
											"end": 9472,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9337,
											"end": 9472,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9337,
											"end": 9472,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9337,
											"end": 9472,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9337,
											"end": 9472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9478,
											"end": 9600,
											"name": "tag",
											"source": 20,
											"value": "301"
										},
										{
											"begin": 9478,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9551,
											"end": 9575,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "411"
										},
										{
											"begin": 9569,
											"end": 9574,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9551,
											"end": 9575,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "287"
										},
										{
											"begin": 9551,
											"end": 9575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9551,
											"end": 9575,
											"name": "tag",
											"source": 20,
											"value": "411"
										},
										{
											"begin": 9551,
											"end": 9575,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9544,
											"end": 9549,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9541,
											"end": 9576,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 9531,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "412"
										},
										{
											"begin": 9531,
											"end": 9594,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9590,
											"end": 9591,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9587,
											"end": 9588,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9580,
											"end": 9592,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 9531,
											"end": 9594,
											"name": "tag",
											"source": 20,
											"value": "412"
										},
										{
											"begin": 9531,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9478,
											"end": 9600,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9478,
											"end": 9600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9606,
											"end": 9745,
											"name": "tag",
											"source": 20,
											"value": "302"
										},
										{
											"begin": 9606,
											"end": 9745,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9652,
											"end": 9657,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9690,
											"end": 9696,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9677,
											"end": 9697,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 9668,
											"end": 9697,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 9668,
											"end": 9697,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9706,
											"end": 9739,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "414"
										},
										{
											"begin": 9733,
											"end": 9738,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 9706,
											"end": 9739,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "301"
										},
										{
											"begin": 9706,
											"end": 9739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9706,
											"end": 9739,
											"name": "tag",
											"source": 20,
											"value": "414"
										},
										{
											"begin": 9706,
											"end": 9739,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9606,
											"end": 9745,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9606,
											"end": 9745,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9606,
											"end": 9745,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9606,
											"end": 9745,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9606,
											"end": 9745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9751,
											"end": 10950,
											"name": "tag",
											"source": 20,
											"value": "73"
										},
										{
											"begin": 9751,
											"end": 10950,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9862,
											"end": 9868,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9870,
											"end": 9876,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9878,
											"end": 9884,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9886,
											"end": 9892,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9894,
											"end": 9900,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9902,
											"end": 9908,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 9910,
											"end": 9916,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 9959,
											"end": 9962,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 9947,
											"end": 9956,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 9938,
											"end": 9945,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 9934,
											"end": 9957,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 9930,
											"end": 9963,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 9927,
											"end": 10047,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 9927,
											"end": 10047,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "416"
										},
										{
											"begin": 9927,
											"end": 10047,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 9966,
											"end": 10045,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "417"
										},
										{
											"begin": 9966,
											"end": 10045,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 9966,
											"end": 10045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 9966,
											"end": 10045,
											"name": "tag",
											"source": 20,
											"value": "417"
										},
										{
											"begin": 9966,
											"end": 10045,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 9927,
											"end": 10047,
											"name": "tag",
											"source": 20,
											"value": "416"
										},
										{
											"begin": 9927,
											"end": 10047,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10086,
											"end": 10087,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 10111,
											"end": 10164,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "418"
										},
										{
											"begin": 10156,
											"end": 10163,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 10147,
											"end": 10153,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10136,
											"end": 10145,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 10132,
											"end": 10154,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10111,
											"end": 10164,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 10111,
											"end": 10164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10111,
											"end": 10164,
											"name": "tag",
											"source": 20,
											"value": "418"
										},
										{
											"begin": 10111,
											"end": 10164,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10101,
											"end": 10164,
											"name": "SWAP8",
											"source": 20
										},
										{
											"begin": 10101,
											"end": 10164,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10057,
											"end": 10174,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10213,
											"end": 10215,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 10239,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "419"
										},
										{
											"begin": 10284,
											"end": 10291,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 10275,
											"end": 10281,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10264,
											"end": 10273,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 10260,
											"end": 10282,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10239,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 10239,
											"end": 10292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10239,
											"end": 10292,
											"name": "tag",
											"source": 20,
											"value": "419"
										},
										{
											"begin": 10239,
											"end": 10292,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10229,
											"end": 10292,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 10229,
											"end": 10292,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10184,
											"end": 10302,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10341,
											"end": 10343,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 10367,
											"end": 10420,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "420"
										},
										{
											"begin": 10412,
											"end": 10419,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 10403,
											"end": 10409,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10392,
											"end": 10401,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 10388,
											"end": 10410,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10367,
											"end": 10420,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "281"
										},
										{
											"begin": 10367,
											"end": 10420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10367,
											"end": 10420,
											"name": "tag",
											"source": 20,
											"value": "420"
										},
										{
											"begin": 10367,
											"end": 10420,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10357,
											"end": 10420,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 10357,
											"end": 10420,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10312,
											"end": 10430,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10469,
											"end": 10471,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 10495,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "421"
										},
										{
											"begin": 10540,
											"end": 10547,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 10531,
											"end": 10537,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10520,
											"end": 10529,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 10516,
											"end": 10538,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10495,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "281"
										},
										{
											"begin": 10495,
											"end": 10548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10495,
											"end": 10548,
											"name": "tag",
											"source": 20,
											"value": "421"
										},
										{
											"begin": 10495,
											"end": 10548,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10485,
											"end": 10548,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 10485,
											"end": 10548,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10440,
											"end": 10558,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10597,
											"end": 10600,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 10624,
											"end": 10675,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "422"
										},
										{
											"begin": 10667,
											"end": 10674,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 10658,
											"end": 10664,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10647,
											"end": 10656,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 10643,
											"end": 10665,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10675,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "300"
										},
										{
											"begin": 10624,
											"end": 10675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10624,
											"end": 10675,
											"name": "tag",
											"source": 20,
											"value": "422"
										},
										{
											"begin": 10624,
											"end": 10675,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10614,
											"end": 10675,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 10614,
											"end": 10675,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10568,
											"end": 10685,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10724,
											"end": 10727,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 10751,
											"end": 10804,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "423"
										},
										{
											"begin": 10796,
											"end": 10803,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 10787,
											"end": 10793,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10776,
											"end": 10785,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 10772,
											"end": 10794,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10751,
											"end": 10804,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "302"
										},
										{
											"begin": 10751,
											"end": 10804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10751,
											"end": 10804,
											"name": "tag",
											"source": 20,
											"value": "423"
										},
										{
											"begin": 10751,
											"end": 10804,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10741,
											"end": 10804,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 10741,
											"end": 10804,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10695,
											"end": 10814,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10853,
											"end": 10856,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 10880,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "424"
										},
										{
											"begin": 10925,
											"end": 10932,
											"name": "DUP11",
											"source": 20
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 10905,
											"end": 10914,
											"name": "DUP12",
											"source": 20
										},
										{
											"begin": 10901,
											"end": 10923,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 10880,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "302"
										},
										{
											"begin": 10880,
											"end": 10933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10880,
											"end": 10933,
											"name": "tag",
											"source": 20,
											"value": "424"
										},
										{
											"begin": 10880,
											"end": 10933,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 10870,
											"end": 10933,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 10870,
											"end": 10933,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10824,
											"end": 10943,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9751,
											"end": 10950,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9751,
											"end": 10950,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 9751,
											"end": 10950,
											"name": "SWAP9",
											"source": 20
										},
										{
											"begin": 9751,
											"end": 10950,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 9751,
											"end": 10950,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 9751,
											"end": 10950,
											"name": "SWAP8",
											"source": 20
										},
										{
											"begin": 9751,
											"end": 10950,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9751,
											"end": 10950,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 9751,
											"end": 10950,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 9751,
											"end": 10950,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 9751,
											"end": 10950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 10956,
											"end": 11430,
											"name": "tag",
											"source": 20,
											"value": "77"
										},
										{
											"begin": 10956,
											"end": 11430,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11024,
											"end": 11030,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11032,
											"end": 11038,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 11081,
											"end": 11083,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 11069,
											"end": 11078,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 11060,
											"end": 11067,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 11056,
											"end": 11079,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 11052,
											"end": 11084,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 11049,
											"end": 11168,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 11049,
											"end": 11168,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "426"
										},
										{
											"begin": 11049,
											"end": 11168,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 11087,
											"end": 11166,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "427"
										},
										{
											"begin": 11087,
											"end": 11166,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "273"
										},
										{
											"begin": 11087,
											"end": 11166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11087,
											"end": 11166,
											"name": "tag",
											"source": 20,
											"value": "427"
										},
										{
											"begin": 11087,
											"end": 11166,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11049,
											"end": 11168,
											"name": "tag",
											"source": 20,
											"value": "426"
										},
										{
											"begin": 11049,
											"end": 11168,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11207,
											"end": 11208,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11232,
											"end": 11285,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "428"
										},
										{
											"begin": 11277,
											"end": 11284,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 11268,
											"end": 11274,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11257,
											"end": 11266,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 11253,
											"end": 11275,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11232,
											"end": 11285,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 11232,
											"end": 11285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11232,
											"end": 11285,
											"name": "tag",
											"source": 20,
											"value": "428"
										},
										{
											"begin": 11232,
											"end": 11285,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11222,
											"end": 11285,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 11222,
											"end": 11285,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11178,
											"end": 11295,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11334,
											"end": 11336,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 11360,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "429"
										},
										{
											"begin": 11405,
											"end": 11412,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 11396,
											"end": 11402,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11385,
											"end": 11394,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 11381,
											"end": 11403,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 11360,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "278"
										},
										{
											"begin": 11360,
											"end": 11413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11360,
											"end": 11413,
											"name": "tag",
											"source": 20,
											"value": "429"
										},
										{
											"begin": 11360,
											"end": 11413,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11350,
											"end": 11413,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11350,
											"end": 11413,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11305,
											"end": 11423,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10956,
											"end": 11430,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 10956,
											"end": 11430,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10956,
											"end": 11430,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 10956,
											"end": 11430,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 10956,
											"end": 11430,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 10956,
											"end": 11430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11436,
											"end": 11616,
											"name": "tag",
											"source": 20,
											"value": "303"
										},
										{
											"begin": 11436,
											"end": 11616,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11484,
											"end": 11561,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11481,
											"end": 11482,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11474,
											"end": 11562,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11581,
											"end": 11585,
											"name": "PUSH",
											"source": 20,
											"value": "22"
										},
										{
											"begin": 11578,
											"end": 11579,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 11605,
											"end": 11609,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 11602,
											"end": 11603,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11595,
											"end": 11610,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 11622,
											"end": 11942,
											"name": "tag",
											"source": 20,
											"value": "82"
										},
										{
											"begin": 11622,
											"end": 11942,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11666,
											"end": 11672,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11703,
											"end": 11704,
											"name": "PUSH",
											"source": 20,
											"value": "2"
										},
										{
											"begin": 11697,
											"end": 11701,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11693,
											"end": 11705,
											"name": "DIV",
											"source": 20
										},
										{
											"begin": 11683,
											"end": 11705,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11683,
											"end": 11705,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11750,
											"end": 11751,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 11744,
											"end": 11748,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11740,
											"end": 11752,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 11771,
											"end": 11789,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 11761,
											"end": 11842,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "432"
										},
										{
											"begin": 11761,
											"end": 11842,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 11827,
											"end": 11831,
											"name": "PUSH",
											"source": 20,
											"value": "7F"
										},
										{
											"begin": 11819,
											"end": 11825,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11815,
											"end": 11832,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 11805,
											"end": 11832,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11805,
											"end": 11832,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11761,
											"end": 11842,
											"name": "tag",
											"source": 20,
											"value": "432"
										},
										{
											"begin": 11761,
											"end": 11842,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11889,
											"end": 11891,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 11881,
											"end": 11887,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 11878,
											"end": 11892,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 11858,
											"end": 11876,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 11855,
											"end": 11893,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 11852,
											"end": 11936,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "433"
										},
										{
											"begin": 11852,
											"end": 11936,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 11908,
											"end": 11926,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "434"
										},
										{
											"begin": 11908,
											"end": 11926,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "303"
										},
										{
											"begin": 11908,
											"end": 11926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11908,
											"end": 11926,
											"name": "tag",
											"source": 20,
											"value": "434"
										},
										{
											"begin": 11908,
											"end": 11926,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11852,
											"end": 11936,
											"name": "tag",
											"source": 20,
											"value": "433"
										},
										{
											"begin": 11852,
											"end": 11936,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11673,
											"end": 11942,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11622,
											"end": 11942,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 11622,
											"end": 11942,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 11622,
											"end": 11942,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 11622,
											"end": 11942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 11948,
											"end": 12128,
											"name": "tag",
											"source": 20,
											"value": "114"
										},
										{
											"begin": 11948,
											"end": 12128,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 11996,
											"end": 12073,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11993,
											"end": 11994,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 11986,
											"end": 12074,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12093,
											"end": 12097,
											"name": "PUSH",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 12090,
											"end": 12091,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 12083,
											"end": 12098,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 12117,
											"end": 12121,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 12114,
											"end": 12115,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12107,
											"end": 12122,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 12134,
											"end": 12356,
											"name": "tag",
											"source": 20,
											"value": "125"
										},
										{
											"begin": 12134,
											"end": 12356,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12227,
											"end": 12231,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12265,
											"end": 12267,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 12254,
											"end": 12263,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12250,
											"end": 12268,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12242,
											"end": 12268,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12242,
											"end": 12268,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12278,
											"end": 12349,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "437"
										},
										{
											"begin": 12346,
											"end": 12347,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12335,
											"end": 12344,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 12331,
											"end": 12348,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12322,
											"end": 12328,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 12278,
											"end": 12349,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 12278,
											"end": 12349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12278,
											"end": 12349,
											"name": "tag",
											"source": 20,
											"value": "437"
										},
										{
											"begin": 12278,
											"end": 12349,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12134,
											"end": 12356,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 12134,
											"end": 12356,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 12134,
											"end": 12356,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12134,
											"end": 12356,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12134,
											"end": 12356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12362,
											"end": 12694,
											"name": "tag",
											"source": 20,
											"value": "130"
										},
										{
											"begin": 12362,
											"end": 12694,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12483,
											"end": 12487,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12521,
											"end": 12523,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 12510,
											"end": 12519,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12506,
											"end": 12524,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12498,
											"end": 12524,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12498,
											"end": 12524,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12534,
											"end": 12605,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "439"
										},
										{
											"begin": 12602,
											"end": 12603,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12591,
											"end": 12600,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 12587,
											"end": 12604,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12578,
											"end": 12584,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 12534,
											"end": 12605,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "284"
										},
										{
											"begin": 12534,
											"end": 12605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12534,
											"end": 12605,
											"name": "tag",
											"source": 20,
											"value": "439"
										},
										{
											"begin": 12534,
											"end": 12605,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12615,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "440"
										},
										{
											"begin": 12683,
											"end": 12685,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 12672,
											"end": 12681,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 12668,
											"end": 12686,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12659,
											"end": 12665,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 12615,
											"end": 12687,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "284"
										},
										{
											"begin": 12615,
											"end": 12687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12615,
											"end": 12687,
											"name": "tag",
											"source": 20,
											"value": "440"
										},
										{
											"begin": 12615,
											"end": 12687,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12362,
											"end": 12694,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 12362,
											"end": 12694,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 12362,
											"end": 12694,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12362,
											"end": 12694,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12362,
											"end": 12694,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12362,
											"end": 12694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12700,
											"end": 13475,
											"name": "tag",
											"source": 20,
											"value": "140"
										},
										{
											"begin": 12700,
											"end": 13475,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12933,
											"end": 12937,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 12971,
											"end": 12974,
											"name": "PUSH",
											"source": 20,
											"value": "C0"
										},
										{
											"begin": 12960,
											"end": 12969,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 12956,
											"end": 12975,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 12948,
											"end": 12975,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 12948,
											"end": 12975,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12985,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "442"
										},
										{
											"begin": 13053,
											"end": 13054,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13042,
											"end": 13051,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13038,
											"end": 13055,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13029,
											"end": 13035,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 12985,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "288"
										},
										{
											"begin": 12985,
											"end": 13056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 12985,
											"end": 13056,
											"name": "tag",
											"source": 20,
											"value": "442"
										},
										{
											"begin": 12985,
											"end": 13056,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13066,
											"end": 13138,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "443"
										},
										{
											"begin": 13134,
											"end": 13136,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 13123,
											"end": 13132,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13119,
											"end": 13137,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13110,
											"end": 13116,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 13066,
											"end": 13138,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 13066,
											"end": 13138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13066,
											"end": 13138,
											"name": "tag",
											"source": 20,
											"value": "443"
										},
										{
											"begin": 13066,
											"end": 13138,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13148,
											"end": 13220,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "444"
										},
										{
											"begin": 13216,
											"end": 13218,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 13205,
											"end": 13214,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13201,
											"end": 13219,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13192,
											"end": 13198,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 13148,
											"end": 13220,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 13148,
											"end": 13220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13148,
											"end": 13220,
											"name": "tag",
											"source": 20,
											"value": "444"
										},
										{
											"begin": 13148,
											"end": 13220,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13230,
											"end": 13302,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "445"
										},
										{
											"begin": 13298,
											"end": 13300,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 13287,
											"end": 13296,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13283,
											"end": 13301,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13274,
											"end": 13280,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 13230,
											"end": 13302,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "284"
										},
										{
											"begin": 13230,
											"end": 13302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13230,
											"end": 13302,
											"name": "tag",
											"source": 20,
											"value": "445"
										},
										{
											"begin": 13230,
											"end": 13302,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13312,
											"end": 13385,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "446"
										},
										{
											"begin": 13380,
											"end": 13383,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 13369,
											"end": 13378,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13365,
											"end": 13384,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13356,
											"end": 13362,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 13312,
											"end": 13385,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "284"
										},
										{
											"begin": 13312,
											"end": 13385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13312,
											"end": 13385,
											"name": "tag",
											"source": 20,
											"value": "446"
										},
										{
											"begin": 13312,
											"end": 13385,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13395,
											"end": 13468,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "447"
										},
										{
											"begin": 13463,
											"end": 13466,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 13452,
											"end": 13461,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13448,
											"end": 13467,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13439,
											"end": 13445,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 13395,
											"end": 13468,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "284"
										},
										{
											"begin": 13395,
											"end": 13468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13395,
											"end": 13468,
											"name": "tag",
											"source": 20,
											"value": "447"
										},
										{
											"begin": 13395,
											"end": 13468,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 12700,
											"end": 13475,
											"name": "SWAP8",
											"source": 20
										},
										{
											"begin": 12700,
											"end": 13475,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 12700,
											"end": 13475,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12700,
											"end": 13475,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12700,
											"end": 13475,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12700,
											"end": 13475,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12700,
											"end": 13475,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12700,
											"end": 13475,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12700,
											"end": 13475,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 12700,
											"end": 13475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13481,
											"end": 13813,
											"name": "tag",
											"source": 20,
											"value": "147"
										},
										{
											"begin": 13481,
											"end": 13813,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13602,
											"end": 13606,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13640,
											"end": 13642,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 13629,
											"end": 13638,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13625,
											"end": 13643,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13617,
											"end": 13643,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13617,
											"end": 13643,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13653,
											"end": 13724,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "449"
										},
										{
											"begin": 13721,
											"end": 13722,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 13710,
											"end": 13719,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13706,
											"end": 13723,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13697,
											"end": 13703,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 13653,
											"end": 13724,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 13653,
											"end": 13724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13653,
											"end": 13724,
											"name": "tag",
											"source": 20,
											"value": "449"
										},
										{
											"begin": 13653,
											"end": 13724,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13734,
											"end": 13806,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "450"
										},
										{
											"begin": 13802,
											"end": 13804,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 13791,
											"end": 13800,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 13787,
											"end": 13805,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13778,
											"end": 13784,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 13734,
											"end": 13806,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 13734,
											"end": 13806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13734,
											"end": 13806,
											"name": "tag",
											"source": 20,
											"value": "450"
										},
										{
											"begin": 13734,
											"end": 13806,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13481,
											"end": 13813,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 13481,
											"end": 13813,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 13481,
											"end": 13813,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13481,
											"end": 13813,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13481,
											"end": 13813,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13481,
											"end": 13813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 13819,
											"end": 14261,
											"name": "tag",
											"source": 20,
											"value": "159"
										},
										{
											"begin": 13819,
											"end": 14261,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13968,
											"end": 13972,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14006,
											"end": 14008,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 13995,
											"end": 14004,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 13991,
											"end": 14009,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 13983,
											"end": 14009,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 13983,
											"end": 14009,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14019,
											"end": 14090,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "452"
										},
										{
											"begin": 14087,
											"end": 14088,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14076,
											"end": 14085,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 14072,
											"end": 14089,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14063,
											"end": 14069,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 14019,
											"end": 14090,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 14019,
											"end": 14090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14019,
											"end": 14090,
											"name": "tag",
											"source": 20,
											"value": "452"
										},
										{
											"begin": 14019,
											"end": 14090,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14100,
											"end": 14172,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "453"
										},
										{
											"begin": 14168,
											"end": 14170,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 14157,
											"end": 14166,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 14153,
											"end": 14171,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14144,
											"end": 14150,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 14100,
											"end": 14172,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "284"
										},
										{
											"begin": 14100,
											"end": 14172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14100,
											"end": 14172,
											"name": "tag",
											"source": 20,
											"value": "453"
										},
										{
											"begin": 14100,
											"end": 14172,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14182,
											"end": 14254,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "454"
										},
										{
											"begin": 14250,
											"end": 14252,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 14239,
											"end": 14248,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 14235,
											"end": 14253,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14226,
											"end": 14232,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 14182,
											"end": 14254,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "284"
										},
										{
											"begin": 14182,
											"end": 14254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14182,
											"end": 14254,
											"name": "tag",
											"source": 20,
											"value": "454"
										},
										{
											"begin": 14182,
											"end": 14254,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 13819,
											"end": 14261,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 13819,
											"end": 14261,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 13819,
											"end": 14261,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13819,
											"end": 14261,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13819,
											"end": 14261,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13819,
											"end": 14261,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 13819,
											"end": 14261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14267,
											"end": 14447,
											"name": "tag",
											"source": 20,
											"value": "304"
										},
										{
											"begin": 14267,
											"end": 14447,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14315,
											"end": 14392,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14312,
											"end": 14313,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14305,
											"end": 14393,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 14412,
											"end": 14416,
											"name": "PUSH",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 14409,
											"end": 14410,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 14402,
											"end": 14417,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 14436,
											"end": 14440,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 14433,
											"end": 14434,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14426,
											"end": 14441,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 14453,
											"end": 14644,
											"name": "tag",
											"source": 20,
											"value": "204"
										},
										{
											"begin": 14453,
											"end": 14644,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14493,
											"end": 14496,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14512,
											"end": 14532,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "457"
										},
										{
											"begin": 14530,
											"end": 14531,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14512,
											"end": 14532,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "279"
										},
										{
											"begin": 14512,
											"end": 14532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14512,
											"end": 14532,
											"name": "tag",
											"source": 20,
											"value": "457"
										},
										{
											"begin": 14512,
											"end": 14532,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14507,
											"end": 14532,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14507,
											"end": 14532,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14546,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "458"
										},
										{
											"begin": 14564,
											"end": 14565,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 14546,
											"end": 14566,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "279"
										},
										{
											"begin": 14546,
											"end": 14566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14546,
											"end": 14566,
											"name": "tag",
											"source": 20,
											"value": "458"
										},
										{
											"begin": 14546,
											"end": 14566,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14541,
											"end": 14566,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 14541,
											"end": 14566,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14589,
											"end": 14590,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14586,
											"end": 14587,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14582,
											"end": 14591,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14575,
											"end": 14591,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14575,
											"end": 14591,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14610,
											"end": 14613,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 14607,
											"end": 14608,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14604,
											"end": 14614,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 14601,
											"end": 14637,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 14601,
											"end": 14637,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "459"
										},
										{
											"begin": 14601,
											"end": 14637,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 14617,
											"end": 14635,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "460"
										},
										{
											"begin": 14617,
											"end": 14635,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "304"
										},
										{
											"begin": 14617,
											"end": 14635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14617,
											"end": 14635,
											"name": "tag",
											"source": 20,
											"value": "460"
										},
										{
											"begin": 14617,
											"end": 14635,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14601,
											"end": 14637,
											"name": "tag",
											"source": 20,
											"value": "459"
										},
										{
											"begin": 14601,
											"end": 14637,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14453,
											"end": 14644,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 14453,
											"end": 14644,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 14453,
											"end": 14644,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14453,
											"end": 14644,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14453,
											"end": 14644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14650,
											"end": 15314,
											"name": "tag",
											"source": 20,
											"value": "213"
										},
										{
											"begin": 14650,
											"end": 15314,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14855,
											"end": 14859,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14896,
											"name": "PUSH",
											"source": 20,
											"value": "A0"
										},
										{
											"begin": 14882,
											"end": 14891,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 14878,
											"end": 14897,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14870,
											"end": 14897,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 14870,
											"end": 14897,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14907,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "462"
										},
										{
											"begin": 14975,
											"end": 14976,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 14964,
											"end": 14973,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 14960,
											"end": 14977,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 14951,
											"end": 14957,
											"name": "DUP9",
											"source": 20
										},
										{
											"begin": 14907,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "288"
										},
										{
											"begin": 14907,
											"end": 14978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14907,
											"end": 14978,
											"name": "tag",
											"source": 20,
											"value": "462"
										},
										{
											"begin": 14907,
											"end": 14978,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14988,
											"end": 15060,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "463"
										},
										{
											"begin": 15056,
											"end": 15058,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 15045,
											"end": 15054,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15041,
											"end": 15059,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15032,
											"end": 15038,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 14988,
											"end": 15060,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "288"
										},
										{
											"begin": 14988,
											"end": 15060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 14988,
											"end": 15060,
											"name": "tag",
											"source": 20,
											"value": "463"
										},
										{
											"begin": 14988,
											"end": 15060,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15070,
											"end": 15142,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "464"
										},
										{
											"begin": 15138,
											"end": 15140,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 15127,
											"end": 15136,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15123,
											"end": 15141,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15114,
											"end": 15120,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 15070,
											"end": 15142,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "288"
										},
										{
											"begin": 15070,
											"end": 15142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15070,
											"end": 15142,
											"name": "tag",
											"source": 20,
											"value": "464"
										},
										{
											"begin": 15070,
											"end": 15142,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15152,
											"end": 15224,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "465"
										},
										{
											"begin": 15220,
											"end": 15222,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 15209,
											"end": 15218,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15205,
											"end": 15223,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15196,
											"end": 15202,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 15152,
											"end": 15224,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "284"
										},
										{
											"begin": 15152,
											"end": 15224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15152,
											"end": 15224,
											"name": "tag",
											"source": 20,
											"value": "465"
										},
										{
											"begin": 15152,
											"end": 15224,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15234,
											"end": 15307,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "466"
										},
										{
											"begin": 15302,
											"end": 15305,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 15291,
											"end": 15300,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15287,
											"end": 15306,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15278,
											"end": 15284,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 15234,
											"end": 15307,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "291"
										},
										{
											"begin": 15234,
											"end": 15307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15234,
											"end": 15307,
											"name": "tag",
											"source": 20,
											"value": "466"
										},
										{
											"begin": 15234,
											"end": 15307,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 14650,
											"end": 15314,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": 14650,
											"end": 15314,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 14650,
											"end": 15314,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14650,
											"end": 15314,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14650,
											"end": 15314,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14650,
											"end": 15314,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14650,
											"end": 15314,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14650,
											"end": 15314,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 14650,
											"end": 15314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15320,
											"end": 15865,
											"name": "tag",
											"source": 20,
											"value": "228"
										},
										{
											"begin": 15320,
											"end": 15865,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15493,
											"end": 15497,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15531,
											"end": 15534,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 15520,
											"end": 15529,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 15516,
											"end": 15535,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15508,
											"end": 15535,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 15508,
											"end": 15535,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15545,
											"end": 15616,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "468"
										},
										{
											"begin": 15613,
											"end": 15614,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15602,
											"end": 15611,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15598,
											"end": 15615,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15589,
											"end": 15595,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 15545,
											"end": 15616,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "288"
										},
										{
											"begin": 15545,
											"end": 15616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15545,
											"end": 15616,
											"name": "tag",
											"source": 20,
											"value": "468"
										},
										{
											"begin": 15545,
											"end": 15616,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15626,
											"end": 15694,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "469"
										},
										{
											"begin": 15690,
											"end": 15692,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 15679,
											"end": 15688,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15675,
											"end": 15693,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15666,
											"end": 15672,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 15626,
											"end": 15694,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "286"
										},
										{
											"begin": 15626,
											"end": 15694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15626,
											"end": 15694,
											"name": "tag",
											"source": 20,
											"value": "469"
										},
										{
											"begin": 15626,
											"end": 15694,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15704,
											"end": 15776,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "470"
										},
										{
											"begin": 15772,
											"end": 15774,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 15761,
											"end": 15770,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15757,
											"end": 15775,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15748,
											"end": 15754,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 15704,
											"end": 15776,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "288"
										},
										{
											"begin": 15704,
											"end": 15776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15704,
											"end": 15776,
											"name": "tag",
											"source": 20,
											"value": "470"
										},
										{
											"begin": 15704,
											"end": 15776,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15786,
											"end": 15858,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "471"
										},
										{
											"begin": 15854,
											"end": 15856,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 15843,
											"end": 15852,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 15839,
											"end": 15857,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 15830,
											"end": 15836,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 15786,
											"end": 15858,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "288"
										},
										{
											"begin": 15786,
											"end": 15858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15786,
											"end": 15858,
											"name": "tag",
											"source": 20,
											"value": "471"
										},
										{
											"begin": 15786,
											"end": 15858,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15320,
											"end": 15865,
											"name": "SWAP6",
											"source": 20
										},
										{
											"begin": 15320,
											"end": 15865,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 15320,
											"end": 15865,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15320,
											"end": 15865,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15320,
											"end": 15865,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15320,
											"end": 15865,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15320,
											"end": 15865,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 15320,
											"end": 15865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 15871,
											"end": 16051,
											"name": "tag",
											"source": 20,
											"value": "235"
										},
										{
											"begin": 15871,
											"end": 16051,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 15919,
											"end": 15996,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15916,
											"end": 15917,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 15909,
											"end": 15997,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 16016,
											"end": 16020,
											"name": "PUSH",
											"source": 20,
											"value": "21"
										},
										{
											"begin": 16013,
											"end": 16014,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 16006,
											"end": 16021,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 16040,
											"end": 16044,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 16037,
											"end": 16038,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 16030,
											"end": 16045,
											"name": "REVERT",
											"source": 20
										}
									]
								}
							},
							"sourceList": [
								"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TokenMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":\"ERC20TokenGTT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":{\"keccak256\":\"0xf5c44cd16f5a1d643f18829d9403bbf1752a770f9838b79c2b3d63e6f4303e7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://456b1632f04b8fc5889b9fb79e532e4e477c20557e9ea844b427aac35a4bd931\",\"dweb:/ipfs/QmT44L8GTm7fcGLLvfMzhqoRgZQf6WAXtUe3qbGiDue3Wv\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 288,
								"contract": "04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol:ERC20TokenGTT",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 294,
								"contract": "04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol:ERC20TokenGTT",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 296,
								"contract": "04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol:ERC20TokenGTT",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 298,
								"contract": "04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol:ERC20TokenGTT",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 300,
								"contract": "04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol:ERC20TokenGTT",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2461,
								"contract": "04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol:ERC20TokenGTT",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 2463,
								"contract": "04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol:ERC20TokenGTT",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1371,
								"contract": "04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol:ERC20TokenGTT",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1436,
								"contract": "04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol:ERC20TokenGTT",
								"label": "_status",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 26,
								"contract": "04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol:ERC20TokenGTT",
								"label": "owner",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TokenRecipient": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "tokensReceived",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"tokensReceived(address,uint256)": "24a756d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"tokensReceived\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":\"TokenRecipient\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol\":{\"keccak256\":\"0xf5c44cd16f5a1d643f18829d9403bbf1752a770f9838b79c2b3d63e6f4303e7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://456b1632f04b8fc5889b9fb79e532e4e477c20557e9ea844b427aac35a4bd931\",\"dweb:/ipfs/QmT44L8GTm7fcGLLvfMzhqoRgZQf6WAXtUe3qbGiDue3Wv\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 288,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 294,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 296,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 298,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 300,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol": {
				"ERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 288,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 294,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 296,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 298,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 300,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 2461,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 2463,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1371,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bdcbe0d35aee9e5c6bfe9a2ed00df4bd9be9cda43838df67716e3ef70019a5c464736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bdcbe0d35aee9e5c6bfe9a2ed00df4bd9be9cda43838df67716e3ef70019a5c464736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xCB 0xE0 0xD3 GAS 0xEE SWAP15 0x5C PUSH12 0xFE9A2ED00DF4BD9BE9CDA438 CODESIZE 0xDF PUSH8 0x716E3EF70019A5C4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "195:6066:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bdcbe0d35aee9e5c6bfe9a2ed00df4bd9be9cda43838df67716e3ef70019a5c464736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xCB 0xE0 0xD3 GAS 0xEE SWAP15 0x5C PUSH12 0xFE9A2ED00DF4BD9BE9CDA438 CODESIZE 0xDF PUSH8 0x716E3EF70019A5C4 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "195:6066:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bdcbe0d35aee9e5c6bfe9a2ed00df4bd9be9cda43838df67716e3ef70019a5c464736f6c63430008150033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Nonces.sol": {
				"Nonces": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Provides tracking nonces for addresses. Nonces will only increment.",
						"errors": {
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the next unused nonce for an address."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1371,
								"contract": "@openzeppelin/contracts/utils/Nonces.sol:Nonces",
								"label": "_nonces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1436,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201b36b13f0b0e71cc107af824a461d0236699563c105aa8568878382d462584fb64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201b36b13f0b0e71cc107af824a461d0236699563c105aa8568878382d462584fb64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL CALLDATASIZE 0xB1 EXTCODEHASH SIGNEXTEND 0xE PUSH18 0xCC107AF824A461D0236699563C105AA85688 PUSH25 0x382D462584FB64736F6C634300081500330000000000000000 ",
							"sourceMap": "1255:3053:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201b36b13f0b0e71cc107af824a461d0236699563c105aa8568878382d462584fb64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL CALLDATASIZE 0xB1 EXTCODEHASH SIGNEXTEND 0xE PUSH18 0xCC107AF824A461D0236699563C105AA85688 PUSH25 0x382D462584FB64736F6C634300081500330000000000000000 ",
							"sourceMap": "1255:3053:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201b36b13f0b0e71cc107af824a461d0236699563c105aa8568878382d462584fb64736f6c63430008150033",
									".code": [
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a620337292f0bb5feb484dd266e51e0e52c5d8f56d6eb98d961d6b066c245c8d64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a620337292f0bb5feb484dd266e51e0e52c5d8f56d6eb98d961d6b066c245c8d64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 KECCAK256 CALLER PUSH19 0x92F0BB5FEB484DD266E51E0E52C5D8F56D6EB9 DUP14 SWAP7 SAR PUSH12 0x66C245C8D64736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "1245:2685:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a620337292f0bb5feb484dd266e51e0e52c5d8f56d6eb98d961d6b066c245c8d64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 KECCAK256 CALLER PUSH19 0x92F0BB5FEB484DD266E51E0E52C5D8F56D6EB9 DUP14 SWAP7 SAR PUSH12 0x66C245C8D64736F6C634300 ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "1245:2685:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a620337292f0bb5feb484dd266e51e0e52c5d8f56d6eb98d961d6b066c245c8d64736f6c63430008150033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220010205939a62c62dc0b628c3072869febcdb2aa598c59ca1b6929b5cf0a0202d64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220010205939a62c62dc0b628c3072869febcdb2aa598c59ca1b6929b5cf0a0202d64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD MUL SDIV SWAP4 SWAP11 PUSH3 0xC62DC0 0xB6 0x28 0xC3 SMOD 0x28 PUSH10 0xFEBCDB2AA598C59CA1B6 SWAP3 SWAP12 0x5C CREATE LOG0 KECCAK256 0x2D PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "251:2847:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220010205939a62c62dc0b628c3072869febcdb2aa598c59ca1b6929b5cf0a0202d64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD MUL SDIV SWAP4 SWAP11 PUSH3 0xC62DC0 0xB6 0x28 0xC3 SMOD 0x28 PUSH10 0xFEBCDB2AA598C59CA1B6 SWAP3 SWAP12 0x5C CREATE LOG0 KECCAK256 0x2D PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "251:2847:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220010205939a62c62dc0b628c3072869febcdb2aa598c59ca1b6929b5cf0a0202d64736f6c63430008150033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209e68925b77a43a6f8c53a8099d91aed12717b738f94ce0ec51defaddf50dd2ff64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209e68925b77a43a6f8c53a8099d91aed12717b738f94ce0ec51defaddf50dd2ff64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH9 0x925B77A43A6F8C53A8 MULMOD SWAP14 SWAP2 0xAE 0xD1 0x27 OR 0xB7 CODESIZE 0xF9 0x4C 0xE0 0xEC MLOAD 0xDE STATICCALL 0xDD CREATE2 0xD 0xD2 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "344:7386:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209e68925b77a43a6f8c53a8099d91aed12717b738f94ce0ec51defaddf50dd2ff64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH9 0x925B77A43A6F8C53A8 MULMOD SWAP14 SWAP2 0xAE 0xD1 0x27 OR 0xB7 CODESIZE 0xF9 0x4C 0xE0 0xEC MLOAD 0xDE STATICCALL 0xDD CREATE2 0xD 0xD2 SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "344:7386:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e68925b77a43a6f8c53a8099d91aed12717b738f94ce0ec51defaddf50dd2ff64736f6c63430008150033",
									".code": [
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2461,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 2463,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f43072d9ea5f65e62db153d98f62ebebf3f7b663cdda1d19dfc68d0db59c765c64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f43072d9ea5f65e62db153d98f62ebebf3f7b663cdda1d19dfc68d0db59c765c64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL ADDRESS PUSH19 0xD9EA5F65E62DB153D98F62EBEBF3F7B663CDDA SAR NOT 0xDF 0xC6 DUP14 0xD 0xB5 SWAP13 PUSH23 0x5C64736F6C634300081500330000000000000000000000 ",
							"sourceMap": "521:3235:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f43072d9ea5f65e62db153d98f62ebebf3f7b663cdda1d19dfc68d0db59c765c64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL ADDRESS PUSH19 0xD9EA5F65E62DB153D98F62EBEBF3F7B663CDDA SAR NOT 0xDF 0xC6 DUP14 0xD 0xB5 SWAP13 PUSH23 0x5C64736F6C634300081500330000000000000000000000 ",
							"sourceMap": "521:3235:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f43072d9ea5f65e62db153d98f62ebebf3f7b663cdda1d19dfc68d0db59c765c64736f6c63430008150033",
									".code": [
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204b0e20d73e8bec30b08f2c701141d20be1b8e46e019334a391b9d392710131d164736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204b0e20d73e8bec30b08f2c701141d20be1b8e46e019334a391b9d392710131d164736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xE KECCAK256 0xD7 RETURNDATACOPY DUP12 0xEC ADDRESS 0xB0 DUP16 0x2C PUSH17 0x1141D20BE1B8E46E019334A391B9D39271 ADD BALANCE 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "203:14914:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204b0e20d73e8bec30b08f2c701141d20be1b8e46e019334a391b9d392710131d164736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xE KECCAK256 0xD7 RETURNDATACOPY DUP12 0xEC ADDRESS 0xB0 DUP16 0x2C PUSH17 0x1141D20BE1B8E46E019334A391B9D39271 ADD BALANCE 0xD1 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "203:14914:18:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204b0e20d73e8bec30b08f2c701141d20be1b8e46e019334a391b9d392710131d164736f6c63430008150033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200d1eeb36d0aba08fdcff2bdd65c4a46c358e908a223b11b961a14b8a5a2e9c9864736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200d1eeb36d0aba08fdcff2bdd65c4a46c358e908a223b11b961a14b8a5a2e9c9864736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x1E 0xEB CALLDATASIZE 0xD0 0xAB LOG0 DUP16 0xDC SELFDESTRUCT 0x2B 0xDD PUSH6 0xC4A46C358E90 DUP11 0x22 EXTCODESIZE GT 0xB9 PUSH2 0xA14B DUP11 GAS 0x2E SWAP13 SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "216:1047:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200d1eeb36d0aba08fdcff2bdd65c4a46c358e908a223b11b961a14b8a5a2e9c9864736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0x1E 0xEB CALLDATASIZE 0xD0 0xAB LOG0 DUP16 0xDC SELFDESTRUCT 0x2B 0xDD PUSH6 0xC4A46C358E90 DUP11 0x22 EXTCODESIZE GT 0xB9 PUSH2 0xA14B DUP11 GAS 0x2E SWAP13 SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "216:1047:19:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 19,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200d1eeb36d0aba08fdcff2bdd65c4a46c358e908a223b11b961a14b8a5a2e9c9864736f6c63430008150033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Nonces.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol": {
				"ast": {
					"absolutePath": "04-Camps/08-UpChain_Camp_3_OpenSpace/0112_ERC20TokenBank/contracts/ERCTokenGTT.sol",
					"exportedSymbols": {
						"Address": [
							1327
						],
						"Context": [
							1357
						],
						"ECDSA": [
							2424
						],
						"EIP712": [
							2651
						],
						"ERC20": [
							780
						],
						"ERC20Permit": [
							1012
						],
						"ERC20TokenGTT": [
							103
						],
						"IERC20": [
							858
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							1038
						],
						"IERC20Permit": [
							1074
						],
						"Nonces": [
							1425
						],
						"ReentrancyGuard": [
							1494
						],
						"TokenRecipient": [
							15
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 104,
							"sourceUnit": 781,
							"src": "60:55:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 104,
							"sourceUnit": 1013,
							"src": "117:72:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 104,
							"sourceUnit": 1495,
							"src": "191:59:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 104,
							"sourceUnit": 1328,
							"src": "252:51:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TokenRecipient",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 15,
							"linearizedBaseContracts": [
								15
							],
							"name": "TokenRecipient",
							"nameLocation": "317:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "24a756d1",
									"id": 14,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nameLocation": "348:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "371:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "363:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "363:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "384:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "379:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "379:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "362:29:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "410:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 11,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "410:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:6:0"
									},
									"scope": 15,
									"src": "339:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 104,
							"src": "307:112:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 16,
										"name": "ERC20",
										"nameLocations": [
											"449:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 780,
										"src": "449:5:0"
									},
									"id": 17,
									"nodeType": "InheritanceSpecifier",
									"src": "449:5:0"
								},
								{
									"baseName": {
										"id": 18,
										"name": "ERC20Permit",
										"nameLocations": [
											"456:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1012,
										"src": "456:11:0"
									},
									"id": 19,
									"nodeType": "InheritanceSpecifier",
									"src": "456:11:0"
								},
								{
									"baseName": {
										"id": 20,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"469:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1494,
										"src": "469:15:0"
									},
									"id": 21,
									"nodeType": "InheritanceSpecifier",
									"src": "469:15:0"
								}
							],
							"canonicalName": "ERC20TokenGTT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 103,
							"linearizedBaseContracts": [
								103,
								1494,
								1012,
								1425,
								2651,
								128,
								1074,
								780,
								170,
								1038,
								858,
								1357
							],
							"name": "ERC20TokenGTT",
							"nameLocation": "432:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 24,
									"libraryName": {
										"id": 22,
										"name": "Address",
										"nameLocations": [
											"498:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1327,
										"src": "498:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:0",
									"typeName": {
										"id": 23,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "540:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 103,
									"src": "524:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 25,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "524:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"errorSelector": "245aecd3",
									"id": 30,
									"name": "NotOwner",
									"nameLocation": "558:8:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "575:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "567:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "566:16:0"
									},
									"src": "552:31:0"
								},
								{
									"anonymous": false,
									"eventSelector": "5f7666687319b40936f33c188908d86aea154abd3f4127b4fa0a3f04f303c7da",
									"id": 36,
									"name": "TokenMinted",
									"nameLocation": "595:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "612:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "607:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "607:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "625:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "620:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "620:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:29:0"
									},
									"src": "589:47:0"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "723:152:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 46,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "734:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 47,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "742:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "746:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "742:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "734:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "734:18:0"
											},
											{
												"documentation": "@dev Initial totalsupply is 100,000",
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 52,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "818:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "822:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "818:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "313030303030",
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "830:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000_by_1",
																	"typeString": "int_const 100000"
																},
																"value": "100000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 61,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 55,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "840:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 58,
																						"name": "decimals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 344,
																						"src": "854:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																							"typeString": "function () view returns (uint8)"
																						}
																					},
																					"id": 59,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "854:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"id": 57,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "846:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 56,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "846:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 60,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "846:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "840:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 62,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "839:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "830:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 51,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "812:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "812:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "812:55:0"
											}
										]
									},
									"id": 67,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "476172656e205465737420546f6b656e",
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "664:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2786bcb4ebaf9b541a14b6c8b6a7c72dbb602399886e1e0c0fe751cde05a1117",
														"typeString": "literal_string \"Garen Test Token\""
													},
													"value": "Garen Test Token"
												},
												{
													"hexValue": "475454",
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "684:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_79e0b9a666fbf0c647ed03c659f9ec39b79fdf0219c9c02ebe0a9af3e1568534",
														"typeString": "literal_string \"GTT\""
													},
													"value": "GTT"
												}
											],
											"id": 41,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 38,
												"name": "ERC20",
												"nameLocations": [
													"658:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 780,
												"src": "658:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "658:32:0"
										},
										{
											"arguments": [
												{
													"hexValue": "476172656e205465737420546f6b656e",
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "703:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_2786bcb4ebaf9b541a14b6c8b6a7c72dbb602399886e1e0c0fe751cde05a1117",
														"typeString": "literal_string \"Garen Test Token\""
													},
													"value": "Garen Test Token"
												}
											],
											"id": 44,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 42,
												"name": "ERC20Permit",
												"nameLocations": [
													"691:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1012,
												"src": "691:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "691:31:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:2:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "723:0:0"
									},
									"scope": 103,
									"src": "644:231:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "904:109:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 69,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "919:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "923:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "919:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 71,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "933:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "919:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 79,
												"nodeType": "IfStatement",
												"src": "915:79:0",
												"trueBody": {
													"id": 78,
													"nodeType": "Block",
													"src": "940:54:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 74,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "971:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 75,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "975:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "971:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 73,
																	"name": "NotOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "962:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "962:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 77,
															"nodeType": "RevertStatement",
															"src": "955:27:0"
														}
													]
												}
											},
											{
												"id": 80,
												"nodeType": "PlaceholderStatement",
												"src": "1004:1:0"
											}
										]
									},
									"id": 82,
									"name": "onlyOwner",
									"nameLocation": "892:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "901:2:0"
									},
									"src": "883:130:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "1068:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 90,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1085:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1089:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1085:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 92,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "1097:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 89,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "1079:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1079:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "1079:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 96,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "1133:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 97,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1142:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1148:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1142:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 95,
														"name": "TokenMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "1121:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1121:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "1116:42:0"
											}
										]
									},
									"functionSelector": "a0712d68",
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 87,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 86,
												"name": "onlyOwner",
												"nameLocations": [
													"1058:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 82,
												"src": "1058:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1058:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "1030:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1040:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1035:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1035:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1034:14:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1068:0:0"
									},
									"scope": 103,
									"src": "1021:145:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 104,
							"src": "423:746:0",
							"usedErrors": [
								30,
								140,
								145,
								150,
								159,
								164,
								169,
								889,
								896,
								1367,
								1439,
								1508,
								1510,
								2087,
								2092,
								2097
							],
							"usedEvents": [
								36,
								108,
								792,
								801
							]
						}
					],
					"src": "33:1136:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
					"exportedSymbols": {
						"IERC5267": [
							128
						]
					},
					"id": 129,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 128,
							"linearizedBaseContracts": [
								128
							],
							"name": "IERC5267",
							"nameLocation": "143:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "158:84:1",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 108,
									"name": "EIP712DomainChanged",
									"nameLocation": "253:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:1"
									},
									"src": "247:28:1"
								},
								{
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "281:140:1",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "435:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:1"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "517:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "510:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 111,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "510:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "551:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "537:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 113,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "583:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "569:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 115,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "612:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "604:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "641:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "633:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "672:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 121,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "715:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "698:27:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 123,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "698:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 124,
													"nodeType": "ArrayTypeName",
													"src": "698:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:239:1"
									},
									"scope": 128,
									"src": "426:310:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 129,
							"src": "133:605:1",
							"usedErrors": [],
							"usedEvents": [
								108
							]
						}
					],
					"src": "107:632:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							265
						],
						"IERC20Errors": [
							170
						],
						"IERC721Errors": [
							218
						]
					},
					"id": 266,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 266,
							"src": "278:1764:2",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 266,
							"src": "2186:2092:2",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 266,
							"src": "4424:2107:2",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1357
						],
						"ERC20": [
							780
						],
						"IERC20": [
							858
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							1038
						]
					},
					"id": 781,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 267,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 781,
							"sourceUnit": 859,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 268,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 858,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 271,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 781,
							"sourceUnit": 1039,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 270,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1038,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 273,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 781,
							"sourceUnit": 1358,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 272,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1357,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 275,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 781,
							"sourceUnit": 266,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 274,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 170,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 277,
										"name": "Context",
										"nameLocations": [
											"1428:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1357,
										"src": "1428:7:3"
									},
									"id": 278,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:3"
								},
								{
									"baseName": {
										"id": 279,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 858,
										"src": "1437:6:3"
									},
									"id": 280,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:3"
								},
								{
									"baseName": {
										"id": 281,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1038,
										"src": "1445:14:3"
									},
									"id": 282,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:3"
								},
								{
									"baseName": {
										"id": 283,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "1461:12:3"
									},
									"id": 284,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 276,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 780,
							"linearizedBaseContracts": [
								780,
								170,
								1038,
								858,
								1357
							],
							"name": "ERC20",
							"nameLocation": "1419:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 288,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "1480:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 287,
										"keyName": "account",
										"keyNameLocation": "1496:7:3",
										"keyType": {
											"id": 285,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 286,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 294,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "1540:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 293,
										"keyName": "account",
										"keyNameLocation": "1556:7:3",
										"keyType": {
											"id": 289,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 292,
											"keyName": "spender",
											"keyNameLocation": "1583:7:3",
											"keyType": {
												"id": 290,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 291,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 296,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "1630:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 295,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 298,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "1665:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 297,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 300,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 780,
									"src": "1691:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 299,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "1952:57:3",
										"statements": [
											{
												"expression": {
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 308,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "1962:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 309,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "1970:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:3"
											},
											{
												"expression": {
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 312,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "1985:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 313,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "1995:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:3"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 317,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1908:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 302,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1929:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 304,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:3"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:3"
									},
									"scope": 780,
									"src": "1896:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1025
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "2134:29:3",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 298,
													"src": "2151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "2144:12:3"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:3"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2119:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:3"
									},
									"scope": 780,
									"src": "2074:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1031
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "2338:31:3",
										"statements": [
											{
												"expression": {
													"id": 332,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 300,
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "2348:14:3"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:3"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "2323:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 329,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:3"
									},
									"scope": 780,
									"src": "2276:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1037
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "3058:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "3068:9:3"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:3"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "3051:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 338,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:3"
									},
									"scope": 780,
									"src": "3002:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										807
									],
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "3205:36:3",
										"statements": [
											{
												"expression": {
													"id": 350,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 296,
													"src": "3222:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 349,
												"id": 351,
												"nodeType": "Return",
												"src": "3215:19:3"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:3"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "3196:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:3"
									},
									"scope": 780,
									"src": "3144:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										815
									],
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "3373:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 361,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "3390:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 363,
													"indexExpression": {
														"id": 362,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 360,
												"id": 364,
												"nodeType": "Return",
												"src": "3383:25:3"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "3318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:3"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "3364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:3"
									},
									"scope": 780,
									"src": "3299:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										825
									],
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3685:103:3",
										"statements": [
											{
												"assignments": [
													377
												],
												"declarations": [
													{
														"constant": false,
														"id": 377,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 389,
														"src": "3695:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 376,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 378,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "3711:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "3743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "3750:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 384,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "3754:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 381,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "3733:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 375,
												"id": 388,
												"nodeType": "Return",
												"src": "3770:11:3"
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3628:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:3"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3679:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:3"
									},
									"scope": 780,
									"src": "3610:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										835
									],
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "3935:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 400,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "3952:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 402,
														"indexExpression": {
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "3964:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 404,
													"indexExpression": {
														"id": 403,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "3971:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 399,
												"id": 405,
												"nodeType": "Return",
												"src": "3945:34:3"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3865:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:3"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:3"
									},
									"scope": 780,
									"src": "3846:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										845
									],
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "4372:107:3",
										"statements": [
											{
												"assignments": [
													418
												],
												"declarations": [
													{
														"constant": false,
														"id": 418,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 430,
														"src": "4382:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 417,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 421,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 419,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "4398:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 423,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "4429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 424,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "4436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 425,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "4445:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 422,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															671,
															731
														],
														"referencedDeclaration": 671,
														"src": "4420:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 416,
												"id": 429,
												"nodeType": "Return",
												"src": "4461:11:3"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "4310:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "4327:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:3"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "4366:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:3"
									},
									"scope": 780,
									"src": "4293:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										857
									],
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "5132:151:3",
										"statements": [
											{
												"assignments": [
													444
												],
												"declarations": [
													{
														"constant": false,
														"id": 444,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 462,
														"src": "5142:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 443,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 447,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 445,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "5160:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 449,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "5198:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 450,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "5204:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 451,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "5213:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 448,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "5182:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 455,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "5239:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 456,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "5245:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 457,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "5249:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 454,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "5229:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 442,
												"id": 461,
												"nodeType": "Return",
												"src": "5265:11:3"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "5061:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "5075:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "5087:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:3"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "5126:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:3"
									},
									"scope": 780,
									"src": "5039:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "5725:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 473,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "5739:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 474,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 487,
												"nodeType": "IfStatement",
												"src": "5735:86:3",
												"trueBody": {
													"id": 486,
													"nodeType": "Block",
													"src": "5759:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 482,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 480,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 479,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "5780:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 485,
															"nodeType": "RevertStatement",
															"src": "5773:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 488,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "5834:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 489,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 502,
												"nodeType": "IfStatement",
												"src": "5830:86:3",
												"trueBody": {
													"id": 501,
													"nodeType": "Block",
													"src": "5852:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 497,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 495,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 494,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "5873:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 500,
															"nodeType": "RevertStatement",
															"src": "5866:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 504,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "5933:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "5939:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "5943:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 503,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "5925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:3"
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:3"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:3"
									},
									"scope": 780,
									"src": "5656:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "6346:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 520,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "6360:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 521,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 557,
													"nodeType": "Block",
													"src": "6534:362:3",
													"statements": [
														{
															"assignments": [
																532
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 532,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 557,
																	"src": "6548:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 531,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 536,
															"initialValue": {
																"baseExpression": {
																	"id": 533,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "6570:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 535,
																"indexExpression": {
																	"id": 534,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 513,
																	"src": "6580:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 537,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6603:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 538,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 517,
																	"src": "6617:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 547,
															"nodeType": "IfStatement",
															"src": "6599:115:3",
															"trueBody": {
																"id": 546,
																"nodeType": "Block",
																"src": "6624:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 541,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 513,
																					"src": "6674:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 542,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6680:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 543,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 517,
																					"src": "6693:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 540,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "6649:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 545,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:3"
																	}
																]
															}
														},
														{
															"id": 556,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 548,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 288,
																				"src": "6834:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 550,
																			"indexExpression": {
																				"id": 549,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 513,
																				"src": "6844:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 551,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6852:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 552,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 517,
																				"src": "6866:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 555,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:3"
																}
															]
														}
													]
												},
												"id": 558,
												"nodeType": "IfStatement",
												"src": "6356:540:3",
												"trueBody": {
													"id": 530,
													"nodeType": "Block",
													"src": "6380:148:3",
													"statements": [
														{
															"expression": {
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 526,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "6496:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 527,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 517,
																	"src": "6512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 529,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 559,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "6910:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 560,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "7125:206:3",
													"statements": [
														{
															"id": 577,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 571,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 288,
																				"src": "7284:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 573,
																			"indexExpression": {
																				"id": 572,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "7294:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 574,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 517,
																			"src": "7301:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 576,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:3"
																}
															]
														}
													]
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "6906:425:3",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "6928:191:3",
													"statements": [
														{
															"id": 569,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 565,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 296,
																			"src": "7073:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 566,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 517,
																			"src": "7089:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 568,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 581,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "7355:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 582,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "7361:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 583,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "7365:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 580,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "7346:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 585,
												"nodeType": "EmitStatement",
												"src": "7341:30:3"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "6288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "6302:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "6314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:3"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:3"
									},
									"scope": 780,
									"src": "6271:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 619,
										"nodeType": "Block",
										"src": "7777:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 595,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "7791:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 596,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 609,
												"nodeType": "IfStatement",
												"src": "7787:91:3",
												"trueBody": {
													"id": 608,
													"nodeType": "Block",
													"src": "7814:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 602,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 601,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "7835:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 607,
															"nodeType": "RevertStatement",
															"src": "7828:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 611,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 615,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "7907:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "7916:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 610,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "7887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:3"
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "7736:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "7753:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:3"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:3"
									},
									"scope": 780,
									"src": "7721:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 652,
										"nodeType": "Block",
										"src": "8303:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 628,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "8317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 629,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "8313:89:3",
												"trueBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "8340:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 637,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 635,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 634,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "8361:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 640,
															"nodeType": "RevertStatement",
															"src": "8354:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 644,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "8419:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 645,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "8440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 643,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "8411:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:3"
											}
										]
									},
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "8262:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "8279:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:3"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:3"
									},
									"scope": 780,
									"src": "8247:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "9063:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "9082:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "9089:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "9098:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 663,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															671,
															731
														],
														"referencedDeclaration": 731,
														"src": "9073:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:3"
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "9007:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "9022:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "9039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:3"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:3"
									},
									"scope": 780,
									"src": "8989:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "10047:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 683,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "10061:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 684,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 697,
												"nodeType": "IfStatement",
												"src": "10057:89:3",
												"trueBody": {
													"id": 696,
													"nodeType": "Block",
													"src": "10082:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 692,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 690,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 689,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "10103:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 695,
															"nodeType": "RevertStatement",
															"src": "10096:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 698,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "10159:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 699,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 712,
												"nodeType": "IfStatement",
												"src": "10155:90:3",
												"trueBody": {
													"id": 711,
													"nodeType": "Block",
													"src": "10182:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 705,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 704,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "10203:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 710,
															"nodeType": "RevertStatement",
															"src": "10196:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 713,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "10254:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 716,
															"indexExpression": {
																"id": 714,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "10266:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 717,
														"indexExpression": {
															"id": 715,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "10273:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 718,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "10284:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:3"
											},
											{
												"condition": {
													"id": 721,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 680,
													"src": "10303:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 729,
												"nodeType": "IfStatement",
												"src": "10299:76:3",
												"trueBody": {
													"id": 728,
													"nodeType": "Block",
													"src": "10314:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 723,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "10342:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 724,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "10349:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 725,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "10358:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 722,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "10333:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 727,
															"nodeType": "EmitStatement",
															"src": "10328:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "9967:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "9999:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "10014:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:3"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:3"
									},
									"scope": 780,
									"src": "9949:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "10752:388:3",
										"statements": [
											{
												"assignments": [
													742
												],
												"declarations": [
													{
														"constant": false,
														"id": 742,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 778,
														"src": "10762:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 741,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 747,
												"initialValue": {
													"arguments": [
														{
															"id": 744,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "10799:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 745,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "10806:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 743,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "10789:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 748,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "10828:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 750,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 749,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 777,
												"nodeType": "IfStatement",
												"src": "10824:310:3",
												"trueBody": {
													"id": 776,
													"nodeType": "Block",
													"src": "10867:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 755,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "10885:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 756,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "10904:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 765,
															"nodeType": "IfStatement",
															"src": "10881:130:3",
															"trueBody": {
																"id": 764,
																"nodeType": "Block",
																"src": "10911:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 759,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 736,
																					"src": "10963:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 742,
																					"src": "10972:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 738,
																					"src": "10990:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 758,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "10936:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 763,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:3"
																	}
																]
															}
														},
														{
															"id": 775,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 767,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 734,
																				"src": "11061:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 768,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 736,
																				"src": "11068:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 769,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 742,
																					"src": "11077:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 770,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 738,
																					"src": "11096:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 772,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 766,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				671,
																				731
																			],
																			"referencedDeclaration": 731,
																			"src": "11052:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 774,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "10688:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "10703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "10720:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:3"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:3"
									},
									"scope": 780,
									"src": "10663:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 781,
							"src": "1401:9741:3",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								792,
								801
							]
						}
					],
					"src": "105:11038:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							858
						]
					},
					"id": 859,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 782,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 783,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 858,
							"linearizedBaseContracts": [
								858
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 792,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 801,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 807,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 858,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 815,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 858,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 858,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 835,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 858,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 842,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 858,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 857,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 854,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 858,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 859,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								792,
								801
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol",
					"exportedSymbols": {
						"ECDSA": [
							2424
						],
						"EIP712": [
							2651
						],
						"ERC20": [
							780
						],
						"ERC20Permit": [
							1012
						],
						"IERC20Permit": [
							1074
						],
						"Nonces": [
							1425
						]
					},
					"id": 1013,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 860,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "122:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "./IERC20Permit.sol",
							"id": 862,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1013,
							"sourceUnit": 1075,
							"src": "148:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 861,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1074,
										"src": "156:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 864,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1013,
							"sourceUnit": 781,
							"src": "197:35:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 863,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 780,
										"src": "205:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "../../../utils/cryptography/ECDSA.sol",
							"id": 866,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1013,
							"sourceUnit": 2425,
							"src": "233:60:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 865,
										"name": "ECDSA",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2424,
										"src": "241:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
							"file": "../../../utils/cryptography/EIP712.sol",
							"id": 868,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1013,
							"sourceUnit": 2652,
							"src": "294:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 867,
										"name": "EIP712",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2651,
										"src": "302:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Nonces.sol",
							"file": "../../../utils/Nonces.sol",
							"id": 870,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1013,
							"sourceUnit": 1426,
							"src": "357:49:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 869,
										"name": "Nonces",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1425,
										"src": "365:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 872,
										"name": "ERC20",
										"nameLocations": [
											"929:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 780,
										"src": "929:5:5"
									},
									"id": 873,
									"nodeType": "InheritanceSpecifier",
									"src": "929:5:5"
								},
								{
									"baseName": {
										"id": 874,
										"name": "IERC20Permit",
										"nameLocations": [
											"936:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1074,
										"src": "936:12:5"
									},
									"id": 875,
									"nodeType": "InheritanceSpecifier",
									"src": "936:12:5"
								},
								{
									"baseName": {
										"id": 876,
										"name": "EIP712",
										"nameLocations": [
											"950:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2651,
										"src": "950:6:5"
									},
									"id": 877,
									"nodeType": "InheritanceSpecifier",
									"src": "950:6:5"
								},
								{
									"baseName": {
										"id": 878,
										"name": "Nonces",
										"nameLocations": [
											"958:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1425,
										"src": "958:6:5"
									},
									"id": 879,
									"nodeType": "InheritanceSpecifier",
									"src": "958:6:5"
								}
							],
							"canonicalName": "ERC20Permit",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 871,
								"nodeType": "StructuredDocumentation",
								"src": "408:487:5",
								"text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": true,
							"id": 1012,
							"linearizedBaseContracts": [
								1012,
								1425,
								2651,
								128,
								1074,
								780,
								170,
								1038,
								858,
								1357
							],
							"name": "ERC20Permit",
							"nameLocation": "914:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 884,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "996:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1012,
									"src": "971:146:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 880,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "971:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 882,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1032:84:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 881,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1022:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 883,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1022:95:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "1124:52:5",
										"text": " @dev Permit deadline has expired."
									},
									"errorSelector": "62791302",
									"id": 889,
									"name": "ERC2612ExpiredSignature",
									"nameLocation": "1187:23:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1219:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "1211:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:18:5"
									},
									"src": "1181:48:5"
								},
								{
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "1235:45:5",
										"text": " @dev Mismatched signature."
									},
									"errorSelector": "4b800e46",
									"id": 896,
									"name": "ERC2612InvalidSigner",
									"nameLocation": "1291:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1320:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "1312:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1336:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "1328:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:31:5"
									},
									"src": "1285:58:5"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "1624:2:5",
										"statements": []
									},
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "1349:220:5",
										"text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."
									},
									"id": 907,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 902,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 899,
													"src": "1613:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1619:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 904,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 901,
												"name": "EIP712",
												"nameLocations": [
													"1606:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2651,
												"src": "1606:6:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1606:17:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1600:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1586:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 898,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1586:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:20:5"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1624:0:5"
									},
									"scope": 1012,
									"src": "1574:52:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1059
									],
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "1869:483:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 925,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1883:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1889:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1883:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 927,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "1901:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1883:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 934,
												"nodeType": "IfStatement",
												"src": "1879:97:5",
												"trueBody": {
													"id": 933,
													"nodeType": "Block",
													"src": "1911:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 930,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "1956:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 929,
																	"name": "ERC2612ExpiredSignature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "1932:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1932:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 932,
															"nodeType": "RevertStatement",
															"src": "1925:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													936
												],
												"declarations": [
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "1994:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 983,
														"src": "1986:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 935,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1986:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 950,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 940,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "2028:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 941,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "2045:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 942,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "2052:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 943,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "2061:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 945,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 910,
																			"src": "2078:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 944,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1399,
																		"src": "2068:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2068:16:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 947,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "2086:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 938,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2017:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2021:6:5",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2017:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2017:78:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 937,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2007:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2007:89:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1986:110:5"
											},
											{
												"assignments": [
													952
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "2115:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 983,
														"src": "2107:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 951,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2107:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 956,
												"initialValue": {
													"arguments": [
														{
															"id": 954,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "2139:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 953,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2584,
														"src": "2122:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2122:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2107:43:5"
											},
											{
												"assignments": [
													958
												],
												"declarations": [
													{
														"constant": false,
														"id": 958,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "2169:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 983,
														"src": "2161:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 957,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2161:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 966,
												"initialValue": {
													"arguments": [
														{
															"id": 961,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "2192:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 962,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "2198:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 963,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "2201:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 964,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "2204:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 959,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2424,
															"src": "2178:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$2424_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2184:7:5",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2374,
														"src": "2178:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2178:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2161:45:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 967,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "2220:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 968,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "2230:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2220:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"nodeType": "IfStatement",
												"src": "2216:88:5",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "2237:67:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 971,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "2279:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 972,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "2287:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 970,
																	"name": "ERC2612InvalidSigner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "2258:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2258:35:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 974,
															"nodeType": "RevertStatement",
															"src": "2251:42:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 978,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "2323:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 979,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "2330:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 980,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "2339:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 977,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															671,
															731
														],
														"referencedDeclaration": 671,
														"src": "2314:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2314:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "2314:31:5"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "1632:43:5",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "d505accf",
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1689:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1713:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1705:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1736:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1728:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1761:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1753:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1753:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1784:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1776:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1776:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1808:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1802:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 917,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1802:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1827:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1819:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 919,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1819:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1846:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "1838:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 921,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:158:5"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1869:0:5"
									},
									"scope": 1012,
									"src": "1680:672:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1067,
										1384
									],
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "2506:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 997,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "2536:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 995,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2523:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Permit_$1012_$",
																"typeString": "type(contract super ERC20Permit)"
															}
														},
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2529:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1384,
														"src": "2523:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2523:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 994,
												"id": 999,
												"nodeType": "Return",
												"src": "2516:26:5"
											}
										]
									},
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "2358:43:5",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "7ecebe00",
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "2415:6:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 991,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 989,
												"name": "IERC20Permit",
												"nameLocations": [
													"2466:12:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1074,
												"src": "2466:12:5"
											},
											{
												"id": 990,
												"name": "Nonces",
												"nameLocations": [
													"2480:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1425,
												"src": "2480:6:5"
											}
										],
										"src": "2457:30:5"
									},
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2430:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "2422:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2422:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2421:15:5"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "2497:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2497:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2496:9:5"
									},
									"scope": 1012,
									"src": "2406:143:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1073
									],
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "2724:44:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1007,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2547,
														"src": "2741:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2741:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1006,
												"id": 1009,
												"nodeType": "Return",
												"src": "2734:27:5"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "2555:43:5",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "3644e515",
									"id": 1011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2665:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2681:2:5"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "2715:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1004,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2714:9:5"
									},
									"scope": 1012,
									"src": "2656:112:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 1013,
							"src": "896:1874:5",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								889,
								896,
								1367,
								1508,
								1510,
								2087,
								2092,
								2097
							],
							"usedEvents": [
								108,
								792,
								801
							]
						}
					],
					"src": "122:2649:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							858
						],
						"IERC20Metadata": [
							1038
						]
					},
					"id": 1039,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1014,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1016,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1039,
							"sourceUnit": 859,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1015,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 858,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1018,
										"name": "IERC20",
										"nameLocations": [
											"305:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 858,
										"src": "305:6:6"
									},
									"id": 1019,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1017,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1038,
							"linearizedBaseContracts": [
								1038,
								858
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:6"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "416:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1022,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:6"
									},
									"scope": 1038,
									"src": "377:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1031,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:6"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "539:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1028,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:6"
									},
									"scope": 1038,
									"src": "498:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:6"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "673:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1034,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:6"
									},
									"scope": 1038,
									"src": "630:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1039,
							"src": "277:405:6",
							"usedErrors": [],
							"usedEvents": [
								792,
								801
							]
						}
					],
					"src": "125:558:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							1074
						]
					},
					"id": 1075,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1040,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1041,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:7",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 1074,
							"linearizedBaseContracts": [
								1074
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:7",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 1059,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "3022:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "3045:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "3070:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "3093:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "3119:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1051,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "3136:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1053,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "3155:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1055,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:7"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:7"
									},
									"scope": 1074,
									"src": "2997:183:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:7",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 1067,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "3501:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:7"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "3539:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:7"
									},
									"scope": 1074,
									"src": "3485:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:7",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 1073,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:7"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "3791:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1070,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:7"
									},
									"scope": 1074,
									"src": "3740:60:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1075,
							"src": "2113:1689:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1327
						]
					},
					"id": 1328,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1076,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1077,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1327,
							"linearizedBaseContracts": [
								1327
							],
							"name": "Address",
							"nameLocation": "203:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:8",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1082,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "349:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:8"
									},
									"src": "316:50:8"
								},
								{
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1087,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "475:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:8"
									},
									"src": "452:39:8"
								},
								{
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:8",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1090,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:8"
									},
									"src": "591:24:8"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "1602:260:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1100,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1327",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1327",
																		"typeString": "library Address"
																	}
																],
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1098,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1103,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "1640:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1113,
												"nodeType": "IfStatement",
												"src": "1612:109:8",
												"trueBody": {
													"id": 1112,
													"nodeType": "Block",
													"src": "1648:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1108,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1327",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1327",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1106,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1105,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "1669:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1111,
															"nodeType": "RevertStatement",
															"src": "1662:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													1115,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1115,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1130,
														"src": "1732:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1114,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1122,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1116,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "1750:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1118,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "1772:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:8"
											},
											{
												"condition": {
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:8",
													"subExpression": {
														"id": 1123,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "1798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1129,
												"nodeType": "IfStatement",
												"src": "1793:63:8",
												"trueBody": {
													"id": 1128,
													"nodeType": "Block",
													"src": "1807:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1125,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "1828:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1127,
															"nodeType": "RevertStatement",
															"src": "1821:24:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1550:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1577:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:8"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:8"
									},
									"scope": 1327,
									"src": "1531:331:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "2794:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1142,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "2833:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "2841:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1141,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "2811:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1140,
												"id": 1146,
												"nodeType": "Return",
												"src": "2804:45:8"
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "2727:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "2743:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:8"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "2780:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1138,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:8"
									},
									"scope": 1327,
									"src": "2705:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "3293:279:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1162,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1327",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1327",
																		"typeString": "library Address"
																	}
																],
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1160,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1165,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "3331:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1175,
												"nodeType": "IfStatement",
												"src": "3303:108:8",
												"trueBody": {
													"id": 1174,
													"nodeType": "Block",
													"src": "3338:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1170,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1327",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1327",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1168,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1167,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "3359:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1173,
															"nodeType": "RevertStatement",
															"src": "3352:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													1177,
													1179
												],
												"declarations": [
													{
														"constant": false,
														"id": 1177,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1193,
														"src": "3421:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1176,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1179,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1193,
														"src": "3435:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1178,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1186,
												"initialValue": {
													"arguments": [
														{
															"id": 1184,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "3488:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1180,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "3462:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1182,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "3481:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1188,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "3537:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1189,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "3545:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1190,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "3554:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1187,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "3510:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1159,
												"id": 1192,
												"nodeType": "Return",
												"src": "3503:62:8"
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "3211:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "3227:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "3246:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:8"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "3279:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:8"
									},
									"scope": 1327,
									"src": "3180:392:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "3811:154:8",
										"statements": [
											{
												"assignments": [
													1205,
													1207
												],
												"declarations": [
													{
														"constant": false,
														"id": 1205,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1219,
														"src": "3822:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1204,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1207,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1219,
														"src": "3836:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1206,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"arguments": [
														{
															"id": 1210,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "3881:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1208,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "3863:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1214,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "3930:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1215,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "3938:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1216,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "3947:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1213,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "3903:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1203,
												"id": 1218,
												"nodeType": "Return",
												"src": "3896:62:8"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3739:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3755:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1198,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:8"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "3797:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1201,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:8"
									},
									"scope": 1327,
									"src": "3711:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "4203:156:8",
										"statements": [
											{
												"assignments": [
													1231,
													1233
												],
												"declarations": [
													{
														"constant": false,
														"id": 1231,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1245,
														"src": "4214:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1230,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1233,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1245,
														"src": "4228:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1232,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1238,
												"initialValue": {
													"arguments": [
														{
															"id": 1236,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "4275:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1234,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "4255:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1240,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "4324:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1241,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "4332:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1242,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "4341:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1239,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "4297:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1229,
												"id": 1244,
												"nodeType": "Return",
												"src": "4290:62:8"
											}
										]
									},
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "4136:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "4152:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:8"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "4189:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:8"
									},
									"scope": 1327,
									"src": "4106:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "4783:424:8",
										"statements": [
											{
												"condition": {
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:8",
													"subExpression": {
														"id": 1258,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "4798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1283,
													"nodeType": "Block",
													"src": "4857:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1265,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1253,
																			"src": "5045:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1269,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1249,
																				"src": "5071:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1280,
															"nodeType": "IfStatement",
															"src": "5041:119:8",
															"trueBody": {
																"id": 1279,
																"nodeType": "Block",
																"src": "5096:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1276,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1249,
																					"src": "5138:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1275,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1087,
																				"src": "5121:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1278,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1281,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1253,
																"src": "5180:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1257,
															"id": 1282,
															"nodeType": "Return",
															"src": "5173:17:8"
														}
													]
												},
												"id": 1284,
												"nodeType": "IfStatement",
												"src": "4793:408:8",
												"trueBody": {
													"id": 1264,
													"nodeType": "Block",
													"src": "4807:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1261,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "4829:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1260,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1326,
																	"src": "4821:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1263,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "4670:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "4694:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1250,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "4716:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1252,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:8"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "4769:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:8"
									},
									"scope": 1327,
									"src": "4625:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "5509:122:8",
										"statements": [
											{
												"condition": {
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:8",
													"subExpression": {
														"id": 1296,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "5524:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1305,
													"nodeType": "Block",
													"src": "5583:42:8",
													"statements": [
														{
															"expression": {
																"id": 1303,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1291,
																"src": "5604:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1295,
															"id": 1304,
															"nodeType": "Return",
															"src": "5597:17:8"
														}
													]
												},
												"id": 1306,
												"nodeType": "IfStatement",
												"src": "5519:106:8",
												"trueBody": {
													"id": 1302,
													"nodeType": "Block",
													"src": "5533:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1299,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "5555:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1298,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1326,
																	"src": "5547:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1301,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "5433:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1288,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "5447:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1290,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:8"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "5495:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1293,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:8"
									},
									"scope": 1327,
									"src": "5407:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "5798:461:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1314,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "5874:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1316,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1323,
													"nodeType": "Block",
													"src": "6204:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1320,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "6225:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1322,
															"nodeType": "RevertStatement",
															"src": "6218:24:8"
														}
													]
												},
												"id": 1324,
												"nodeType": "IfStatement",
												"src": "5870:383:8",
												"trueBody": {
													"id": 1319,
													"nodeType": "Block",
													"src": "5897:301:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:8",
																"nodeType": "YulBlock",
																"src": "6055:133:8",
																"statements": [
																	{
																		"nativeSrc": "6073:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:8"
																			},
																			"nativeSrc": "6096:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:8",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:8",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:8"
																					},
																					"nativeSrc": "6137:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:8"
																			},
																			"nativeSrc": "6130:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:8"
																		},
																		"nativeSrc": "6130:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:8"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1311,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1311,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:8",
																	"valueSize": 1
																}
															],
															"id": 1318,
															"nodeType": "InlineAssembly",
															"src": "6046:142:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "5760:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1310,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:8"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:8"
									},
									"scope": 1327,
									"src": "5743:516:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1328,
							"src": "195:6066:8",
							"usedErrors": [
								1082,
								1087,
								1090
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1357
						]
					},
					"id": 1358,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1329,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1330,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1357,
							"linearizedBaseContracts": [
								1357
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1335,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1334,
												"id": 1337,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1357,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1344,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1343,
												"id": 1346,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1341,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1357,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1352,
												"id": 1354,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1357,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1358,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Nonces.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Nonces.sol",
					"exportedSymbols": {
						"Nonces": [
							1425
						]
					},
					"id": 1426,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1359,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Nonces",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1360,
								"nodeType": "StructuredDocumentation",
								"src": "125:83:10",
								"text": " @dev Provides tracking nonces for addresses. Nonces will only increment."
							},
							"fullyImplemented": true,
							"id": 1425,
							"linearizedBaseContracts": [
								1425
							],
							"name": "Nonces",
							"nameLocation": "227:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1361,
										"nodeType": "StructuredDocumentation",
										"src": "240:90:10",
										"text": " @dev The nonce used for an `account` is not the expected current nonce."
									},
									"errorSelector": "752d88c0",
									"id": 1367,
									"name": "InvalidAccountNonce",
									"nameLocation": "341:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "369:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "361:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "currentNonce",
												"nameLocation": "386:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "378:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:39:10"
									},
									"src": "335:65:10"
								},
								{
									"constant": false,
									"id": 1371,
									"mutability": "mutable",
									"name": "_nonces",
									"nameLocation": "450:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1425,
									"src": "406:51:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1370,
										"keyName": "account",
										"keyNameLocation": "422:7:10",
										"keyType": {
											"id": 1368,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "414:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "406:35:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1369,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "433:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "607:38:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1379,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "624:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1381,
													"indexExpression": {
														"id": 1380,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "632:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "624:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1378,
												"id": 1382,
												"nodeType": "Return",
												"src": "617:21:10"
											}
										]
									},
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "464:69:10",
										"text": " @dev Returns the next unused nonce for an address."
									},
									"functionSelector": "7ecebe00",
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "547:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "562:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "554:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "554:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "553:15:10"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "598:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "597:9:10"
									},
									"scope": 1425,
									"src": "538:107:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1398,
										"nodeType": "Block",
										"src": "828:326:10",
										"statements": [
											{
												"id": 1397,
												"nodeType": "UncheckedBlock",
												"src": "1031:117:10",
												"statements": [
													{
														"expression": {
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1121:16:10",
															"subExpression": {
																"baseExpression": {
																	"id": 1392,
																	"name": "_nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "1121:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1394,
																"indexExpression": {
																	"id": 1393,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1387,
																	"src": "1129:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "1121:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1391,
														"id": 1396,
														"nodeType": "Return",
														"src": "1114:23:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "651:103:10",
										"text": " @dev Consumes a nonce.\n Returns the current value and increments nonce."
									},
									"id": 1399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nameLocation": "768:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "786:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "778:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "778:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:15:10"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "819:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:9:10"
									},
									"scope": 1425,
									"src": "759:395:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "1338:149:10",
										"statements": [
											{
												"assignments": [
													1408
												],
												"declarations": [
													{
														"constant": false,
														"id": 1408,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "1356:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1423,
														"src": "1348:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1407,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1348:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1412,
												"initialValue": {
													"arguments": [
														{
															"id": 1410,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "1376:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1409,
														"name": "_useNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1399,
														"src": "1366:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1366:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1348:34:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1413,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "1396:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1414,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "1405:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1396:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1422,
												"nodeType": "IfStatement",
												"src": "1392:89:10",
												"trueBody": {
													"id": 1421,
													"nodeType": "Block",
													"src": "1414:67:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1417,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1402,
																		"src": "1455:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1418,
																		"name": "current",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1408,
																		"src": "1462:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1416,
																	"name": "InvalidAccountNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "1435:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1435:35:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1420,
															"nodeType": "RevertStatement",
															"src": "1428:42:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "1160:100:10",
										"text": " @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."
									},
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useCheckedNonce",
									"nameLocation": "1274:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1299:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "1291:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1291:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1314:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "1306:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1290:30:10"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:0:10"
									},
									"scope": 1425,
									"src": "1265:222:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1426,
							"src": "209:1280:10",
							"usedErrors": [
								1367
							],
							"usedEvents": []
						}
					],
					"src": "99:1391:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1494
						]
					},
					"id": 1495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1427,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1428,
								"nodeType": "StructuredDocumentation",
								"src": "135:750:11",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1494,
							"linearizedBaseContracts": [
								1494
							],
							"name": "ReentrancyGuard",
							"nameLocation": "904:15:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1431,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1699:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1494,
									"src": "1674:40:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1429,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1430,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1713:1:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1434,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1745:7:11",
									"nodeType": "VariableDeclaration",
									"scope": 1494,
									"src": "1720:36:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1432,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1720:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1433,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1755:1:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1436,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1779:7:11",
									"nodeType": "VariableDeclaration",
									"scope": 1494,
									"src": "1763:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1435,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1763:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "1793:52:11",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 1439,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "1856:28:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:11"
									},
									"src": "1850:37:11"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "1907:38:11",
										"statements": [
											{
												"expression": {
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1442,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "1917:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1443,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1431,
														"src": "1927:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1917:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "1917:21:11"
											}
										]
									},
									"id": 1447,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:11"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:11"
									},
									"scope": 1494,
									"src": "1893:52:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1457,
										"nodeType": "Block",
										"src": "2346:79:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1450,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "2356:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1452,
												"nodeType": "ExpressionStatement",
												"src": "2356:21:11"
											},
											{
												"id": 1453,
												"nodeType": "PlaceholderStatement",
												"src": "2387:1:11"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1454,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "2398:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:20:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "2398:20:11"
											}
										]
									},
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "1951:366:11",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1458,
									"name": "nonReentrant",
									"nameLocation": "2331:12:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:11"
									},
									"src": "2322:103:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "2470:268:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1461,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "2558:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1462,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "2569:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2558:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1468,
												"nodeType": "IfStatement",
												"src": "2554:86:11",
												"trueBody": {
													"id": 1467,
													"nodeType": "Block",
													"src": "2578:62:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1464,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1439,
																	"src": "2599:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2599:30:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1466,
															"nodeType": "RevertStatement",
															"src": "2592:37:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1469,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "2714:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1470,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "2724:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "2714:17:11"
											}
										]
									},
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2440:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2459:2:11"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:11"
									},
									"scope": 1494,
									"src": "2431:307:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "2782:170:11",
										"statements": [
											{
												"expression": {
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1477,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "2924:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1478,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1431,
														"src": "2934:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2924:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "2924:21:11"
											}
										]
									},
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2753:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:2:11"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:11"
									},
									"scope": 1494,
									"src": "2744:208:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "3195:42:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1488,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "3212:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1489,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1434,
														"src": "3223:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3212:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1487,
												"id": 1491,
												"nodeType": "Return",
												"src": "3205:25:11"
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "2958:168:11",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3140:23:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3163:2:11"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "3189:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1485,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3189:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:6:11"
									},
									"scope": 1494,
									"src": "3131:106:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1495,
							"src": "886:2353:11",
							"usedErrors": [
								1439
							],
							"usedEvents": []
						}
					],
					"src": "109:3131:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
					"exportedSymbols": {
						"ShortString": [
							1500
						],
						"ShortStrings": [
							1711
						],
						"StorageSlot": [
							1821
						]
					},
					"id": 1712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1498,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1712,
							"sourceUnit": 1822,
							"src": "132:46:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1497,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1821,
										"src": "140:11:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "ShortString",
							"id": 1500,
							"name": "ShortString",
							"nameLocation": "353:11:12",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "348:28:12",
							"underlyingType": {
								"id": 1499,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "368:7:12",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1501,
								"nodeType": "StructuredDocumentation",
								"src": "378:876:12",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1711,
							"linearizedBaseContracts": [
								1711
							],
							"name": "ShortStrings",
							"nameLocation": "1263:12:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1504,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "1370:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 1711,
									"src": "1345:111:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1502,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1345:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 1503,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1390:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 1508,
									"name": "StringTooLong",
									"nameLocation": "1469:13:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1490:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1483:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1505,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1483:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:12:12"
									},
									"src": "1463:32:12"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 1510,
									"name": "InvalidShortString",
									"nameLocation": "1506:18:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1524:2:12"
									},
									"src": "1500:27:12"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "1786:208:12",
										"statements": [
											{
												"assignments": [
													1520
												],
												"declarations": [
													{
														"constant": false,
														"id": 1520,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "1809:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "1796:17:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1519,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1796:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1525,
												"initialValue": {
													"arguments": [
														{
															"id": 1523,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "1822:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1816:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 1521,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1816:5:12",
															"typeDescriptions": {}
														}
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1816:10:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1796:30:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1526,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "1840:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1845:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1840:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1854:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "1840:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1535,
												"nodeType": "IfStatement",
												"src": "1836:72:12",
												"trueBody": {
													"id": 1534,
													"nodeType": "Block",
													"src": "1858:50:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1531,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "1893:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1530,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1508,
																	"src": "1879:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1879:18:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1533,
															"nodeType": "RevertStatement",
															"src": "1872:25:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1544,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1520,
																						"src": "1965:4:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 1543,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1957:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 1542,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "1957:7:12",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1545,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1957:13:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1949:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1540,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1949:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1949:22:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 1547,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1520,
																			"src": "1974:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1979:6:12",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "1974:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1949:36:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1941:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1538,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1941:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1941:45:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1536,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1500,
															"src": "1924:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1500_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1936:4:12",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "1924:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1500_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1924:63:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 1518,
												"id": 1552,
												"nodeType": "Return",
												"src": "1917:70:12"
											}
										]
									},
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "1533:170:12",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "1717:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1745:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "1731:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1731:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:19:12"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "1773:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1516,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1515,
														"name": "ShortString",
														"nameLocations": [
															"1773:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1500,
														"src": "1773:11:12"
													},
													"referencedDeclaration": 1500,
													"src": "1773:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:13:12"
									},
									"scope": 1711,
									"src": "1708:286:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1579,
										"nodeType": "Block",
										"src": "2152:331:12",
										"statements": [
											{
												"assignments": [
													1564
												],
												"declarations": [
													{
														"constant": false,
														"id": 1564,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "2170:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 1579,
														"src": "2162:11:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1563,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2162:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1568,
												"initialValue": {
													"arguments": [
														{
															"id": 1566,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "2187:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
																"typeString": "ShortString"
															}
														],
														"id": 1565,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "2176:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1500_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:16:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2162:30:12"
											},
											{
												"assignments": [
													1570
												],
												"declarations": [
													{
														"constant": false,
														"id": 1570,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "2294:3:12",
														"nodeType": "VariableDeclaration",
														"scope": 1579,
														"src": "2280:17:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1569,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2280:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1575,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2311:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 1572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2300:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 1571,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2304:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2280:34:12"
											},
											{
												"AST": {
													"nativeSrc": "2376:81:12",
													"nodeType": "YulBlock",
													"src": "2376:81:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "2397:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2397:3:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "2402:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2402:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2390:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:12"
																},
																"nativeSrc": "2390:16:12",
																"nodeType": "YulFunctionCall",
																"src": "2390:16:12"
															},
															"nativeSrc": "2390:16:12",
															"nodeType": "YulExpressionStatement",
															"src": "2390:16:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "2430:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2430:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2435:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2435:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2426:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2426:3:12"
																		},
																		"nativeSrc": "2426:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2426:14:12"
																	},
																	{
																		"name": "sstr",
																		"nativeSrc": "2442:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2442:4:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2419:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:12"
																},
																"nativeSrc": "2419:28:12",
																"nodeType": "YulFunctionCall",
																"src": "2419:28:12"
															},
															"nativeSrc": "2419:28:12",
															"nodeType": "YulExpressionStatement",
															"src": "2419:28:12"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1564,
														"isOffset": false,
														"isSlot": false,
														"src": "2402:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1558,
														"isOffset": false,
														"isSlot": false,
														"src": "2442:4:12",
														"valueSize": 1
													},
													{
														"declaration": 1570,
														"isOffset": false,
														"isSlot": false,
														"src": "2397:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1570,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:3:12",
														"valueSize": 1
													}
												],
												"id": 1576,
												"nodeType": "InlineAssembly",
												"src": "2367:90:12"
											},
											{
												"expression": {
													"id": 1577,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1570,
													"src": "2473:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1562,
												"id": 1578,
												"nodeType": "Return",
												"src": "2466:10:12"
											}
										]
									},
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "2000:73:12",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 1580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "2087:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2108:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "2096:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1557,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1556,
														"name": "ShortString",
														"nameLocations": [
															"2096:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1500,
														"src": "2096:11:12"
													},
													"referencedDeclaration": 1500,
													"src": "2096:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:18:12"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1580,
												"src": "2137:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1560,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2137:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:15:12"
									},
									"scope": 1711,
									"src": "2078:405:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "2625:175:12",
										"statements": [
											{
												"assignments": [
													1590
												],
												"declarations": [
													{
														"constant": false,
														"id": 1590,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2643:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1611,
														"src": "2635:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1589,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2635:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1600,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1595,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1584,
																		"src": "2679:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 1593,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1500,
																		"src": "2660:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1500_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2672:6:12",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "2660:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1500_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2660:24:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2652:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1591,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2652:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2652:33:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2688:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "2652:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2635:57:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1601,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1590,
														"src": "2706:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 1602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2715:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "2706:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1608,
												"nodeType": "IfStatement",
												"src": "2702:69:12",
												"trueBody": {
													"id": 1607,
													"nodeType": "Block",
													"src": "2719:52:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1604,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1510,
																	"src": "2740:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2740:20:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1606,
															"nodeType": "RevertStatement",
															"src": "2733:27:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1609,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1590,
													"src": "2787:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1588,
												"id": 1610,
												"nodeType": "Return",
												"src": "2780:13:12"
											}
										]
									},
									"documentation": {
										"id": 1581,
										"nodeType": "StructuredDocumentation",
										"src": "2489:61:12",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "2564:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2587:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "2575:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1583,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1582,
														"name": "ShortString",
														"nameLocations": [
															"2575:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1500,
														"src": "2575:11:12"
													},
													"referencedDeclaration": 1500,
													"src": "2575:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:18:12"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "2616:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2615:9:12"
									},
									"scope": 1711,
									"src": "2555:245:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1651,
										"nodeType": "Block",
										"src": "3023:231:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1625,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1615,
																	"src": "3043:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3037:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1623,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3037:5:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3037:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3050:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3037:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3059:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3037:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1649,
													"nodeType": "Block",
													"src": "3121:127:12",
													"statements": [
														{
															"expression": {
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1638,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1617,
																				"src": "3161:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 1635,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1821,
																				"src": "3135:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1821_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 1637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3147:13:12",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1798,
																			"src": "3135:25:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1729_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 1639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3135:32:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$1729_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 1640,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3168:5:12",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1728,
																	"src": "3135:38:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1641,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1615,
																	"src": "3176:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "3135:46:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 1643,
															"nodeType": "ExpressionStatement",
															"src": "3135:46:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1646,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1504,
																		"src": "3219:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 1644,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1500,
																		"src": "3202:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1500_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 1645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3214:4:12",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "3202:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1500_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3202:35:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 1622,
															"id": 1648,
															"nodeType": "Return",
															"src": "3195:42:12"
														}
													]
												},
												"id": 1650,
												"nodeType": "IfStatement",
												"src": "3033:215:12",
												"trueBody": {
													"id": 1634,
													"nodeType": "Block",
													"src": "3063:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1631,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1615,
																		"src": "3098:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1630,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1554,
																	"src": "3084:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1500_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3084:20:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 1622,
															"id": 1633,
															"nodeType": "Return",
															"src": "3077:27:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "2806:103:12",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 1652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "2923:25:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2963:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "2949:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1614,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2949:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "2985:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "2970:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1616,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2970:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:43:12"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "3010:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1620,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1619,
														"name": "ShortString",
														"nameLocations": [
															"3010:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1500,
														"src": "3010:11:12"
													},
													"referencedDeclaration": 1500,
													"src": "3010:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3009:13:12"
									},
									"scope": 1711,
									"src": "2914:340:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "3494:158:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1665,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1656,
																"src": "3527:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1663,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1500,
																"src": "3508:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1500_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3520:6:12",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "3508:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1500_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3508:25:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1667,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "3537:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3508:46:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1676,
													"nodeType": "Block",
													"src": "3609:37:12",
													"statements": [
														{
															"expression": {
																"id": 1674,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1658,
																"src": "3630:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 1662,
															"id": 1675,
															"nodeType": "Return",
															"src": "3623:12:12"
														}
													]
												},
												"id": 1677,
												"nodeType": "IfStatement",
												"src": "3504:142:12",
												"trueBody": {
													"id": 1673,
													"nodeType": "Block",
													"src": "3556:47:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1670,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1656,
																		"src": "3586:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1669,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "3577:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1500_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3577:15:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1662,
															"id": 1672,
															"nodeType": "Return",
															"src": "3570:22:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1653,
										"nodeType": "StructuredDocumentation",
										"src": "3260:120:12",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 1679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "3394:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3427:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "3415:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1655,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1654,
														"name": "ShortString",
														"nameLocations": [
															"3415:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1500,
														"src": "3415:11:12"
													},
													"referencedDeclaration": 1500,
													"src": "3415:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3449:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "3434:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1657,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3434:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3414:41:12"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "3479:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1660,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3479:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:15:12"
									},
									"scope": 1711,
									"src": "3385:267:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "4132:174:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1692,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1683,
																"src": "4165:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 1690,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1500,
																"src": "4146:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$1500_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4158:6:12",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "4146:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1500_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 1693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4146:25:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1694,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "4175:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4146:46:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1707,
													"nodeType": "Block",
													"src": "4249:51:12",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1703,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1685,
																			"src": "4276:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 1702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1701,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:5:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:12:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4283:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4270:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1689,
															"id": 1706,
															"nodeType": "Return",
															"src": "4263:26:12"
														}
													]
												},
												"id": 1708,
												"nodeType": "IfStatement",
												"src": "4142:158:12",
												"trueBody": {
													"id": 1700,
													"nodeType": "Block",
													"src": "4194:49:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1697,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1683,
																		"src": "4226:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 1696,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1612,
																	"src": "4215:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1500_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4215:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1689,
															"id": 1699,
															"nodeType": "Return",
															"src": "4208:24:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "3658:364:12",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 1710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "4036:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4071:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "4059:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 1682,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1681,
														"name": "ShortString",
														"nameLocations": [
															"4059:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1500,
														"src": "4059:11:12"
													},
													"referencedDeclaration": 1500,
													"src": "4059:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4093:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "4078:20:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1684,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4078:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4058:41:12"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "4123:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4122:9:12"
									},
									"scope": 1711,
									"src": "4027:279:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1712,
							"src": "1255:3053:12",
							"usedErrors": [
								1508,
								1510
							],
							"usedEvents": []
						}
					],
					"src": "106:4203:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1821
						]
					},
					"id": 1822,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1714,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:13",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1821,
							"linearizedBaseContracts": [
								1821
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1717,
									"members": [
										{
											"constant": false,
											"id": 1716,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1717,
											"src": "1300:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1715,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:13",
									"nodeType": "StructDefinition",
									"scope": 1821,
									"src": "1271:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1720,
									"members": [
										{
											"constant": false,
											"id": 1719,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1720,
											"src": "1355:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1718,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:13",
									"nodeType": "StructDefinition",
									"scope": 1821,
									"src": "1326:46:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1723,
									"members": [
										{
											"constant": false,
											"id": 1722,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1723,
											"src": "1407:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1721,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:13",
									"nodeType": "StructDefinition",
									"scope": 1821,
									"src": "1378:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1726,
									"members": [
										{
											"constant": false,
											"id": 1725,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1726,
											"src": "1462:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1724,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:13",
									"nodeType": "StructDefinition",
									"scope": 1821,
									"src": "1433:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1729,
									"members": [
										{
											"constant": false,
											"id": 1728,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1729,
											"src": "1516:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1727,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:13",
									"nodeType": "StructDefinition",
									"scope": 1821,
									"src": "1488:47:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1732,
									"members": [
										{
											"constant": false,
											"id": 1731,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1732,
											"src": "1568:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1730,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:13",
									"nodeType": "StructDefinition",
									"scope": 1821,
									"src": "1541:45:13",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1742,
										"nodeType": "Block",
										"src": "1768:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:13",
													"nodeType": "YulBlock",
													"src": "1830:38:13",
													"statements": [
														{
															"nativeSrc": "1844:14:13",
															"nodeType": "YulAssignment",
															"src": "1844:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:13",
																"nodeType": "YulIdentifier",
																"src": "1854:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1739,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1735,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:13",
														"valueSize": 1
													}
												],
												"id": 1741,
												"nodeType": "InlineAssembly",
												"src": "1821:47:13"
											}
										]
									},
									"documentation": {
										"id": 1733,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:13",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "1708:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1734,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:13"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "1745:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1717_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1738,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1737,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1717,
														"src": "1745:11:13"
													},
													"referencedDeclaration": 1717,
													"src": "1745:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1717_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:13"
									},
									"scope": 1821,
									"src": "1684:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "2056:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:13",
													"nodeType": "YulBlock",
													"src": "2118:38:13",
													"statements": [
														{
															"nativeSrc": "2132:14:13",
															"nodeType": "YulAssignment",
															"src": "2132:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:13",
																"nodeType": "YulIdentifier",
																"src": "2142:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1750,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1746,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:13",
														"valueSize": 1
													}
												],
												"id": 1752,
												"nodeType": "InlineAssembly",
												"src": "2109:47:13"
											}
										]
									},
									"documentation": {
										"id": 1744,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:13",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "1996:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1745,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:13"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "2033:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1720_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1749,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1748,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1720,
														"src": "2033:11:13"
													},
													"referencedDeclaration": 1720,
													"src": "2033:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1720_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:13"
									},
									"scope": 1821,
									"src": "1972:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1764,
										"nodeType": "Block",
										"src": "2344:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:13",
													"nodeType": "YulBlock",
													"src": "2406:38:13",
													"statements": [
														{
															"nativeSrc": "2420:14:13",
															"nodeType": "YulAssignment",
															"src": "2420:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:13",
																"nodeType": "YulIdentifier",
																"src": "2430:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1761,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1757,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:13",
														"valueSize": 1
													}
												],
												"id": 1763,
												"nodeType": "InlineAssembly",
												"src": "2397:47:13"
											}
										]
									},
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:13",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "2284:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1756,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:13"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "2321:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1723_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1760,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1759,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1723,
														"src": "2321:11:13"
													},
													"referencedDeclaration": 1723,
													"src": "2321:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1723_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:13"
									},
									"scope": 1821,
									"src": "2260:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1775,
										"nodeType": "Block",
										"src": "2632:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:13",
													"nodeType": "YulBlock",
													"src": "2694:38:13",
													"statements": [
														{
															"nativeSrc": "2708:14:13",
															"nodeType": "YulAssignment",
															"src": "2708:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:13",
																"nodeType": "YulIdentifier",
																"src": "2718:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1768,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:13",
														"valueSize": 1
													}
												],
												"id": 1774,
												"nodeType": "InlineAssembly",
												"src": "2685:47:13"
											}
										]
									},
									"documentation": {
										"id": 1766,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:13",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "2572:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1767,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:13"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "2609:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1726_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1771,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1770,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1726,
														"src": "2609:11:13"
													},
													"referencedDeclaration": 1726,
													"src": "2609:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1726_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:13"
									},
									"scope": 1821,
									"src": "2548:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1786,
										"nodeType": "Block",
										"src": "2917:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:13",
													"nodeType": "YulBlock",
													"src": "2979:38:13",
													"statements": [
														{
															"nativeSrc": "2993:14:13",
															"nodeType": "YulAssignment",
															"src": "2993:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:13",
																"nodeType": "YulIdentifier",
																"src": "3003:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1783,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1779,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:13",
														"valueSize": 1
													}
												],
												"id": 1785,
												"nodeType": "InlineAssembly",
												"src": "2970:47:13"
											}
										]
									},
									"documentation": {
										"id": 1777,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:13",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "2858:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1778,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:13"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "2895:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1729_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1782,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1781,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "2895:10:13"
													},
													"referencedDeclaration": 1729,
													"src": "2895:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1729_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:13"
									},
									"scope": 1821,
									"src": "2835:188:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1797,
										"nodeType": "Block",
										"src": "3225:112:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:13",
													"nodeType": "YulBlock",
													"src": "3287:44:13",
													"statements": [
														{
															"nativeSrc": "3301:20:13",
															"nodeType": "YulAssignment",
															"src": "3301:20:13",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:13",
																"nodeType": "YulIdentifier",
																"src": "3311:10:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1794,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1790,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:13",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1796,
												"nodeType": "InlineAssembly",
												"src": "3278:53:13"
											}
										]
									},
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:13",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "3158:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1789,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:13"
									},
									"returnParameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "3203:20:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1729_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1793,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1792,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "3203:10:13"
													},
													"referencedDeclaration": 1729,
													"src": "3203:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1729_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:13"
									},
									"scope": 1821,
									"src": "3135:202:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "3513:106:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:13",
													"nodeType": "YulBlock",
													"src": "3575:38:13",
													"statements": [
														{
															"nativeSrc": "3589:14:13",
															"nodeType": "YulAssignment",
															"src": "3589:14:13",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:13",
																"nodeType": "YulIdentifier",
																"src": "3599:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1805,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1801,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:13",
														"valueSize": 1
													}
												],
												"id": 1807,
												"nodeType": "InlineAssembly",
												"src": "3566:47:13"
											}
										]
									},
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:13",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "3455:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1800,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:13"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "3492:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1732_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1804,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1803,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1732,
														"src": "3492:9:13"
													},
													"referencedDeclaration": 1732,
													"src": "3492:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1732_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:13"
									},
									"scope": 1821,
									"src": "3433:186:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "3816:112:13",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:13",
													"nodeType": "YulBlock",
													"src": "3878:44:13",
													"statements": [
														{
															"nativeSrc": "3892:20:13",
															"nodeType": "YulAssignment",
															"src": "3892:20:13",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:13",
																"nodeType": "YulIdentifier",
																"src": "3902:10:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1816,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1812,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:13",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1818,
												"nodeType": "InlineAssembly",
												"src": "3869:53:13"
											}
										]
									},
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:13",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "3751:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1811,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:13"
									},
									"returnParameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "3795:19:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1732_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1815,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1814,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1732,
														"src": "3795:9:13"
													},
													"referencedDeclaration": 1732,
													"src": "3795:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1732_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:13"
									},
									"scope": 1821,
									"src": "3729:199:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1822,
							"src": "1245:2685:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3779
						],
						"SignedMath": [
							3884
						],
						"Strings": [
							2076
						]
					},
					"id": 2077,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1823,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1825,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2077,
							"sourceUnit": 3780,
							"src": "127:37:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1824,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3779,
										"src": "135:4:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1827,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2077,
							"sourceUnit": 3885,
							"src": "165:49:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1826,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3884,
										"src": "173:10:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1828,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:14",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2076,
							"linearizedBaseContracts": [
								2076
							],
							"name": "Strings",
							"nameLocation": "259:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1831,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:14",
									"nodeType": "VariableDeclaration",
									"scope": 2076,
									"src": "273:56:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1829,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1830,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:14",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1834,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 2076,
									"src": "335:42:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1832,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1833,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1835,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:14",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1841,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "505:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "520:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:14"
									},
									"src": "470:66:14"
								},
								{
									"body": {
										"id": 1888,
										"nodeType": "Block",
										"src": "708:627:14",
										"statements": [
											{
												"id": 1887,
												"nodeType": "UncheckedBlock",
												"src": "718:611:14",
												"statements": [
													{
														"assignments": [
															1850
														],
														"declarations": [
															{
																"constant": false,
																"id": 1850,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 1887,
																"src": "742:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1849,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1857,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1853,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1844,
																		"src": "770:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1851,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3779,
																		"src": "759:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3779_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:14",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3599,
																	"src": "759:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:14"
													},
													{
														"assignments": [
															1859
														],
														"declarations": [
															{
																"constant": false,
																"id": 1859,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 1887,
																"src": "794:20:14",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1858,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1864,
														"initialValue": {
															"arguments": [
																{
																	"id": 1862,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1850,
																	"src": "828:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1860,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:14"
													},
													{
														"assignments": [
															1866
														],
														"declarations": [
															{
																"constant": false,
																"id": 1866,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:14",
																"nodeType": "VariableDeclaration",
																"scope": 1887,
																"src": "849:11:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1865,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1867,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:14"
													},
													{
														"AST": {
															"nativeSrc": "930:67:14",
															"nodeType": "YulBlock",
															"src": "930:67:14",
															"statements": [
																{
																	"nativeSrc": "948:35:14",
																	"nodeType": "YulAssignment",
																	"src": "948:35:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:14",
																						"nodeType": "YulLiteral",
																						"src": "971:2:14",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:14"
																				},
																				"nativeSrc": "967:15:14",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:14"
																		},
																		"nativeSrc": "955:28:14",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:14"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:14"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1859,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:14",
																"valueSize": 1
															},
															{
																"declaration": 1850,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:14",
																"valueSize": 1
															},
															{
																"declaration": 1866,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:14",
																"valueSize": 1
															}
														],
														"id": 1868,
														"nodeType": "InlineAssembly",
														"src": "921:76:14"
													},
													{
														"body": {
															"id": 1883,
															"nodeType": "Block",
															"src": "1023:269:14",
															"statements": [
																{
																	"expression": {
																		"id": 1871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:14",
																		"subExpression": {
																			"id": 1870,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1866,
																			"src": "1041:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1872,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:14"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:14",
																		"nodeType": "YulBlock",
																		"src": "1124:86:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:14",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:14",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:14"
																									},
																									"nativeSrc": "1164:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:14"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:14",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:14"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:14",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:14"
																							},
																							"nativeSrc": "1159:32:14",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:14",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:14"
																					},
																					"nativeSrc": "1146:46:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:14"
																				},
																				"nativeSrc": "1146:46:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:14"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1831,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:14",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1866,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:14",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1844,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:14",
																			"valueSize": 1
																		}
																	],
																	"id": 1873,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:14"
																},
																{
																	"expression": {
																		"id": 1876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1874,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1844,
																			"src": "1227:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1877,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:14"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1878,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1844,
																			"src": "1260:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1882,
																	"nodeType": "IfStatement",
																	"src": "1256:21:14",
																	"trueBody": {
																		"id": 1881,
																		"nodeType": "Break",
																		"src": "1272:5:14"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1884,
														"nodeType": "WhileStatement",
														"src": "1010:282:14"
													},
													{
														"expression": {
															"id": 1885,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "1312:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1848,
														"id": 1886,
														"nodeType": "Return",
														"src": "1305:13:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1842,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "655:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:14"
									},
									"returnParameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "693:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1846,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:14"
									},
									"scope": 2076,
									"src": "637:698:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1914,
										"nodeType": "Block",
										"src": "1511:92:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1900,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1892,
																	"src": "1542:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:14",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1909,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1892,
																			"src": "1588:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1907,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3884,
																			"src": "1573:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3884_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:14",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3883,
																		"src": "1573:14:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1906,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "1564:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1897,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:14",
																"typeDescriptions": {}
															}
														},
														"id": 1899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:14",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1896,
												"id": 1913,
												"nodeType": "Return",
												"src": "1521:75:14"
											}
										]
									},
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:14",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "1459:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1891,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:14"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "1496:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1894,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:14"
									},
									"scope": 2076,
									"src": "1435:168:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1934,
										"nodeType": "Block",
										"src": "1782:100:14",
										"statements": [
											{
												"id": 1933,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1924,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1918,
																	"src": "1835:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1927,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1918,
																				"src": "1854:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1925,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3779,
																				"src": "1842:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3779_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:14",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3721,
																			"src": "1842:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1923,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1935,
																	2018,
																	2038
																],
																"referencedDeclaration": 2018,
																"src": "1823:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1922,
														"id": 1932,
														"nodeType": "Return",
														"src": "1816:49:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1916,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "1729:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:14"
									},
									"returnParameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "1767:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1920,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:14"
									},
									"scope": 2076,
									"src": "1708:174:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2017,
										"nodeType": "Block",
										"src": "2095:435:14",
										"statements": [
											{
												"assignments": [
													1946
												],
												"declarations": [
													{
														"constant": false,
														"id": 1946,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2017,
														"src": "2105:18:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1945,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1948,
												"initialValue": {
													"id": 1947,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1938,
													"src": "2126:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:14"
											},
											{
												"assignments": [
													1950
												],
												"declarations": [
													{
														"constant": false,
														"id": 1950,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2017,
														"src": "2141:19:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1949,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1959,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1954,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1940,
																	"src": "2177:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1951,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:14"
											},
											{
												"expression": {
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1960,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "2198:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1962,
														"indexExpression": {
															"hexValue": "30",
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1965,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:14"
											},
											{
												"expression": {
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1966,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "2223:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1968,
														"indexExpression": {
															"hexValue": "31",
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1971,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:14"
											},
											{
												"body": {
													"id": 2000,
													"nodeType": "Block",
													"src": "2293:95:14",
													"statements": [
														{
															"expression": {
																"id": 1994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1986,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1950,
																		"src": "2307:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1988,
																	"indexExpression": {
																		"id": 1987,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1973,
																		"src": "2314:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1989,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1831,
																		"src": "2319:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1993,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1990,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1946,
																			"src": "2330:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1995,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:14"
														},
														{
															"expression": {
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1996,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1946,
																	"src": "2361:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1999,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1980,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1973,
														"src": "2281:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1981,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2001,
												"initializationExpression": {
													"assignments": [
														1973
													],
													"declarations": [
														{
															"constant": false,
															"id": 1973,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 2001,
															"src": "2253:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1972,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1979,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1975,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1940,
																"src": "2269:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:14"
												},
												"loopExpression": {
													"expression": {
														"id": 1984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:14",
														"subExpression": {
															"id": 1983,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "2290:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1985,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:14"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2002,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1946,
														"src": "2401:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2011,
												"nodeType": "IfStatement",
												"src": "2397:96:14",
												"trueBody": {
													"id": 2010,
													"nodeType": "Block",
													"src": "2418:75:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2006,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1938,
																		"src": "2468:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2007,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1940,
																		"src": "2475:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2005,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1841,
																	"src": "2439:28:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 2008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2009,
															"nodeType": "RevertStatement",
															"src": "2432:50:14"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2014,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "2516:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2013,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2012,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:14",
															"typeDescriptions": {}
														}
													},
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1944,
												"id": 2016,
												"nodeType": "Return",
												"src": "2502:21:14"
											}
										]
									},
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "2026:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "2041:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:14"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "2080:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1942,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:14"
									},
									"scope": 2076,
									"src": "2005:525:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "2762:75:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2031,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2021,
																			"src": "2807:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2029,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2027,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2034,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "2815:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2026,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1935,
															2018,
															2038
														],
														"referencedDeclaration": 2018,
														"src": "2779:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2025,
												"id": 2036,
												"nodeType": "Return",
												"src": "2772:58:14"
											}
										]
									},
									"documentation": {
										"id": 2019,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:14",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "2710:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:14"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "2747:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2023,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:14"
									},
									"scope": 2076,
									"src": "2689:148:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2074,
										"nodeType": "Block",
										"src": "2992:104:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2050,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2041,
																		"src": "3015:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2048,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:14",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2055,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2043,
																		"src": "3034:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2053,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 2056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:14",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2062,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2041,
																			"src": "3063:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2060,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2059,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2068,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2043,
																			"src": "3086:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2066,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2065,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2047,
												"id": 2073,
												"nodeType": "Return",
												"src": "3002:87:14"
											}
										]
									},
									"documentation": {
										"id": 2039,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:14",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "2929:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2040,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "2946:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2042,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:14"
									},
									"returnParameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "2986:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2045,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:14"
									},
									"scope": 2076,
									"src": "2914:182:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2077,
							"src": "251:2847:14",
							"usedErrors": [
								1841
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							2424
						]
					},
					"id": 2425,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2078,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2079,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:15",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 2424,
							"linearizedBaseContracts": [
								2424
							],
							"name": "ECDSA",
							"nameLocation": "352:5:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 2084,
									"members": [
										{
											"id": 2080,
											"name": "NoError",
											"nameLocation": "392:7:15",
											"nodeType": "EnumValue",
											"src": "392:7:15"
										},
										{
											"id": 2081,
											"name": "InvalidSignature",
											"nameLocation": "409:16:15",
											"nodeType": "EnumValue",
											"src": "409:16:15"
										},
										{
											"id": 2082,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:15",
											"nodeType": "EnumValue",
											"src": "435:22:15"
										},
										{
											"id": 2083,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:15",
											"nodeType": "EnumValue",
											"src": "467:17:15"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:15",
									"nodeType": "EnumDefinition",
									"src": "364:126:15"
								},
								{
									"documentation": {
										"id": 2085,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:15",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 2087,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:15"
									},
									"src": "564:30:15"
								},
								{
									"documentation": {
										"id": 2088,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:15",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 2092,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "699:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:15"
									},
									"src": "665:50:15"
								},
								{
									"documentation": {
										"id": 2093,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:15",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 2097,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "840:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2094,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:15"
									},
									"src": "811:40:15"
								},
								{
									"body": {
										"id": 2149,
										"nodeType": "Block",
										"src": "2242:653:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2112,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2102,
															"src": "2256:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2266:6:15",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2256:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 2114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2276:2:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2256:22:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2147,
													"nodeType": "Block",
													"src": "2781:108:15",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2136,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2811:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2803:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2134,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2803:7:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2803:10:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2138,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2084,
																			"src": "2815:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$2084_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2828:22:15",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2082,
																		"src": "2815:35:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$2084",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2142,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2102,
																					"src": "2860:9:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2870:6:15",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2860:16:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2852:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 2140,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2852:7:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2852:25:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2145,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2802:76:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2084_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2111,
															"id": 2146,
															"nodeType": "Return",
															"src": "2795:83:15"
														}
													]
												},
												"id": 2148,
												"nodeType": "IfStatement",
												"src": "2252:637:15",
												"trueBody": {
													"id": 2133,
													"nodeType": "Block",
													"src": "2280:495:15",
													"statements": [
														{
															"assignments": [
																2117
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2117,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2302:1:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 2133,
																	"src": "2294:9:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 2116,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2118,
															"nodeType": "VariableDeclarationStatement",
															"src": "2294:9:15"
														},
														{
															"assignments": [
																2120
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2120,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2325:1:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 2133,
																	"src": "2317:9:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 2119,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2317:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2121,
															"nodeType": "VariableDeclarationStatement",
															"src": "2317:9:15"
														},
														{
															"assignments": [
																2123
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2123,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2346:1:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 2133,
																	"src": "2340:7:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 2122,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2340:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2124,
															"nodeType": "VariableDeclarationStatement",
															"src": "2340:7:15"
														},
														{
															"AST": {
																"nativeSrc": "2548:171:15",
																"nodeType": "YulBlock",
																"src": "2548:171:15",
																"statements": [
																	{
																		"nativeSrc": "2566:32:15",
																		"nodeType": "YulAssignment",
																		"src": "2566:32:15",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2581:9:15",
																							"nodeType": "YulIdentifier",
																							"src": "2581:9:15"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2592:4:15",
																							"nodeType": "YulLiteral",
																							"src": "2592:4:15",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2577:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "2577:3:15"
																					},
																					"nativeSrc": "2577:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2577:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2571:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:15"
																			},
																			"nativeSrc": "2571:27:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2571:27:15"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2566:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "2566:1:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2615:32:15",
																		"nodeType": "YulAssignment",
																		"src": "2615:32:15",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2630:9:15",
																							"nodeType": "YulIdentifier",
																							"src": "2630:9:15"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2641:4:15",
																							"nodeType": "YulLiteral",
																							"src": "2641:4:15",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2626:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "2626:3:15"
																					},
																					"nativeSrc": "2626:20:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2626:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2620:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2620:5:15"
																			},
																			"nativeSrc": "2620:27:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2620:27:15"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2615:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "2615:1:15"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2664:41:15",
																		"nodeType": "YulAssignment",
																		"src": "2664:41:15",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2687:9:15",
																									"nodeType": "YulIdentifier",
																									"src": "2687:9:15"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2698:4:15",
																									"nodeType": "YulLiteral",
																									"src": "2698:4:15",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2683:3:15",
																								"nodeType": "YulIdentifier",
																								"src": "2683:3:15"
																							},
																							"nativeSrc": "2683:20:15",
																							"nodeType": "YulFunctionCall",
																							"src": "2683:20:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2677:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2677:5:15"
																					},
																					"nativeSrc": "2677:27:15",
																					"nodeType": "YulFunctionCall",
																					"src": "2677:27:15"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2669:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "2669:4:15"
																			},
																			"nativeSrc": "2669:36:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2669:36:15"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2664:1:15",
																				"nodeType": "YulIdentifier",
																				"src": "2664:1:15"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 2117,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2566:1:15",
																	"valueSize": 1
																},
																{
																	"declaration": 2120,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2615:1:15",
																	"valueSize": 1
																},
																{
																	"declaration": 2102,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2581:9:15",
																	"valueSize": 1
																},
																{
																	"declaration": 2102,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2630:9:15",
																	"valueSize": 1
																},
																{
																	"declaration": 2102,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2687:9:15",
																	"valueSize": 1
																},
																{
																	"declaration": 2123,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2664:1:15",
																	"valueSize": 1
																}
															],
															"id": 2125,
															"nodeType": "InlineAssembly",
															"src": "2539:180:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2127,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2100,
																		"src": "2750:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2128,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "2756:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 2129,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2117,
																		"src": "2759:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2130,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2120,
																		"src": "2762:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 2126,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2150,
																		2230,
																		2338
																	],
																	"referencedDeclaration": 2338,
																	"src": "2739:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2084_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2739:25:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2084_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2111,
															"id": 2132,
															"nodeType": "Return",
															"src": "2732:32:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2098,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:15",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 2150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2157:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "2149:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2099,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2176:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "2163:22:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2101,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2163:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:38:15"
									},
									"returnParameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "2210:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "2219:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2084",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2107,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2106,
														"name": "RecoverError",
														"nameLocations": [
															"2219:12:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2084,
														"src": "2219:12:15"
													},
													"referencedDeclaration": 2084,
													"src": "2219:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2084",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "2233:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:32:15"
									},
									"scope": 2424,
									"src": "2129:766:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2179,
										"nodeType": "Block",
										"src": "3789:168:15",
										"statements": [
											{
												"assignments": [
													2161,
													2164,
													2166
												],
												"declarations": [
													{
														"constant": false,
														"id": 2161,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3808:9:15",
														"nodeType": "VariableDeclaration",
														"scope": 2179,
														"src": "3800:17:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2160,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3800:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2164,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3832:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 2179,
														"src": "3819:18:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2084",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2163,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2162,
																"name": "RecoverError",
																"nameLocations": [
																	"3819:12:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2084,
																"src": "3819:12:15"
															},
															"referencedDeclaration": 2084,
															"src": "3819:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2084",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2166,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3847:8:15",
														"nodeType": "VariableDeclaration",
														"scope": 2179,
														"src": "3839:16:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2165,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3839:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2171,
												"initialValue": {
													"arguments": [
														{
															"id": 2168,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2153,
															"src": "3870:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2169,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2155,
															"src": "3876:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2167,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2150,
															2230,
															2338
														],
														"referencedDeclaration": 2150,
														"src": "3859:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2084_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:27:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2084_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3799:87:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2173,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "3908:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2084",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2174,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2166,
															"src": "3915:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$2084",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2172,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2423,
														"src": "3896:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$2084_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3896:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2176,
												"nodeType": "ExpressionStatement",
												"src": "3896:28:15"
											},
											{
												"expression": {
													"id": 2177,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2161,
													"src": "3941:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2159,
												"id": 2178,
												"nodeType": "Return",
												"src": "3934:16:15"
											}
										]
									},
									"documentation": {
										"id": 2151,
										"nodeType": "StructuredDocumentation",
										"src": "2901:796:15",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 2180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3711:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3727:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "3719:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3746:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "3733:22:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2154,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3733:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:38:15"
									},
									"returnParameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "3780:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:9:15"
									},
									"scope": 2424,
									"src": "3702:255:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2229,
										"nodeType": "Block",
										"src": "4285:342:15",
										"statements": [
											{
												"id": 2228,
												"nodeType": "UncheckedBlock",
												"src": "4295:326:15",
												"statements": [
													{
														"assignments": [
															2198
														],
														"declarations": [
															{
																"constant": false,
																"id": 2198,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4327:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 2228,
																"src": "4319:9:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 2197,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4319:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2205,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2199,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2187,
																"src": "4331:2:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 2202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4344:66:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 2201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4336:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 2200,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4336:7:15",
																		"typeDescriptions": {}
																	}
																},
																"id": 2203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4336:75:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4331:80:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4319:92:15"
													},
													{
														"assignments": [
															2207
														],
														"declarations": [
															{
																"constant": false,
																"id": 2207,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4528:1:15",
																"nodeType": "VariableDeclaration",
																"scope": 2228,
																"src": "4522:7:15",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 2206,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4522:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2220,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2215,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 2212,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2187,
																							"src": "4547:2:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 2211,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4539:7:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 2210,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4539:7:15",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4539:11:15",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 2214,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4554:3:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4539:18:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2216,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4538:20:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 2217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4561:2:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4538:25:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4532:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2208,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4532:5:15",
																	"typeDescriptions": {}
																}
															},
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4532:32:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4522:42:15"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2222,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2183,
																	"src": "4596:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2223,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2207,
																	"src": "4602:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 2224,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2185,
																	"src": "4605:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2225,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2198,
																	"src": "4608:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2221,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2150,
																	2230,
																	2338
																],
																"referencedDeclaration": 2338,
																"src": "4585:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2084_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4585:25:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2084_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 2196,
														"id": 2227,
														"nodeType": "Return",
														"src": "4578:32:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2181,
										"nodeType": "StructuredDocumentation",
										"src": "3963:205:15",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 2230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4182:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4201:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "4193:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2182,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4215:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "4207:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2184,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4226:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "4218:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2186,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:37:15"
									},
									"returnParameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "4253:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "4262:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2084",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2192,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2191,
														"name": "RecoverError",
														"nameLocations": [
															"4262:12:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2084,
														"src": "4262:12:15"
													},
													"referencedDeclaration": 2084,
													"src": "4262:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2084",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "4276:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4276:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:32:15"
									},
									"scope": 2424,
									"src": "4173:454:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2262,
										"nodeType": "Block",
										"src": "4840:164:15",
										"statements": [
											{
												"assignments": [
													2243,
													2246,
													2248
												],
												"declarations": [
													{
														"constant": false,
														"id": 2243,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4859:9:15",
														"nodeType": "VariableDeclaration",
														"scope": 2262,
														"src": "4851:17:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2242,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4851:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2246,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4883:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 2262,
														"src": "4870:18:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2084",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2245,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2244,
																"name": "RecoverError",
																"nameLocations": [
																	"4870:12:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2084,
																"src": "4870:12:15"
															},
															"referencedDeclaration": 2084,
															"src": "4870:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2084",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2248,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4898:8:15",
														"nodeType": "VariableDeclaration",
														"scope": 2262,
														"src": "4890:16:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2247,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4890:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2254,
												"initialValue": {
													"arguments": [
														{
															"id": 2250,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2233,
															"src": "4921:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2251,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2235,
															"src": "4927:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2252,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2237,
															"src": "4930:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2249,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2150,
															2230,
															2338
														],
														"referencedDeclaration": 2230,
														"src": "4910:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2084_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:23:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2084_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:83:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2256,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2246,
															"src": "4955:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2084",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2257,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2248,
															"src": "4962:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$2084",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2255,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2423,
														"src": "4943:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$2084_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4943:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2259,
												"nodeType": "ExpressionStatement",
												"src": "4943:28:15"
											},
											{
												"expression": {
													"id": 2260,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2243,
													"src": "4988:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2241,
												"id": 2261,
												"nodeType": "Return",
												"src": "4981:16:15"
											}
										]
									},
									"documentation": {
										"id": 2231,
										"nodeType": "StructuredDocumentation",
										"src": "4633:116:15",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 2263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4763:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4779:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "4771:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2232,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4771:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4793:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "4785:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2234,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4804:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "4796:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2236,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4770:37:15"
									},
									"returnParameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "4831:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4830:9:15"
									},
									"scope": 2424,
									"src": "4754:250:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2337,
										"nodeType": "Block",
										"src": "5298:1372:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2284,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "6194:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6186:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2282,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6186:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 2285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6186:10:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 2286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6199:66:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6186:79:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2298,
												"nodeType": "IfStatement",
												"src": "6182:164:15",
												"trueBody": {
													"id": 2297,
													"nodeType": "Block",
													"src": "6267:79:15",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6297:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6289:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2288,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6289:7:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6289:10:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2292,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2084,
																			"src": "6301:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$2084_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6314:17:15",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2083,
																		"src": "6301:30:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$2084",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 2294,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2272,
																		"src": "6333:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2295,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6288:47:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2084_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2281,
															"id": 2296,
															"nodeType": "Return",
															"src": "6281:54:15"
														}
													]
												}
											},
											{
												"assignments": [
													2300
												],
												"declarations": [
													{
														"constant": false,
														"id": 2300,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6448:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2337,
														"src": "6440:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2299,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6440:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2307,
												"initialValue": {
													"arguments": [
														{
															"id": 2302,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2266,
															"src": "6467:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2303,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2268,
															"src": "6473:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2304,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2270,
															"src": "6476:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2305,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2272,
															"src": "6479:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2301,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6457:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 2306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:24:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6440:41:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2308,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2300,
														"src": "6495:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6513:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6505:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2309,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6505:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 2312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6505:10:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6495:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2327,
												"nodeType": "IfStatement",
												"src": "6491:113:15",
												"trueBody": {
													"id": 2326,
													"nodeType": "Block",
													"src": "6517:87:15",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6547:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6539:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2314,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6539:7:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6539:10:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2318,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2084,
																			"src": "6551:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$2084_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6564:16:15",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2081,
																		"src": "6551:29:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$2084",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2322,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6590:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6582:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 2320,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6582:7:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6582:10:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2324,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6538:55:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2084_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2281,
															"id": 2325,
															"nodeType": "Return",
															"src": "6531:62:15"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 2328,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2300,
															"src": "6622:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2329,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2084,
																"src": "6630:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$2084_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6643:7:15",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2080,
															"src": "6630:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2084",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6660:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6652:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2331,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6652:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:10:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 2335,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6621:42:15",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2084_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 2281,
												"id": 2336,
												"nodeType": "Return",
												"src": "6614:49:15"
											}
										]
									},
									"documentation": {
										"id": 2264,
										"nodeType": "StructuredDocumentation",
										"src": "5010:125:15",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5149:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5177:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "5169:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2265,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5197:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "5191:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2267,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5191:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5216:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "5208:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2269,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5235:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "5227:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2271,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5159:83:15"
									},
									"returnParameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "5266:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5266:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "5275:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2084",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2277,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2276,
														"name": "RecoverError",
														"nameLocations": [
															"5275:12:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2084,
														"src": "5275:12:15"
													},
													"referencedDeclaration": 2084,
													"src": "5275:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2084",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "5289:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2279,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5265:32:15"
									},
									"scope": 2424,
									"src": "5140:1530:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2373,
										"nodeType": "Block",
										"src": "6897:166:15",
										"statements": [
											{
												"assignments": [
													2353,
													2356,
													2358
												],
												"declarations": [
													{
														"constant": false,
														"id": 2353,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6916:9:15",
														"nodeType": "VariableDeclaration",
														"scope": 2373,
														"src": "6908:17:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2352,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6908:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2356,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6940:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 2373,
														"src": "6927:18:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2084",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2355,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2354,
																"name": "RecoverError",
																"nameLocations": [
																	"6927:12:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2084,
																"src": "6927:12:15"
															},
															"referencedDeclaration": 2084,
															"src": "6927:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2084",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2358,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "6955:8:15",
														"nodeType": "VariableDeclaration",
														"scope": 2373,
														"src": "6947:16:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2357,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6947:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2365,
												"initialValue": {
													"arguments": [
														{
															"id": 2360,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "6978:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2361,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2343,
															"src": "6984:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2362,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2345,
															"src": "6987:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2363,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2347,
															"src": "6990:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2359,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2150,
															2230,
															2338
														],
														"referencedDeclaration": 2338,
														"src": "6967:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2084_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6967:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2084_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:85:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2367,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2356,
															"src": "7014:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2084",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2368,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2358,
															"src": "7021:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$2084",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2366,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2423,
														"src": "7002:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$2084_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7002:28:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2370,
												"nodeType": "ExpressionStatement",
												"src": "7002:28:15"
											},
											{
												"expression": {
													"id": 2371,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2353,
													"src": "7047:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2351,
												"id": 2372,
												"nodeType": "Return",
												"src": "7040:16:15"
											}
										]
									},
									"documentation": {
										"id": 2339,
										"nodeType": "StructuredDocumentation",
										"src": "6676:122:15",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6812:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6828:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "6820:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2340,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6820:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6840:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "6834:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2342,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6834:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6851:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "6843:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2344,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6862:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "6854:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2346,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6854:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:45:15"
									},
									"returnParameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "6888:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6888:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6887:9:15"
									},
									"scope": 2424,
									"src": "6803:260:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2422,
										"nodeType": "Block",
										"src": "7268:460:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$2084",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 2386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2383,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2378,
														"src": "7282:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2084",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2384,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2084,
															"src": "7291:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$2084_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 2385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7304:7:15",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2080,
														"src": "7291:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2084",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7282:29:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$2084",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 2392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2389,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2378,
															"src": "7378:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2084",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2390,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2084,
																"src": "7387:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$2084_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7400:16:15",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2081,
															"src": "7387:29:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2084",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7378:38:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$2084",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2397,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2378,
																"src": "7483:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$2084",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2398,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2084,
																	"src": "7492:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$2084_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 2399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7505:22:15",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2082,
																"src": "7492:35:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$2084",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7483:44:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$2084",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 2412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2409,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2378,
																	"src": "7617:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$2084",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2410,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2084,
																		"src": "7626:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$2084_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 2411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7639:17:15",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2083,
																	"src": "7626:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$2084",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7617:39:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2418,
															"nodeType": "IfStatement",
															"src": "7613:109:15",
															"trueBody": {
																"id": 2417,
																"nodeType": "Block",
																"src": "7658:64:15",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2414,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2380,
																					"src": "7702:8:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2413,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2097,
																				"src": "7679:22:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 2415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7679:32:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2416,
																		"nodeType": "RevertStatement",
																		"src": "7672:39:15"
																	}
																]
															}
														},
														"id": 2419,
														"nodeType": "IfStatement",
														"src": "7479:243:15",
														"trueBody": {
															"id": 2408,
															"nodeType": "Block",
															"src": "7529:78:15",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2404,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2380,
																						"src": "7586:8:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 2403,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7578:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2402,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7578:7:15",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2405,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7578:17:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2401,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2092,
																			"src": "7550:27:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 2406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7550:46:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2407,
																	"nodeType": "RevertStatement",
																	"src": "7543:53:15"
																}
															]
														}
													},
													"id": 2420,
													"nodeType": "IfStatement",
													"src": "7374:348:15",
													"trueBody": {
														"id": 2396,
														"nodeType": "Block",
														"src": "7418:55:15",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2393,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2087,
																		"src": "7439:21:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7439:23:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2395,
																"nodeType": "RevertStatement",
																"src": "7432:30:15"
															}
														]
													}
												},
												"id": 2421,
												"nodeType": "IfStatement",
												"src": "7278:444:15",
												"trueBody": {
													"id": 2388,
													"nodeType": "Block",
													"src": "7313:55:15",
													"statements": [
														{
															"functionReturnParameters": 2382,
															"id": 2387,
															"nodeType": "Return",
															"src": "7327:7:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2375,
										"nodeType": "StructuredDocumentation",
										"src": "7069:122:15",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 2423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7205:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7230:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "7217:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2084",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2377,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2376,
														"name": "RecoverError",
														"nameLocations": [
															"7217:12:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2084,
														"src": "7217:12:15"
													},
													"referencedDeclaration": 2084,
													"src": "7217:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2084",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7245:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "7237:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2379,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:38:15"
									},
									"returnParameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:15"
									},
									"scope": 2424,
									"src": "7196:532:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2425,
							"src": "344:7386:15",
							"usedErrors": [
								2087,
								2092,
								2097
							],
							"usedEvents": []
						}
					],
					"src": "112:7619:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
					"exportedSymbols": {
						"EIP712": [
							2651
						],
						"IERC5267": [
							128
						],
						"MessageHashUtils": [
							2725
						],
						"ShortString": [
							1500
						],
						"ShortStrings": [
							1711
						]
					},
					"id": 2652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2426,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
							"file": "./MessageHashUtils.sol",
							"id": 2428,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2652,
							"sourceUnit": 2726,
							"src": "139:56:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2427,
										"name": "MessageHashUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2725,
										"src": "147:16:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
							"file": "../ShortStrings.sol",
							"id": 2431,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2652,
							"sourceUnit": 1712,
							"src": "196:62:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2429,
										"name": "ShortStrings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1711,
										"src": "204:12:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2430,
										"name": "ShortString",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1500,
										"src": "218:11:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
							"file": "../../interfaces/IERC5267.sol",
							"id": 2433,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2652,
							"sourceUnit": 129,
							"src": "259:55:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2432,
										"name": "IERC5267",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 128,
										"src": "267:8:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2435,
										"name": "IERC5267",
										"nameLocations": [
											"1988:8:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 128,
										"src": "1988:8:16"
									},
									"id": 2436,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:8:16"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2434,
								"nodeType": "StructuredDocumentation",
								"src": "316:1643:16",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 2651,
							"linearizedBaseContracts": [
								2651,
								128
							],
							"name": "EIP712",
							"nameLocation": "1978:6:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2438,
									"libraryName": {
										"id": 2437,
										"name": "ShortStrings",
										"nameLocations": [
											"2009:12:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1711,
										"src": "2009:12:16"
									},
									"nodeType": "UsingForDirective",
									"src": "2003:25:16"
								},
								{
									"constant": true,
									"id": 2443,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "2059:9:16",
									"nodeType": "VariableDeclaration",
									"scope": 2651,
									"src": "2034:140:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2439,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2034:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 2441,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2089:84:16",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 2440,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2079:9:16",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2442,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2079:95:16",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2445,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "2399:22:16",
									"nodeType": "VariableDeclaration",
									"scope": 2651,
									"src": "2373:48:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2444,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2373:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2447,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "2453:14:16",
									"nodeType": "VariableDeclaration",
									"scope": 2651,
									"src": "2427:40:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2446,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2427:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2449,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "2499:11:16",
									"nodeType": "VariableDeclaration",
									"scope": 2651,
									"src": "2473:37:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2448,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2473:7:16",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2451,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "2543:11:16",
									"nodeType": "VariableDeclaration",
									"scope": 2651,
									"src": "2517:37:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2450,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2517:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2453,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "2586:14:16",
									"nodeType": "VariableDeclaration",
									"scope": 2651,
									"src": "2560:40:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2452,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2560:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2456,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "2637:5:16",
									"nodeType": "VariableDeclaration",
									"scope": 2651,
									"src": "2607:35:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 2455,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2454,
											"name": "ShortString",
											"nameLocations": [
												"2607:11:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1500,
											"src": "2607:11:16"
										},
										"referencedDeclaration": 1500,
										"src": "2607:11:16",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2459,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "2678:8:16",
									"nodeType": "VariableDeclaration",
									"scope": 2651,
									"src": "2648:38:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 2458,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2457,
											"name": "ShortString",
											"nameLocations": [
												"2648:11:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1500,
											"src": "2648:11:16"
										},
										"referencedDeclaration": 1500,
										"src": "2648:11:16",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2461,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "2707:13:16",
									"nodeType": "VariableDeclaration",
									"scope": 2651,
									"src": "2692:28:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2460,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2692:6:16",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2463,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "2741:16:16",
									"nodeType": "VariableDeclaration",
									"scope": 2651,
									"src": "2726:31:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2462,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2726:6:16",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2520,
										"nodeType": "Block",
										"src": "3383:376:16",
										"statements": [
											{
												"expression": {
													"id": 2476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2471,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2456,
														"src": "3393:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2474,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2461,
																"src": "3432:13:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 2472,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2466,
																"src": "3401:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 2473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3406:25:16",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1652,
															"src": "3401:30:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1500_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 2475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3401:45:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
															"typeString": "ShortString"
														}
													},
													"src": "3393:53:16",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
														"typeString": "ShortString"
													}
												},
												"id": 2477,
												"nodeType": "ExpressionStatement",
												"src": "3393:53:16"
											},
											{
												"expression": {
													"id": 2483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2478,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2459,
														"src": "3456:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2481,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2463,
																"src": "3501:16:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 2479,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2468,
																"src": "3467:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 2480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3475:25:16",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1652,
															"src": "3467:33:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1500_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 2482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3467:51:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
															"typeString": "ShortString"
														}
													},
													"src": "3456:62:16",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
														"typeString": "ShortString"
													}
												},
												"id": 2484,
												"nodeType": "ExpressionStatement",
												"src": "3456:62:16"
											},
											{
												"expression": {
													"id": 2492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2485,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2451,
														"src": "3528:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2489,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2466,
																		"src": "3558:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3552:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2487,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3552:5:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 2490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3552:11:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2486,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3542:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3542:22:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3528:36:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2493,
												"nodeType": "ExpressionStatement",
												"src": "3528:36:16"
											},
											{
												"expression": {
													"id": 2501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2494,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2453,
														"src": "3574:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2498,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2468,
																		"src": "3607:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3601:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2496,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3601:5:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 2499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3601:14:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2495,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3591:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3591:25:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3574:42:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2502,
												"nodeType": "ExpressionStatement",
												"src": "3574:42:16"
											},
											{
												"expression": {
													"id": 2506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2503,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2447,
														"src": "3627:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2504,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3644:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3650:7:16",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "3644:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3627:30:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2507,
												"nodeType": "ExpressionStatement",
												"src": "3627:30:16"
											},
											{
												"expression": {
													"id": 2511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2508,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2445,
														"src": "3667:22:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2509,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2568,
															"src": "3692:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 2510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3692:23:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3667:48:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2512,
												"nodeType": "ExpressionStatement",
												"src": "3667:48:16"
											},
											{
												"expression": {
													"id": 2518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2513,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2449,
														"src": "3725:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2516,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3747:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$2651",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$2651",
																	"typeString": "contract EIP712"
																}
															],
															"id": 2515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3739:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2514,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3739:7:16",
																"typeDescriptions": {}
															}
														},
														"id": 2517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3739:13:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3725:27:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2519,
												"nodeType": "ExpressionStatement",
												"src": "3725:27:16"
											}
										]
									},
									"documentation": {
										"id": 2464,
										"nodeType": "StructuredDocumentation",
										"src": "2764:559:16",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 2521,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3354:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2521,
												"src": "3340:18:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3340:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3374:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2521,
												"src": "3360:21:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3360:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:43:16"
									},
									"returnParameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:16"
									},
									"scope": 2651,
									"src": "3328:431:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2546,
										"nodeType": "Block",
										"src": "3907:200:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2529,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3929:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2651",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2651",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3921:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2527,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3921:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3921:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2531,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2449,
															"src": "3938:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3921:28:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2533,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3953:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3959:7:16",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "3953:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2535,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2447,
															"src": "3970:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3953:31:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3921:63:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2544,
													"nodeType": "Block",
													"src": "4046:55:16",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2541,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2568,
																	"src": "4067:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 2542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4067:23:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 2526,
															"id": 2543,
															"nodeType": "Return",
															"src": "4060:30:16"
														}
													]
												},
												"id": 2545,
												"nodeType": "IfStatement",
												"src": "3917:184:16",
												"trueBody": {
													"id": 2540,
													"nodeType": "Block",
													"src": "3986:54:16",
													"statements": [
														{
															"expression": {
																"id": 2538,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2445,
																"src": "4007:22:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 2526,
															"id": 2539,
															"nodeType": "Return",
															"src": "4000:29:16"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2522,
										"nodeType": "StructuredDocumentation",
										"src": "3765:75:16",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 2547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "3854:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3872:2:16"
									},
									"returnParameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "3898:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2524,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3898:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3897:9:16"
									},
									"scope": 2651,
									"src": "3845:262:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2567,
										"nodeType": "Block",
										"src": "4177:115:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2555,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2443,
																	"src": "4215:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2556,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2451,
																	"src": "4226:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2557,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2453,
																	"src": "4239:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2558,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4255:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4261:7:16",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "4255:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2562,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4278:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$2651",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$2651",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 2561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2560,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2553,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4204:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4208:6:16",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4204:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4204:80:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2552,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4194:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:91:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2551,
												"id": 2566,
												"nodeType": "Return",
												"src": "4187:98:16"
											}
										]
									},
									"id": 2568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "4122:21:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4143:2:16"
									},
									"returnParameters": {
										"id": 2551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "4168:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2549,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:9:16"
									},
									"scope": 2651,
									"src": "4113:179:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2583,
										"nodeType": "Block",
										"src": "5003:90:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2578,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2547,
																"src": "5053:18:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5053:20:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2580,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2571,
															"src": "5075:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2576,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2725,
															"src": "5020:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$2725_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 2577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5037:15:16",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2724,
														"src": "5020:32:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 2581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5020:66:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2575,
												"id": 2582,
												"nodeType": "Return",
												"src": "5013:73:16"
											}
										]
									},
									"documentation": {
										"id": 2569,
										"nodeType": "StructuredDocumentation",
										"src": "4298:614:16",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 2584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "4926:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "4951:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2584,
												"src": "4943:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2570,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:20:16"
									},
									"returnParameters": {
										"id": 2575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2584,
												"src": "4994:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2573,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:9:16"
									},
									"scope": 2651,
									"src": "4917:176:16",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										127
									],
									"body": {
										"id": 2625,
										"nodeType": "Block",
										"src": "5472:229:16",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 2603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5503:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2604,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2638,
																"src": "5533:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5533:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2606,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2650,
																"src": "5560:14:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5560:16:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2608,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5590:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5596:7:16",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5590:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2612,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5625:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2651",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2651",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 2611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5617:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2610,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5617:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5617:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5652:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5644:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2614,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5644:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5644:10:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5682:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2620,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "5668:13:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 2618,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5672:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2619,
																	"nodeType": "ArrayTypeName",
																	"src": "5672:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 2622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5668:16:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 2623,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5489:205:16",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 2602,
												"id": 2624,
												"nodeType": "Return",
												"src": "5482:212:16"
											}
										]
									},
									"documentation": {
										"id": 2585,
										"nodeType": "StructuredDocumentation",
										"src": "5099:40:16",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 2626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "5153:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5165:2:16"
									},
									"returnParameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "5249:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2626,
												"src": "5242:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 2587,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "5242:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5283:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2626,
												"src": "5269:18:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2589,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5269:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "5315:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2626,
												"src": "5301:21:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5301:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "5344:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2626,
												"src": "5336:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "5373:17:16",
												"nodeType": "VariableDeclaration",
												"scope": 2626,
												"src": "5365:25:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5412:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2626,
												"src": "5404:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2597,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5404:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "5447:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2626,
												"src": "5430:27:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2599,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5430:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2600,
													"nodeType": "ArrayTypeName",
													"src": "5430:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5228:239:16"
									},
									"scope": 2651,
									"src": "5144:557:16",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2637,
										"nodeType": "Block",
										"src": "6082:65:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2634,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2461,
															"src": "6126:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2632,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2456,
															"src": "6099:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
																"typeString": "ShortString"
															}
														},
														"id": 2633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6105:20:16",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1679,
														"src": "6099:26:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1500_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1500_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6099:41:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2631,
												"id": 2636,
												"nodeType": "Return",
												"src": "6092:48:16"
											}
										]
									},
									"documentation": {
										"id": 2627,
										"nodeType": "StructuredDocumentation",
										"src": "5707:256:16",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "6030:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6041:2:16"
									},
									"returnParameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "6067:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2629,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6067:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6066:15:16"
									},
									"scope": 2651,
									"src": "6021:126:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2649,
										"nodeType": "Block",
										"src": "6537:71:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2646,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2463,
															"src": "6584:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2644,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2459,
															"src": "6554:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$1500",
																"typeString": "ShortString"
															}
														},
														"id": 2645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6563:20:16",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1679,
														"src": "6554:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1500_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1500_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6554:47:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2643,
												"id": 2648,
												"nodeType": "Return",
												"src": "6547:54:16"
											}
										]
									},
									"documentation": {
										"id": 2639,
										"nodeType": "StructuredDocumentation",
										"src": "6153:262:16",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "6482:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6496:2:16"
									},
									"returnParameters": {
										"id": 2643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2650,
												"src": "6522:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2641,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6522:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:15:16"
									},
									"scope": 2651,
									"src": "6473:135:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2652,
							"src": "1960:4650:16",
							"usedErrors": [
								1508,
								1510
							],
							"usedEvents": [
								108
							]
						}
					],
					"src": "113:6498:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
					"exportedSymbols": {
						"MessageHashUtils": [
							2725
						],
						"Strings": [
							2076
						]
					},
					"id": 2726,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 2655,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2726,
							"sourceUnit": 2077,
							"src": "149:39:17",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2654,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2076,
										"src": "157:7:17",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2656,
								"nodeType": "StructuredDocumentation",
								"src": "190:330:17",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 2725,
							"linearizedBaseContracts": [
								2725
							],
							"name": "MessageHashUtils",
							"nameLocation": "529:16:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2665,
										"nodeType": "Block",
										"src": "1314:368:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1376:300:17",
													"nodeType": "YulBlock",
													"src": "1376:300:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1397:4:17",
																		"nodeType": "YulLiteral",
																		"src": "1397:4:17",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "1403:34:17",
																		"nodeType": "YulLiteral",
																		"src": "1403:34:17",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1390:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:17"
																},
																"nativeSrc": "1390:48:17",
																"nodeType": "YulFunctionCall",
																"src": "1390:48:17"
															},
															"nativeSrc": "1390:48:17",
															"nodeType": "YulExpressionStatement",
															"src": "1390:48:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1499:4:17",
																		"nodeType": "YulLiteral",
																		"src": "1499:4:17",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "1505:11:17",
																		"nodeType": "YulIdentifier",
																		"src": "1505:11:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1492:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:17"
																},
																"nativeSrc": "1492:25:17",
																"nodeType": "YulFunctionCall",
																"src": "1492:25:17"
															},
															"nativeSrc": "1492:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "1492:25:17"
														},
														{
															"nativeSrc": "1571:31:17",
															"nodeType": "YulAssignment",
															"src": "1571:31:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1591:4:17",
																		"nodeType": "YulLiteral",
																		"src": "1591:4:17",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1597:4:17",
																		"nodeType": "YulLiteral",
																		"src": "1597:4:17",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1581:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "1581:9:17"
																},
																"nativeSrc": "1581:21:17",
																"nodeType": "YulFunctionCall",
																"src": "1581:21:17"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "1571:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:17"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2662,
														"isOffset": false,
														"isSlot": false,
														"src": "1571:6:17",
														"valueSize": 1
													},
													{
														"declaration": 2659,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:11:17",
														"valueSize": 1
													}
												],
												"id": 2664,
												"nodeType": "InlineAssembly",
												"src": "1367:309:17"
											}
										]
									},
									"documentation": {
										"id": 2657,
										"nodeType": "StructuredDocumentation",
										"src": "552:665:17",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 2666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "1231:22:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "1262:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "1254:19:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2658,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:21:17"
									},
									"returnParameters": {
										"id": 2663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "1306:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "1298:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2661,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:16:17"
									},
									"scope": 2725,
									"src": "1222:460:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2691,
										"nodeType": "Block",
										"src": "2234:143:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 2678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2286:32:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2683,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2669,
																						"src": "2343:7:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 2684,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2351:6:17",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "2343:14:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2681,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "2326:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$2076_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 2682,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2334:8:17",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1889,
																				"src": "2326:16:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 2685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2326:32:17",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2320:5:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2679,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2320:5:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2320:39:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 2687,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2669,
																	"src": "2361:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2273:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2675,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2273:5:17",
																		"typeDescriptions": {}
																	}
																},
																"id": 2677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2279:6:17",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "2273:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2273:96:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2674,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2263:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2263:107:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2673,
												"id": 2690,
												"nodeType": "Return",
												"src": "2244:126:17"
											}
										]
									},
									"documentation": {
										"id": 2667,
										"nodeType": "StructuredDocumentation",
										"src": "1688:455:17",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 2692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "2157:22:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2193:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "2180:20:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2668,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2180:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:22:17"
									},
									"returnParameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2692,
												"src": "2225:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2671,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:9:17"
									},
									"scope": 2725,
									"src": "2148:229:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2711,
										"nodeType": "Block",
										"src": "2831:80:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 2705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2875:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 2706,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2695,
																	"src": "2887:9:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2707,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2697,
																	"src": "2898:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2703,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2858:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2862:12:17",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2858:16:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2858:45:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2702,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2848:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2848:56:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2701,
												"id": 2710,
												"nodeType": "Return",
												"src": "2841:63:17"
											}
										]
									},
									"documentation": {
										"id": 2693,
										"nodeType": "StructuredDocumentation",
										"src": "2383:332:17",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 2712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "2729:31:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2695,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "2769:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2712,
												"src": "2761:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2793:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2712,
												"src": "2780:17:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2696,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:38:17"
									},
									"returnParameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2712,
												"src": "2822:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2699,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2822:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2821:9:17"
									},
									"scope": 2725,
									"src": "2720:191:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2723,
										"nodeType": "Block",
										"src": "3462:292:17",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3524:224:17",
													"nodeType": "YulBlock",
													"src": "3524:224:17",
													"statements": [
														{
															"nativeSrc": "3538:22:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3538:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3555:4:17",
																		"nodeType": "YulLiteral",
																		"src": "3555:4:17",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3549:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "3549:5:17"
																},
																"nativeSrc": "3549:11:17",
																"nodeType": "YulFunctionCall",
																"src": "3549:11:17"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "3542:3:17",
																	"nodeType": "YulTypedName",
																	"src": "3542:3:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3580:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3580:3:17"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "3585:10:17",
																		"nodeType": "YulLiteral",
																		"src": "3585:10:17",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3573:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3573:6:17"
																},
																"nativeSrc": "3573:23:17",
																"nodeType": "YulFunctionCall",
																"src": "3573:23:17"
															},
															"nativeSrc": "3573:23:17",
															"nodeType": "YulExpressionStatement",
															"src": "3573:23:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3620:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "3620:3:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3625:4:17",
																				"nodeType": "YulLiteral",
																				"src": "3625:4:17",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3616:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3616:3:17"
																		},
																		"nativeSrc": "3616:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3616:14:17"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "3632:15:17",
																		"nodeType": "YulIdentifier",
																		"src": "3632:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3609:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:17"
																},
																"nativeSrc": "3609:39:17",
																"nodeType": "YulFunctionCall",
																"src": "3609:39:17"
															},
															"nativeSrc": "3609:39:17",
															"nodeType": "YulExpressionStatement",
															"src": "3609:39:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3672:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "3672:3:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3677:4:17",
																				"nodeType": "YulLiteral",
																				"src": "3677:4:17",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3668:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:17"
																		},
																		"nativeSrc": "3668:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3668:14:17"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "3684:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "3684:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3661:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3661:6:17"
																},
																"nativeSrc": "3661:34:17",
																"nodeType": "YulFunctionCall",
																"src": "3661:34:17"
															},
															"nativeSrc": "3661:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "3661:34:17"
														},
														{
															"nativeSrc": "3708:30:17",
															"nodeType": "YulAssignment",
															"src": "3708:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3728:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3728:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3733:4:17",
																		"nodeType": "YulLiteral",
																		"src": "3733:4:17",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3718:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "3718:9:17"
																},
																"nativeSrc": "3718:20:17",
																"nodeType": "YulFunctionCall",
																"src": "3718:20:17"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "3708:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3708:6:17"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2720,
														"isOffset": false,
														"isSlot": false,
														"src": "3708:6:17",
														"valueSize": 1
													},
													{
														"declaration": 2715,
														"isOffset": false,
														"isSlot": false,
														"src": "3632:15:17",
														"valueSize": 1
													},
													{
														"declaration": 2717,
														"isOffset": false,
														"isSlot": false,
														"src": "3684:10:17",
														"valueSize": 1
													}
												],
												"id": 2722,
												"nodeType": "InlineAssembly",
												"src": "3515:233:17"
											}
										]
									},
									"documentation": {
										"id": 2713,
										"nodeType": "StructuredDocumentation",
										"src": "2917:431:17",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 2724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "3362:15:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2715,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "3386:15:17",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "3378:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2714,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2717,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "3411:10:17",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "3403:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2716,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:45:17"
									},
									"returnParameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2720,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "3454:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "3446:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2719,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:16:17"
									},
									"scope": 2725,
									"src": "3353:401:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2726,
							"src": "521:3235:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3634:17"
				},
				"id": 17
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3779
						]
					},
					"id": 3780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2727,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:18"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2728,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:18",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3779,
							"linearizedBaseContracts": [
								3779
							],
							"name": "Math",
							"nameLocation": "211:4:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2729,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:18",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2731,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:18",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:18"
									},
									"src": "277:29:18"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2736,
									"members": [
										{
											"id": 2732,
											"name": "Floor",
											"nameLocation": "336:5:18",
											"nodeType": "EnumValue",
											"src": "336:5:18"
										},
										{
											"id": 2733,
											"name": "Ceil",
											"nameLocation": "379:4:18",
											"nodeType": "EnumValue",
											"src": "379:4:18"
										},
										{
											"id": 2734,
											"name": "Trunc",
											"nameLocation": "421:5:18",
											"nodeType": "EnumValue",
											"src": "421:5:18"
										},
										{
											"id": 2735,
											"name": "Expand",
											"nameLocation": "451:6:18",
											"nodeType": "EnumValue",
											"src": "451:6:18"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:18",
									"nodeType": "EnumDefinition",
									"src": "312:169:18"
								},
								{
									"body": {
										"id": 2767,
										"nodeType": "Block",
										"src": "661:140:18",
										"statements": [
											{
												"id": 2766,
												"nodeType": "UncheckedBlock",
												"src": "671:124:18",
												"statements": [
													{
														"assignments": [
															2749
														],
														"declarations": [
															{
																"constant": false,
																"id": 2749,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:18",
																"nodeType": "VariableDeclaration",
																"scope": 2766,
																"src": "695:9:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2748,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2753,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2750,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2739,
																"src": "707:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2751,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2741,
																"src": "711:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:18"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2754,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2749,
																"src": "730:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2755,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2739,
																"src": "734:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2761,
														"nodeType": "IfStatement",
														"src": "726:28:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2759,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2747,
															"id": 2760,
															"nodeType": "Return",
															"src": "737:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2763,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2749,
																	"src": "782:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2764,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2747,
														"id": 2765,
														"nodeType": "Return",
														"src": "768:16:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2737,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:18",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2739,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2768,
												"src": "601:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2741,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2768,
												"src": "612:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:18"
									},
									"returnParameters": {
										"id": 2747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2768,
												"src": "646:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2743,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2768,
												"src": "652:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:18"
									},
									"scope": 3779,
									"src": "585:216:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2795,
										"nodeType": "Block",
										"src": "984:113:18",
										"statements": [
											{
												"id": 2794,
												"nodeType": "UncheckedBlock",
												"src": "994:97:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2780,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2773,
																"src": "1022:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2781,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2771,
																"src": "1026:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2787,
														"nodeType": "IfStatement",
														"src": "1018:28:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2785,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2779,
															"id": 2786,
															"nodeType": "Return",
															"src": "1029:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2789,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2771,
																		"src": "1074:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2790,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2773,
																		"src": "1078:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2792,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2779,
														"id": 2793,
														"nodeType": "Return",
														"src": "1060:20:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2769,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:18",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2771,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "924:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "935:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:18"
									},
									"returnParameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "969:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2775,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2796,
												"src": "975:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:18"
									},
									"scope": 3779,
									"src": "908:189:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2837,
										"nodeType": "Block",
										"src": "1283:417:18",
										"statements": [
											{
												"id": 2836,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2808,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "1551:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2809,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2815,
														"nodeType": "IfStatement",
														"src": "1547:28:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2813,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2807,
															"id": 2814,
															"nodeType": "Return",
															"src": "1559:16:18"
														}
													},
													{
														"assignments": [
															2817
														],
														"declarations": [
															{
																"constant": false,
																"id": 2817,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:18",
																"nodeType": "VariableDeclaration",
																"scope": 2836,
																"src": "1589:9:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2816,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2821,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2818,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2799,
																"src": "1601:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2819,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2801,
																"src": "1605:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:18"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2822,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2817,
																	"src": "1624:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2823,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2799,
																	"src": "1628:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2825,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2801,
																"src": "1633:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2831,
														"nodeType": "IfStatement",
														"src": "1620:33:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2829,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2807,
															"id": 2830,
															"nodeType": "Return",
															"src": "1636:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2833,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2817,
																	"src": "1681:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2834,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2807,
														"id": 2835,
														"nodeType": "Return",
														"src": "1667:16:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2797,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:18",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2799,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "1223:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "1234:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:18"
									},
									"returnParameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "1268:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2803,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "1274:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:18"
									},
									"scope": 3779,
									"src": "1207:493:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2865,
										"nodeType": "Block",
										"src": "1887:114:18",
										"statements": [
											{
												"id": 2864,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2850,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2843,
																"src": "1925:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2857,
														"nodeType": "IfStatement",
														"src": "1921:29:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2855,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2849,
															"id": 2856,
															"nodeType": "Return",
															"src": "1933:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2859,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2841,
																		"src": "1978:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2860,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2843,
																		"src": "1982:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2862,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2849,
														"id": 2863,
														"nodeType": "Return",
														"src": "1964:20:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2839,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:18",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2841,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "1827:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "1838:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:18"
									},
									"returnParameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "1872:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2845,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2866,
												"src": "1878:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:18"
									},
									"scope": 3779,
									"src": "1811:190:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2893,
										"nodeType": "Block",
										"src": "2198:114:18",
										"statements": [
											{
												"id": 2892,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2878,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2871,
																"src": "2236:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2885,
														"nodeType": "IfStatement",
														"src": "2232:29:18",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2883,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2877,
															"id": 2884,
															"nodeType": "Return",
															"src": "2244:17:18"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2887,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2869,
																		"src": "2289:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2888,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2871,
																		"src": "2293:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2890,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2877,
														"id": 2891,
														"nodeType": "Return",
														"src": "2275:20:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2867,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:18",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2869,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "2138:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "2149:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:18"
									},
									"returnParameters": {
										"id": 2877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "2183:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "2189:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:18"
									},
									"scope": 3779,
									"src": "2122:190:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2911,
										"nodeType": "Block",
										"src": "2449:37:18",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2906,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2904,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2897,
															"src": "2466:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2905,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2899,
															"src": "2470:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2908,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2899,
														"src": "2478:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:18",
													"trueExpression": {
														"id": 2907,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2897,
														"src": "2474:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2903,
												"id": 2910,
												"nodeType": "Return",
												"src": "2459:20:18"
											}
										]
									},
									"documentation": {
										"id": 2895,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:18",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2897,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2912,
												"src": "2395:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2899,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2912,
												"src": "2406:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:18"
									},
									"returnParameters": {
										"id": 2903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2912,
												"src": "2440:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:18"
									},
									"scope": 3779,
									"src": "2382:104:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2929,
										"nodeType": "Block",
										"src": "2624:37:18",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2922,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2915,
															"src": "2641:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2923,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2917,
															"src": "2645:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2926,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2917,
														"src": "2653:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:18",
													"trueExpression": {
														"id": 2925,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2915,
														"src": "2649:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2921,
												"id": 2928,
												"nodeType": "Return",
												"src": "2634:20:18"
											}
										]
									},
									"documentation": {
										"id": 2913,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:18",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2915,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2930,
												"src": "2570:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2917,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2930,
												"src": "2581:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:18"
									},
									"returnParameters": {
										"id": 2921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2930,
												"src": "2615:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:18"
									},
									"scope": 3779,
									"src": "2557:104:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2952,
										"nodeType": "Block",
										"src": "2845:82:18",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2940,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2933,
																	"src": "2900:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2941,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2935,
																	"src": "2904:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2943,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2944,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2933,
																		"src": "2910:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2945,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2935,
																		"src": "2914:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2947,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2948,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2939,
												"id": 2951,
												"nodeType": "Return",
												"src": "2892:28:18"
											}
										]
									},
									"documentation": {
										"id": 2931,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:18",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2933,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "2791:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2935,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "2802:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:18"
									},
									"returnParameters": {
										"id": 2939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2953,
												"src": "2836:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:18"
									},
									"scope": 3779,
									"src": "2774:153:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2986,
										"nodeType": "Block",
										"src": "3219:260:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2963,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2958,
														"src": "3233:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2971,
												"nodeType": "IfStatement",
												"src": "3229:127:18",
												"trueBody": {
													"id": 2970,
													"nodeType": "Block",
													"src": "3241:115:18",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2966,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2956,
																	"src": "3340:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2967,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2958,
																	"src": "3344:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2962,
															"id": 2969,
															"nodeType": "Return",
															"src": "3333:12:18"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2972,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2956,
															"src": "3444:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2976,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2956,
																			"src": "3458:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2979,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2980,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2958,
																"src": "3467:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:18",
													"trueExpression": {
														"hexValue": "30",
														"id": 2975,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2962,
												"id": 2985,
												"nodeType": "Return",
												"src": "3437:35:18"
											}
										]
									},
									"documentation": {
										"id": 2954,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:18",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2956,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2987,
												"src": "3165:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2958,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 2987,
												"src": "3176:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:18"
									},
									"returnParameters": {
										"id": 2962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2987,
												"src": "3210:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:18"
									},
									"scope": 3779,
									"src": "3148:331:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3112,
										"nodeType": "Block",
										"src": "3901:4018:18",
										"statements": [
											{
												"id": 3111,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:18",
												"statements": [
													{
														"assignments": [
															3000
														],
														"declarations": [
															{
																"constant": false,
																"id": 3000,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:18",
																"nodeType": "VariableDeclaration",
																"scope": 3111,
																"src": "4232:13:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2999,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3004,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3001,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2990,
																"src": "4248:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 3002,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2992,
																"src": "4252:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:18"
													},
													{
														"assignments": [
															3006
														],
														"declarations": [
															{
																"constant": false,
																"id": 3006,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:18",
																"nodeType": "VariableDeclaration",
																"scope": 3111,
																"src": "4312:13:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3005,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3007,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:18"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:18",
															"nodeType": "YulBlock",
															"src": "4392:122:18",
															"statements": [
																{
																	"nativeSrc": "4410:30:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:18",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:18"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:18"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:18",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:18"
																				},
																				"nativeSrc": "4433:6:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:18"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:18"
																		},
																		"nativeSrc": "4420:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:18"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:18",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:18",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:18"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:18"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:18"
																				},
																				"nativeSrc": "4470:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:18"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:18"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:18"
																				},
																				"nativeSrc": "4486:13:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:18"
																		},
																		"nativeSrc": "4466:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:18"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:18"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 3000,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:18",
																"valueSize": 1
															},
															{
																"declaration": 3000,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:18",
																"valueSize": 1
															},
															{
																"declaration": 3006,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:18",
																"valueSize": 1
															},
															{
																"declaration": 2990,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:18",
																"valueSize": 1
															},
															{
																"declaration": 2992,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:18",
																"valueSize": 1
															}
														],
														"id": 3008,
														"nodeType": "InlineAssembly",
														"src": "4383:131:18"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3009,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3006,
																"src": "4595:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 3010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3017,
														"nodeType": "IfStatement",
														"src": "4591:368:18",
														"trueBody": {
															"id": 3016,
															"nodeType": "Block",
															"src": "4607:352:18",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3012,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3000,
																			"src": "4925:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 3013,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2994,
																			"src": "4933:11:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2998,
																	"id": 3015,
																	"nodeType": "Return",
																	"src": "4918:26:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3018,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2994,
																"src": "5065:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 3019,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3006,
																"src": "5080:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3025,
														"nodeType": "IfStatement",
														"src": "5061:88:18",
														"trueBody": {
															"id": 3024,
															"nodeType": "Block",
															"src": "5087:62:18",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 3021,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2731,
																			"src": "5112:20:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 3022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 3023,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:18"
																}
															]
														}
													},
													{
														"assignments": [
															3027
														],
														"declarations": [
															{
																"constant": false,
																"id": 3027,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:18",
																"nodeType": "VariableDeclaration",
																"scope": 3111,
																"src": "5404:17:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3026,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3028,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:18"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:18",
															"nodeType": "YulBlock",
															"src": "5444:291:18",
															"statements": [
																{
																	"nativeSrc": "5513:38:18",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:18",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:18"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:18",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:18"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:18",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:18"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:18"
																		},
																		"nativeSrc": "5526:25:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:18"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:18",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:18"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:18",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:18",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:18"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:18"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:18"
																				},
																				"nativeSrc": "5653:20:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:18"
																		},
																		"nativeSrc": "5642:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:18"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:18"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:18",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:18",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:18"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:18"
																		},
																		"nativeSrc": "5700:21:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:18"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:18"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2994,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:18",
																"valueSize": 1
															},
															{
																"declaration": 3000,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:18",
																"valueSize": 1
															},
															{
																"declaration": 3000,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:18",
																"valueSize": 1
															},
															{
																"declaration": 3000,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:18",
																"valueSize": 1
															},
															{
																"declaration": 3006,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:18",
																"valueSize": 1
															},
															{
																"declaration": 3006,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:18",
																"valueSize": 1
															},
															{
																"declaration": 3027,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:18",
																"valueSize": 1
															},
															{
																"declaration": 3027,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:18",
																"valueSize": 1
															},
															{
																"declaration": 3027,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:18",
																"valueSize": 1
															},
															{
																"declaration": 2990,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:18",
																"valueSize": 1
															},
															{
																"declaration": 2992,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:18",
																"valueSize": 1
															}
														],
														"id": 3029,
														"nodeType": "InlineAssembly",
														"src": "5435:300:18"
													},
													{
														"assignments": [
															3031
														],
														"declarations": [
															{
																"constant": false,
																"id": 3031,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:18",
																"nodeType": "VariableDeclaration",
																"scope": 3111,
																"src": "5939:12:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3030,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3038,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3032,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2994,
																"src": "5954:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 3033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 3034,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2994,
																			"src": "5973:11:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3036,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:18"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:18",
															"nodeType": "YulBlock",
															"src": "6008:362:18",
															"statements": [
																{
																	"nativeSrc": "6073:37:18",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:18",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:18",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:18"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:18"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:18"
																		},
																		"nativeSrc": "6088:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:18"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:18",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:18"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:18",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:18",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:18"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:18"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:18"
																		},
																		"nativeSrc": "6186:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:18"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:18",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:18"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:18",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:18",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:18",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:18",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:18"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:18"
																						},
																						"nativeSrc": "6333:12:18",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:18"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:18"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:18"
																				},
																				"nativeSrc": "6329:23:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:18",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:18",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:18"
																		},
																		"nativeSrc": "6325:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:18"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:18",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:18"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2994,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:18",
																"valueSize": 1
															},
															{
																"declaration": 2994,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:18",
																"valueSize": 1
															},
															{
																"declaration": 3000,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:18",
																"valueSize": 1
															},
															{
																"declaration": 3000,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:18",
																"valueSize": 1
															},
															{
																"declaration": 3031,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:18",
																"valueSize": 1
															},
															{
																"declaration": 3031,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:18",
																"valueSize": 1
															},
															{
																"declaration": 3031,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:18",
																"valueSize": 1
															},
															{
																"declaration": 3031,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:18",
																"valueSize": 1
															},
															{
																"declaration": 3031,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:18",
																"valueSize": 1
															}
														],
														"id": 3039,
														"nodeType": "InlineAssembly",
														"src": "5999:371:18"
													},
													{
														"expression": {
															"id": 3044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3040,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3000,
																"src": "6436:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3041,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3006,
																	"src": "6445:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3042,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3031,
																	"src": "6453:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3045,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:18"
													},
													{
														"assignments": [
															3047
														],
														"declarations": [
															{
																"constant": false,
																"id": 3047,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:18",
																"nodeType": "VariableDeclaration",
																"scope": 3111,
																"src": "6775:15:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3046,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3054,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 3048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 3049,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2994,
																			"src": "6798:11:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 3051,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 3052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:18"
													},
													{
														"expression": {
															"id": 3061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3055,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3047,
																"src": "7031:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3057,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2994,
																		"src": "7046:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3058,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3047,
																		"src": "7060:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3062,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:18"
													},
													{
														"expression": {
															"id": 3069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3063,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3047,
																"src": "7100:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3065,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2994,
																		"src": "7115:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3066,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3047,
																		"src": "7129:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3070,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:18"
													},
													{
														"expression": {
															"id": 3077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3071,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3047,
																"src": "7170:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3073,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2994,
																		"src": "7185:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3074,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3047,
																		"src": "7199:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3078,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:18"
													},
													{
														"expression": {
															"id": 3085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3079,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3047,
																"src": "7240:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3081,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2994,
																		"src": "7255:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3082,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3047,
																		"src": "7269:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3086,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:18"
													},
													{
														"expression": {
															"id": 3093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3087,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3047,
																"src": "7310:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3089,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2994,
																		"src": "7325:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3090,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3047,
																		"src": "7339:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3094,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:18"
													},
													{
														"expression": {
															"id": 3101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3095,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3047,
																"src": "7381:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 3096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3097,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2994,
																		"src": "7396:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3098,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3047,
																		"src": "7410:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3102,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:18"
													},
													{
														"expression": {
															"id": 3107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3103,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2997,
																"src": "7851:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3104,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3000,
																	"src": "7860:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3105,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3047,
																	"src": "7868:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3108,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:18"
													},
													{
														"expression": {
															"id": 3109,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2997,
															"src": "7896:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2998,
														"id": 3110,
														"nodeType": "Return",
														"src": "7889:13:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2988,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:18",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 3113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2990,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "3819:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2992,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "3830:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2994,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "3841:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:18"
									},
									"returnParameters": {
										"id": 2998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2997,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "3885:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:18"
									},
									"scope": 3779,
									"src": "3803:4116:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3155,
										"nodeType": "Block",
										"src": "8161:192:18",
										"statements": [
											{
												"assignments": [
													3129
												],
												"declarations": [
													{
														"constant": false,
														"id": 3129,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 3155,
														"src": "8171:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3128,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3135,
												"initialValue": {
													"arguments": [
														{
															"id": 3131,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3116,
															"src": "8195:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3132,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3118,
															"src": "8198:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3133,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3120,
															"src": "8201:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3130,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3113,
															3156
														],
														"referencedDeclaration": 3113,
														"src": "8188:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:18"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3137,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3123,
																"src": "8244:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2736",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2736",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 3136,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3778,
															"src": "8227:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2736_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 3138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3140,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3116,
																	"src": "8264:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3141,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3118,
																	"src": "8267:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3142,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3120,
																	"src": "8270:11:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3139,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 3144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3152,
												"nodeType": "IfStatement",
												"src": "8223:101:18",
												"trueBody": {
													"id": 3151,
													"nodeType": "Block",
													"src": "8288:36:18",
													"statements": [
														{
															"expression": {
																"id": 3149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3147,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3129,
																	"src": "8302:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 3148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3150,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:18"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3153,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3129,
													"src": "8340:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3127,
												"id": 3154,
												"nodeType": "Return",
												"src": "8333:13:18"
											}
										]
									},
									"documentation": {
										"id": 3114,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:18",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 3156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3116,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3156,
												"src": "8067:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3118,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3156,
												"src": "8078:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3120,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 3156,
												"src": "8089:19:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3123,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3156,
												"src": "8110:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2736",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3122,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3121,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2736,
														"src": "8110:8:18"
													},
													"referencedDeclaration": 2736,
													"src": "8110:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2736",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:18"
									},
									"returnParameters": {
										"id": 3127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3156,
												"src": "8152:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:18"
									},
									"scope": 3779,
									"src": "8051:302:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3267,
										"nodeType": "Block",
										"src": "8644:1585:18",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3164,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3159,
														"src": "8658:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3170,
												"nodeType": "IfStatement",
												"src": "8654:45:18",
												"trueBody": {
													"id": 3169,
													"nodeType": "Block",
													"src": "8666:33:18",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 3167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 3163,
															"id": 3168,
															"nodeType": "Return",
															"src": "8680:8:18"
														}
													]
												}
											},
											{
												"assignments": [
													3172
												],
												"declarations": [
													{
														"constant": false,
														"id": 3172,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 3267,
														"src": "9378:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3171,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3181,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 3173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3175,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3159,
																			"src": "9406:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3174,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			3435,
																			3470
																		],
																		"referencedDeclaration": 3435,
																		"src": "9401:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3179,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:18"
											},
											{
												"id": 3266,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:18",
												"statements": [
													{
														"expression": {
															"id": 3191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3182,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3172,
																"src": "9839:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3183,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3172,
																				"src": "9849:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3186,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3184,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3159,
																					"src": "9858:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3185,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3172,
																					"src": "9862:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3188,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3192,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:18"
													},
													{
														"expression": {
															"id": 3202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3193,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3172,
																"src": "9888:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3194,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3172,
																				"src": "9898:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3197,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3195,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3159,
																					"src": "9907:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3196,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3172,
																					"src": "9911:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3199,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3203,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:18"
													},
													{
														"expression": {
															"id": 3213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3204,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3172,
																"src": "9937:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3205,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3172,
																				"src": "9947:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3208,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3206,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3159,
																					"src": "9956:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3207,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3172,
																					"src": "9960:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3210,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3214,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:18"
													},
													{
														"expression": {
															"id": 3224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3215,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3172,
																"src": "9986:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3216,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3172,
																				"src": "9996:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3217,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3159,
																					"src": "10005:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3218,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3172,
																					"src": "10009:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3221,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3225,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:18"
													},
													{
														"expression": {
															"id": 3235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3226,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3172,
																"src": "10035:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3227,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3172,
																				"src": "10045:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3228,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3159,
																					"src": "10054:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3229,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3172,
																					"src": "10058:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3232,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3236,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:18"
													},
													{
														"expression": {
															"id": 3246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3237,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3172,
																"src": "10084:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3238,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3172,
																				"src": "10094:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3241,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3239,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3159,
																					"src": "10103:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3240,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3172,
																					"src": "10107:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3243,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3247,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:18"
													},
													{
														"expression": {
															"id": 3257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3248,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3172,
																"src": "10133:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3249,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3172,
																				"src": "10143:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3252,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3250,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3159,
																					"src": "10152:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 3251,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3172,
																					"src": "10156:6:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3254,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3258,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:18"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 3260,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3172,
																	"src": "10193:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3261,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3159,
																		"src": "10201:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 3262,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3172,
																		"src": "10205:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3259,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2930,
																"src": "10189:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3163,
														"id": 3265,
														"nodeType": "Return",
														"src": "10182:30:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3157,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:18",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 3268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3159,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3268,
												"src": "8601:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:18"
									},
									"returnParameters": {
										"id": 3163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3268,
												"src": "8635:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:18"
									},
									"scope": 3779,
									"src": "8587:1642:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3302,
										"nodeType": "Block",
										"src": "10405:164:18",
										"statements": [
											{
												"id": 3301,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:18",
												"statements": [
													{
														"assignments": [
															3280
														],
														"declarations": [
															{
																"constant": false,
																"id": 3280,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:18",
																"nodeType": "VariableDeclaration",
																"scope": 3301,
																"src": "10439:14:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3279,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3284,
														"initialValue": {
															"arguments": [
																{
																	"id": 3282,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3271,
																	"src": "10461:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3281,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3268,
																	3303
																],
																"referencedDeclaration": 3268,
																"src": "10456:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:18"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3299,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3285,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3280,
																"src": "10484:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3287,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3274,
																						"src": "10511:8:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2736",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2736",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3286,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3778,
																					"src": "10494:16:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2736_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3288,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3293,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3291,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3289,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3280,
																						"src": "10524:6:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 3290,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3280,
																						"src": "10533:6:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3292,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3271,
																					"src": "10542:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:18",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3298,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3278,
														"id": 3300,
														"nodeType": "Return",
														"src": "10477:75:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3269,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:18",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 3303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:18",
												"nodeType": "VariableDeclaration",
												"scope": 3303,
												"src": "10343:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3274,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3303,
												"src": "10354:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2736",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3273,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3272,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2736,
														"src": "10354:8:18"
													},
													"referencedDeclaration": 2736,
													"src": "10354:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2736",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:18"
									},
									"returnParameters": {
										"id": 3278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3303,
												"src": "10396:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:18"
									},
									"scope": 3779,
									"src": "10329:240:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3434,
										"nodeType": "Block",
										"src": "10760:922:18",
										"statements": [
											{
												"assignments": [
													3312
												],
												"declarations": [
													{
														"constant": false,
														"id": 3312,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 3434,
														"src": "10770:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3311,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3314,
												"initialValue": {
													"hexValue": "30",
													"id": 3313,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:18",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:18"
											},
											{
												"id": 3431,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3315,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3306,
																	"src": "10826:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3329,
														"nodeType": "IfStatement",
														"src": "10822:99:18",
														"trueBody": {
															"id": 3328,
															"nodeType": "Block",
															"src": "10844:77:18",
															"statements": [
																{
																	"expression": {
																		"id": 3322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3320,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3306,
																			"src": "10862:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3323,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:18"
																},
																{
																	"expression": {
																		"id": 3326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3324,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3312,
																			"src": "10893:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3327,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3330,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3306,
																	"src": "10938:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3344,
														"nodeType": "IfStatement",
														"src": "10934:96:18",
														"trueBody": {
															"id": 3343,
															"nodeType": "Block",
															"src": "10955:75:18",
															"statements": [
																{
																	"expression": {
																		"id": 3337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3335,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3306,
																			"src": "10973:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3338,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:18"
																},
																{
																	"expression": {
																		"id": 3341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3339,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3312,
																			"src": "11003:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3342,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3345,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3306,
																	"src": "11047:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3359,
														"nodeType": "IfStatement",
														"src": "11043:96:18",
														"trueBody": {
															"id": 3358,
															"nodeType": "Block",
															"src": "11064:75:18",
															"statements": [
																{
																	"expression": {
																		"id": 3352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3350,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3306,
																			"src": "11082:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3353,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:18"
																},
																{
																	"expression": {
																		"id": 3356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3354,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3312,
																			"src": "11112:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3357,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3360,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3306,
																	"src": "11156:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3374,
														"nodeType": "IfStatement",
														"src": "11152:96:18",
														"trueBody": {
															"id": 3373,
															"nodeType": "Block",
															"src": "11173:75:18",
															"statements": [
																{
																	"expression": {
																		"id": 3367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3365,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3306,
																			"src": "11191:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3368,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:18"
																},
																{
																	"expression": {
																		"id": 3371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3369,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3312,
																			"src": "11221:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3372,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3375,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3306,
																	"src": "11265:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3389,
														"nodeType": "IfStatement",
														"src": "11261:93:18",
														"trueBody": {
															"id": 3388,
															"nodeType": "Block",
															"src": "11281:73:18",
															"statements": [
																{
																	"expression": {
																		"id": 3382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3380,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3306,
																			"src": "11299:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3383,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:18"
																},
																{
																	"expression": {
																		"id": 3386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3384,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3312,
																			"src": "11328:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3387,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3390,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3306,
																	"src": "11371:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3404,
														"nodeType": "IfStatement",
														"src": "11367:93:18",
														"trueBody": {
															"id": 3403,
															"nodeType": "Block",
															"src": "11387:73:18",
															"statements": [
																{
																	"expression": {
																		"id": 3397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3395,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3306,
																			"src": "11405:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3398,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:18"
																},
																{
																	"expression": {
																		"id": 3401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3399,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3312,
																			"src": "11434:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3402,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3405,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3306,
																	"src": "11477:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3419,
														"nodeType": "IfStatement",
														"src": "11473:93:18",
														"trueBody": {
															"id": 3418,
															"nodeType": "Block",
															"src": "11493:73:18",
															"statements": [
																{
																	"expression": {
																		"id": 3412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3410,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3306,
																			"src": "11511:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3413,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:18"
																},
																{
																	"expression": {
																		"id": 3416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3414,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3312,
																			"src": "11540:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3417,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3420,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3306,
																	"src": "11583:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3430,
														"nodeType": "IfStatement",
														"src": "11579:64:18",
														"trueBody": {
															"id": 3429,
															"nodeType": "Block",
															"src": "11599:44:18",
															"statements": [
																{
																	"expression": {
																		"id": 3427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3425,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3312,
																			"src": "11617:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3428,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:18"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3432,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3312,
													"src": "11669:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3310,
												"id": 3433,
												"nodeType": "Return",
												"src": "11662:13:18"
											}
										]
									},
									"documentation": {
										"id": 3304,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:18",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3306,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3435,
												"src": "10713:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:18"
									},
									"returnParameters": {
										"id": 3310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3435,
												"src": "10751:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:18"
									},
									"scope": 3779,
									"src": "10699:983:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3469,
										"nodeType": "Block",
										"src": "11915:168:18",
										"statements": [
											{
												"id": 3468,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:18",
												"statements": [
													{
														"assignments": [
															3447
														],
														"declarations": [
															{
																"constant": false,
																"id": 3447,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:18",
																"nodeType": "VariableDeclaration",
																"scope": 3468,
																"src": "11949:14:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3446,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3451,
														"initialValue": {
															"arguments": [
																{
																	"id": 3449,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3438,
																	"src": "11971:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3448,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3435,
																	3470
																],
																"referencedDeclaration": 3435,
																"src": "11966:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:18"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3452,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3447,
																"src": "11998:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3454,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3441,
																						"src": "12025:8:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2736",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2736",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3453,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3778,
																					"src": "12008:16:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2736_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3455,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3458,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3456,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3457,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3447,
																						"src": "12043:6:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3459,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3438,
																					"src": "12052:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:18",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3465,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3445,
														"id": 3467,
														"nodeType": "Return",
														"src": "11991:75:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3436,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:18",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3470,
												"src": "11849:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3441,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3470,
												"src": "11864:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2736",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3440,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3439,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2736,
														"src": "11864:8:18"
													},
													"referencedDeclaration": 2736,
													"src": "11864:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2736",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:18"
									},
									"returnParameters": {
										"id": 3445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3470,
												"src": "11906:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:18"
									},
									"scope": 3779,
									"src": "11835:248:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3598,
										"nodeType": "Block",
										"src": "12276:854:18",
										"statements": [
											{
												"assignments": [
													3479
												],
												"declarations": [
													{
														"constant": false,
														"id": 3479,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 3598,
														"src": "12286:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3478,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3481,
												"initialValue": {
													"hexValue": "30",
													"id": 3480,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:18",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:18"
											},
											{
												"id": 3595,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3482,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3473,
																"src": "12342:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3498,
														"nodeType": "IfStatement",
														"src": "12338:103:18",
														"trueBody": {
															"id": 3497,
															"nodeType": "Block",
															"src": "12361:80:18",
															"statements": [
																{
																	"expression": {
																		"id": 3491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3487,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3473,
																			"src": "12379:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3489,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3492,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:18"
																},
																{
																	"expression": {
																		"id": 3495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3493,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3479,
																			"src": "12414:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3496,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3499,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3473,
																"src": "12458:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3515,
														"nodeType": "IfStatement",
														"src": "12454:103:18",
														"trueBody": {
															"id": 3514,
															"nodeType": "Block",
															"src": "12477:80:18",
															"statements": [
																{
																	"expression": {
																		"id": 3508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3504,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3473,
																			"src": "12495:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3509,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:18"
																},
																{
																	"expression": {
																		"id": 3512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3510,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3479,
																			"src": "12530:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3513,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3516,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3473,
																"src": "12574:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3532,
														"nodeType": "IfStatement",
														"src": "12570:103:18",
														"trueBody": {
															"id": 3531,
															"nodeType": "Block",
															"src": "12593:80:18",
															"statements": [
																{
																	"expression": {
																		"id": 3525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3521,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3473,
																			"src": "12611:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3522,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3526,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:18"
																},
																{
																	"expression": {
																		"id": 3529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3527,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3479,
																			"src": "12646:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3530,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3473,
																"src": "12690:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3549,
														"nodeType": "IfStatement",
														"src": "12686:100:18",
														"trueBody": {
															"id": 3548,
															"nodeType": "Block",
															"src": "12708:78:18",
															"statements": [
																{
																	"expression": {
																		"id": 3542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3538,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3473,
																			"src": "12726:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3539,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3543,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:18"
																},
																{
																	"expression": {
																		"id": 3546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3544,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3479,
																			"src": "12760:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3547,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3550,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3473,
																"src": "12803:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3566,
														"nodeType": "IfStatement",
														"src": "12799:100:18",
														"trueBody": {
															"id": 3565,
															"nodeType": "Block",
															"src": "12821:78:18",
															"statements": [
																{
																	"expression": {
																		"id": 3559,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3555,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3473,
																			"src": "12839:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3560,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:18"
																},
																{
																	"expression": {
																		"id": 3563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3561,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3479,
																			"src": "12873:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3564,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3567,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3473,
																"src": "12916:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3583,
														"nodeType": "IfStatement",
														"src": "12912:100:18",
														"trueBody": {
															"id": 3582,
															"nodeType": "Block",
															"src": "12934:78:18",
															"statements": [
																{
																	"expression": {
																		"id": 3576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3572,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3473,
																			"src": "12952:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3577,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:18"
																},
																{
																	"expression": {
																		"id": 3580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3578,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3479,
																			"src": "12986:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3581,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3584,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3473,
																"src": "13029:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3594,
														"nodeType": "IfStatement",
														"src": "13025:66:18",
														"trueBody": {
															"id": 3593,
															"nodeType": "Block",
															"src": "13047:44:18",
															"statements": [
																{
																	"expression": {
																		"id": 3591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3589,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3479,
																			"src": "13065:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3592,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:18"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3596,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3479,
													"src": "13117:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3477,
												"id": 3597,
												"nodeType": "Return",
												"src": "13110:13:18"
											}
										]
									},
									"documentation": {
										"id": 3471,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:18",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3473,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3599,
												"src": "12229:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:18"
									},
									"returnParameters": {
										"id": 3477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3599,
												"src": "12267:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:18"
									},
									"scope": 3779,
									"src": "12214:916:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3633,
										"nodeType": "Block",
										"src": "13365:170:18",
										"statements": [
											{
												"id": 3632,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:18",
												"statements": [
													{
														"assignments": [
															3611
														],
														"declarations": [
															{
																"constant": false,
																"id": 3611,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:18",
																"nodeType": "VariableDeclaration",
																"scope": 3632,
																"src": "13399:14:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3610,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3615,
														"initialValue": {
															"arguments": [
																{
																	"id": 3613,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3602,
																	"src": "13422:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3612,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3599,
																	3634
																],
																"referencedDeclaration": 3599,
																"src": "13416:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:18"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3616,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3611,
																"src": "13449:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3618,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3605,
																						"src": "13476:8:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2736",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2736",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3617,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3778,
																					"src": "13459:16:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2736_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3622,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3620,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3621,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3611,
																						"src": "13495:6:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3623,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3602,
																					"src": "13504:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:18",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3629,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3609,
														"id": 3631,
														"nodeType": "Return",
														"src": "13442:76:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3600,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:18",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3602,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3634,
												"src": "13299:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3605,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3634,
												"src": "13314:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2736",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3604,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3603,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2736,
														"src": "13314:8:18"
													},
													"referencedDeclaration": 2736,
													"src": "13314:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2736",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:18"
									},
									"returnParameters": {
										"id": 3609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3634,
												"src": "13356:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:18"
									},
									"scope": 3779,
									"src": "13284:251:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3720,
										"nodeType": "Block",
										"src": "13855:600:18",
										"statements": [
											{
												"assignments": [
													3643
												],
												"declarations": [
													{
														"constant": false,
														"id": 3643,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 3720,
														"src": "13865:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3642,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3645,
												"initialValue": {
													"hexValue": "30",
													"id": 3644,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:18",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:18"
											},
											{
												"id": 3717,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:18",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3646,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3637,
																	"src": "13921:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3660,
														"nodeType": "IfStatement",
														"src": "13917:98:18",
														"trueBody": {
															"id": 3659,
															"nodeType": "Block",
															"src": "13939:76:18",
															"statements": [
																{
																	"expression": {
																		"id": 3653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3651,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3637,
																			"src": "13957:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3654,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:18"
																},
																{
																	"expression": {
																		"id": 3657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3655,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3643,
																			"src": "13988:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3658,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3661,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3637,
																	"src": "14032:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3675,
														"nodeType": "IfStatement",
														"src": "14028:95:18",
														"trueBody": {
															"id": 3674,
															"nodeType": "Block",
															"src": "14049:74:18",
															"statements": [
																{
																	"expression": {
																		"id": 3668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3666,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3637,
																			"src": "14067:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3669,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:18"
																},
																{
																	"expression": {
																		"id": 3672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3670,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3643,
																			"src": "14097:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3673,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3676,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3637,
																	"src": "14140:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3690,
														"nodeType": "IfStatement",
														"src": "14136:95:18",
														"trueBody": {
															"id": 3689,
															"nodeType": "Block",
															"src": "14157:74:18",
															"statements": [
																{
																	"expression": {
																		"id": 3683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3681,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3637,
																			"src": "14175:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3684,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:18"
																},
																{
																	"expression": {
																		"id": 3687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3685,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3643,
																			"src": "14205:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3688,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3691,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3637,
																	"src": "14248:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3705,
														"nodeType": "IfStatement",
														"src": "14244:95:18",
														"trueBody": {
															"id": 3704,
															"nodeType": "Block",
															"src": "14265:74:18",
															"statements": [
																{
																	"expression": {
																		"id": 3698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3696,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3637,
																			"src": "14283:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3699,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:18"
																},
																{
																	"expression": {
																		"id": 3702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3700,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3643,
																			"src": "14313:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3703,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:18"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3706,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3637,
																	"src": "14356:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3716,
														"nodeType": "IfStatement",
														"src": "14352:64:18",
														"trueBody": {
															"id": 3715,
															"nodeType": "Block",
															"src": "14372:44:18",
															"statements": [
																{
																	"expression": {
																		"id": 3713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3711,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3643,
																			"src": "14390:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3714,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:18"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3718,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3643,
													"src": "14442:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3641,
												"id": 3719,
												"nodeType": "Return",
												"src": "14435:13:18"
											}
										]
									},
									"documentation": {
										"id": 3635,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:18",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3637,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3721,
												"src": "13808:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:18"
									},
									"returnParameters": {
										"id": 3641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3721,
												"src": "13846:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:18"
									},
									"scope": 3779,
									"src": "13792:663:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3758,
										"nodeType": "Block",
										"src": "14692:177:18",
										"statements": [
											{
												"id": 3757,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:18",
												"statements": [
													{
														"assignments": [
															3733
														],
														"declarations": [
															{
																"constant": false,
																"id": 3733,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:18",
																"nodeType": "VariableDeclaration",
																"scope": 3757,
																"src": "14726:14:18",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3732,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3737,
														"initialValue": {
															"arguments": [
																{
																	"id": 3735,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3724,
																	"src": "14750:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3734,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3721,
																	3759
																],
																"referencedDeclaration": 3721,
																"src": "14743:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:18"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3738,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3733,
																"src": "14777:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3740,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3727,
																						"src": "14804:8:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2736",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2736",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3739,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3778,
																					"src": "14787:16:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2736_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3741,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:18",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3749,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3747,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3742,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3745,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3743,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3733,
																									"src": "14823:6:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3744,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:18",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:18",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3746,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:18",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3748,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3724,
																					"src": "14838:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:18",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3754,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3731,
														"id": 3756,
														"nodeType": "Return",
														"src": "14770:82:18"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3722,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:18",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3724,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3759,
												"src": "14626:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3727,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3759,
												"src": "14641:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2736",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3726,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3725,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2736,
														"src": "14641:8:18"
													},
													"referencedDeclaration": 2736,
													"src": "14641:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2736",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:18"
									},
									"returnParameters": {
										"id": 3731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3759,
												"src": "14683:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:18"
									},
									"scope": 3779,
									"src": "14610:259:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3777,
										"nodeType": "Block",
										"src": "15067:48:18",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3770,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3763,
																	"src": "15090:8:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2736",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2736",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3768,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:18",
																	"typeDescriptions": {}
																}
															},
															"id": 3771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3767,
												"id": 3776,
												"nodeType": "Return",
												"src": "15077:31:18"
											}
										]
									},
									"documentation": {
										"id": 3760,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:18",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3763,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:18",
												"nodeType": "VariableDeclaration",
												"scope": 3778,
												"src": "15019:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2736",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3762,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3761,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:18"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2736,
														"src": "15019:8:18"
													},
													"referencedDeclaration": 2736,
													"src": "15019:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2736",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:18"
									},
									"returnParameters": {
										"id": 3767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3778,
												"src": "15061:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:18"
									},
									"scope": 3779,
									"src": "14993:122:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3780,
							"src": "203:14914:18",
							"usedErrors": [
								2731
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:18"
				},
				"id": 18
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3884
						]
					},
					"id": 3885,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:19"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3782,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:19",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3884,
							"linearizedBaseContracts": [
								3884
							],
							"name": "SignedMath",
							"nameLocation": "224:10:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3799,
										"nodeType": "Block",
										"src": "376:37:19",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3792,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3785,
															"src": "393:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3793,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3787,
															"src": "397:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3796,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3787,
														"src": "405:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:19",
													"trueExpression": {
														"id": 3795,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3785,
														"src": "401:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3791,
												"id": 3798,
												"nodeType": "Return",
												"src": "386:20:19"
											}
										]
									},
									"documentation": {
										"id": 3783,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:19",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3785,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3800,
												"src": "325:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3784,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3787,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3800,
												"src": "335:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3786,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:19"
									},
									"returnParameters": {
										"id": 3791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3800,
												"src": "368:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3789,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:19"
									},
									"scope": 3884,
									"src": "312:101:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3817,
										"nodeType": "Block",
										"src": "555:37:19",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3810,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3803,
															"src": "572:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3811,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3805,
															"src": "576:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3814,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3805,
														"src": "584:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:19",
													"trueExpression": {
														"id": 3813,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3803,
														"src": "580:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3809,
												"id": 3816,
												"nodeType": "Return",
												"src": "565:20:19"
											}
										]
									},
									"documentation": {
										"id": 3801,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:19",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3803,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3818,
												"src": "504:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3802,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3805,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3818,
												"src": "514:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3804,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:19"
									},
									"returnParameters": {
										"id": 3809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3818,
												"src": "547:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3807,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:19"
									},
									"scope": 3884,
									"src": "491:101:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3861,
										"nodeType": "Block",
										"src": "797:162:19",
										"statements": [
											{
												"assignments": [
													3829
												],
												"declarations": [
													{
														"constant": false,
														"id": 3829,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:19",
														"nodeType": "VariableDeclaration",
														"scope": 3861,
														"src": "859:8:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3828,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:19",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3842,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3830,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3821,
																	"src": "871:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3831,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3823,
																	"src": "875:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3833,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3834,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3821,
																				"src": "882:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3835,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3823,
																				"src": "886:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3837,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3840,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:19"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3843,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3829,
														"src": "911:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3848,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3829,
																						"src": "931:1:19",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3847,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:19",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3846,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:19",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:19",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3844,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:19",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:19",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3853,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3821,
																				"src": "945:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3854,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3823,
																				"src": "949:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3856,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3858,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:19",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3827,
												"id": 3860,
												"nodeType": "Return",
												"src": "904:48:19"
											}
										]
									},
									"documentation": {
										"id": 3819,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:19",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3821,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3862,
												"src": "746:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3820,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3823,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3862,
												"src": "756:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3822,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:19"
									},
									"returnParameters": {
										"id": 3827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3862,
												"src": "789:6:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3825,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:19"
									},
									"scope": 3884,
									"src": "729:230:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3882,
										"nodeType": "Block",
										"src": "1103:158:19",
										"statements": [
											{
												"id": 3881,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:19",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3872,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3865,
																			"src": "1228:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:19",
																		"subExpression": {
																			"id": 3876,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3865,
																			"src": "1242:1:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:19",
																	"trueExpression": {
																		"id": 3875,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3865,
																		"src": "1237:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3870,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:19",
																	"typeDescriptions": {}
																}
															},
															"id": 3879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3869,
														"id": 3880,
														"nodeType": "Return",
														"src": "1213:31:19"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3863,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:19",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3865,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:19",
												"nodeType": "VariableDeclaration",
												"scope": 3883,
												"src": "1061:8:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3864,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:19"
									},
									"returnParameters": {
										"id": 3869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3883,
												"src": "1094:7:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:19"
									},
									"scope": 3884,
									"src": "1048:213:19",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3885,
							"src": "216:1047:19",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:19"
				},
				"id": 19
			}
		}
	}
}